{"ast":null,"code":"/*!\n* EaselJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function (subclass, superclass) {\n  \"use strict\";\n\n  function o() {\n    this.constructor = subclass;\n  }\n  o.prototype = superclass.prototype;\n  return subclass.prototype = new o();\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function (subclass, prefix) {\n  \"use strict\";\n\n  var subP = subclass.prototype,\n    supP = Object.getPrototypeOf && Object.getPrototypeOf(subP) || subP.__proto__;\n  if (supP) {\n    subP[(prefix += \"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n    for (var n in supP) {\n      if (subP.hasOwnProperty(n) && typeof supP[n] == \"function\") {\n        subP[prefix + n] = supP[n];\n      }\n    }\n  }\n  return subclass;\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement) {\n  \"use strict\";\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (searchElement === array[i]) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n//##############################################################################\n// UID.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n   * and should not be instantiated.\n   * @class UID\n   * @static\n   **/\n  function UID() {\n    throw \"UID cannot be instantiated\";\n  }\n\n  // private static properties:\n  /**\n   * @property _nextID\n   * @type Number\n   * @protected\n   **/\n  UID._nextID = 0;\n\n  // public static methods:\n  /**\n   * Returns the next unique id.\n   * @method get\n   * @return {Number} The next unique id\n   * @static\n   **/\n  UID.get = function () {\n    return UID._nextID++;\n  };\n  createjs.UID = UID;\n})();\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function (fallbackMethod, name) {\n  \"use strict\";\n\n  return function () {\n    var msg = \"Deprecated property or method '\" + name + \"'. See docs for info.\";\n    console && (console.warn ? console.warn(msg) : console.log(msg));\n    return fallbackMethod && fallbackMethod.apply(this, arguments);\n  };\n};\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Contains properties and methods shared by all events for use with\n   * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n   * \n   * Note that Event objects are often reused, so you should never\n   * rely on an event object's state outside of the call stack it was received in.\n   * @class Event\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @constructor\n   **/\n  function Event(type, bubbles, cancelable) {\n    // public properties:\n    /**\n     * The type of event.\n     * @property type\n     * @type String\n     **/\n    this.type = type;\n\n    /**\n     * The object that generated an event.\n     * @property target\n     * @type Object\n     * @default null\n     * @readonly\n    */\n    this.target = null;\n\n    /**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     * @property currentTarget\n     * @type Object\n     * @default null\n     * @readonly\n    */\n    this.currentTarget = null;\n\n    /**\n     * For bubbling events, this indicates the current event phase:<OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     * @property eventPhase\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n    this.eventPhase = 0;\n\n    /**\n     * Indicates whether the event will bubble through the display list.\n     * @property bubbles\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.bubbles = !!bubbles;\n\n    /**\n     * Indicates whether the default behaviour of this event can be cancelled via\n     * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n     * @property cancelable\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.cancelable = !!cancelable;\n\n    /**\n     * The epoch time at which this event was created.\n     * @property timeStamp\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n    this.timeStamp = new Date().getTime();\n\n    /**\n     * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property defaultPrevented\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.defaultPrevented = false;\n\n    /**\n     * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n     * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n     * @property propagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.propagationStopped = false;\n\n    /**\n     * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property immediatePropagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.immediatePropagationStopped = false;\n\n    /**\n     * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n     * @property removed\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.removed = false;\n  }\n  var p = Event.prototype;\n\n  // public methods:\n  /**\n   * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n   * cancel the default behaviour associated with the event.\n   * @method preventDefault\n   **/\n  p.preventDefault = function () {\n    this.defaultPrevented = this.cancelable && true;\n  };\n\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopPropagation\n   **/\n  p.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n   * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopImmediatePropagation\n   **/\n  p.stopImmediatePropagation = function () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  /**\n   * Causes the active listener to be removed via removeEventListener();\n   * \n   * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n   * \t\t\t// do stuff...\n   * \t\t\tevt.remove(); // removes this listener.\n   * \t\t});\n   * \n   * @method remove\n   **/\n  p.remove = function () {\n    this.removed = true;\n  };\n\n  /**\n   * Returns a clone of the Event instance.\n   * @method clone\n   * @return {Event} a clone of the Event instance.\n   **/\n  p.clone = function () {\n    return new Event(this.type, this.bubbles, this.cancelable);\n  };\n\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the instance.\n   * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n    return this;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Event (type=\" + this.type + \")]\";\n  };\n  createjs.Event = Event;\n})();\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\r\n   * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n   *\r\n   * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n   * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n   * \r\n   * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n   * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n   * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n   * \r\n   * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n   * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n   * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n   * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n   * \r\n   * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n   * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n   * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n   *\r\n   * <h4>Example</h4>\r\n   * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n   *\r\n   *      EventDispatcher.initialize(MyClass.prototype);\r\n   *\r\n   * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n   *\r\n   *      instance.addEventListener(\"eventName\", handlerMethod);\r\n   *      function handlerMethod(event) {\r\n   *          console.log(event.target + \" Was Clicked\");\r\n   *      }\r\n   *\r\n   * <b>Maintaining proper scope</b><br />\r\n   * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n   * method to subscribe to events simplifies this.\r\n   *\r\n   *      instance.addEventListener(\"click\", function(event) {\r\n   *          console.log(instance == this); // false, scope is ambiguous.\r\n   *      });\r\n   *      \r\n   *      instance.on(\"click\", function(event) {\r\n   *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n   *      });\r\n   * \r\n   * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n   * scope.\r\n   *\r\n   * <b>Browser support</b>\r\n   * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n   * requires modern browsers (IE9+).\r\n   *      \r\n   *\r\n   * @class EventDispatcher\r\n   * @constructor\r\n   **/\n  function EventDispatcher() {\n    // private properties:\n    /**\r\n     * @protected\r\n     * @property _listeners\r\n     * @type Object\r\n     **/\n    this._listeners = null;\n\n    /**\r\n     * @protected\r\n     * @property _captureListeners\r\n     * @type Object\r\n     **/\n    this._captureListeners = null;\n  }\n  var p = EventDispatcher.prototype;\n\n  // static public methods:\n  /**\r\n   * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n   * \r\n   * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n   * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n   * \r\n   * @method initialize\r\n   * @static\r\n   * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n   * prototype.\r\n   **/\n  EventDispatcher.initialize = function (target) {\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  };\n\n  // public methods:\n  /**\r\n   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n   * multiple callbacks getting fired.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.addEventListener(\"click\", handleClick);\r\n   *      function handleClick(event) {\r\n   *         // Click happened.\r\n   *      }\r\n   *\r\n   * @method addEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function | Object} Returns the listener for chaining or assignment.\r\n   **/\n  p.addEventListener = function (type, listener, useCapture) {\n    var listeners;\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n    var arr = listeners[type];\n    if (arr) {\n      this.removeEventListener(type, listener, useCapture);\n    }\n    arr = listeners[type]; // remove may have deleted the array\n    if (!arr) {\n      listeners[type] = [listener];\n    } else {\n      arr.push(listener);\n    }\n    return listener;\n  };\n\n  /**\r\n   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n   * only run once, associate arbitrary data with the listener, and remove the listener.\r\n   * \r\n   * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n   * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n   * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n   * to `on` with the same params will create multiple listeners.\r\n   * \r\n   * <h4>Example</h4>\r\n   * \r\n   * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n   * \t\tfunction handleClick(evt, data) {\r\n   * \t\t\tdata.count -= 1;\r\n   * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n   * \t\t\tif (data.count == 0) {\r\n   * \t\t\t\talert(\"clicked 3 times!\");\r\n   * \t\t\t\tmyBtn.off(\"click\", listener);\r\n   * \t\t\t\t// alternately: evt.remove();\r\n   * \t\t\t}\r\n   * \t\t}\r\n   * \r\n   * @method on\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n   * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n   * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n   * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n   **/\n  p.on = function (type, listener, scope, once, data, useCapture) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n    scope = scope || this;\n    return this.addEventListener(type, function (evt) {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  };\n\n  /**\r\n   * Removes the specified event listener.\r\n   *\r\n   * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n   * closure will not work.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.removeEventListener(\"click\", handleClick);\r\n   *\r\n   * @method removeEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n  p.removeEventListener = function (type, listener, useCapture) {\n    var listeners = useCapture ? this._captureListeners : this._listeners;\n    if (!listeners) {\n      return;\n    }\n    var arr = listeners[type];\n    if (!arr) {\n      return;\n    }\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete listeners[type];\n        } // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  };\n\n  /**\r\n   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n   * .on method.\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n   * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n   *\r\n   * @method off\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n  p.off = p.removeEventListener;\n\n  /**\r\n   * Removes all listeners for the specified type, or all listeners of all types.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Remove all listeners\r\n   *      displayObject.removeAllEventListeners();\r\n   *\r\n   *      // Remove all click listeners\r\n   *      displayObject.removeAllEventListeners(\"click\");\r\n   *\r\n   * @method removeAllEventListeners\r\n   * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n   **/\n  p.removeAllEventListeners = function (type) {\n    if (!type) {\n      this._listeners = this._captureListeners = null;\n    } else {\n      if (this._listeners) {\n        delete this._listeners[type];\n      }\n      if (this._captureListeners) {\n        delete this._captureListeners[type];\n      }\n    }\n  };\n\n  /**\r\n   * Dispatches the specified event to all listeners.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Use a string event\r\n   *      this.dispatchEvent(\"complete\");\r\n   *\r\n   *      // Use an Event instance\r\n   *      var event = new createjs.Event(\"progress\");\r\n   *      this.dispatchEvent(event);\r\n   *\r\n   * @method dispatchEvent\r\n   * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n   * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n   * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n   * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n   **/\n  p.dispatchEvent = function (eventObj, bubbles, cancelable) {\n    if (typeof eventObj == \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      var listeners = this._listeners;\n      if (!bubbles && (!listeners || !listeners[eventObj])) {\n        return true;\n      }\n      eventObj = new createjs.Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    }\n\n    // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n    try {\n      eventObj.target = this;\n    } catch (e) {} // try/catch allows redispatching of native events\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      var top = this,\n        list = [top];\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n      var i,\n        l = list.length;\n\n      // capture & atTarget\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      }\n      // bubbling\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n    return !eventObj.defaultPrevented;\n  };\n\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type.\r\n   * @method hasEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n   **/\n  p.hasEventListener = function (type) {\n    var listeners = this._listeners,\n      captureListeners = this._captureListeners;\n    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  };\n\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n   * specified type is dispatched from this object, it will trigger at least one listener.\r\n   * \r\n   * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n   * event flow for a listener, not just this object.\r\n   * @method willTrigger\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n   **/\n  p.willTrigger = function (type) {\n    var o = this;\n    while (o) {\n      if (o.hasEventListener(type)) {\n        return true;\n      }\n      o = o.parent;\n    }\n    return false;\n  };\n\n  /**\r\n   * @method toString\r\n   * @return {String} a string representation of the instance.\r\n   **/\n  p.toString = function () {\n    return \"[EventDispatcher]\";\n  };\n\n  // private methods:\n  /**\r\n   * @method _dispatchEvent\r\n   * @param {Object | Event} eventObj\r\n   * @param {Object} eventPhase\r\n   * @protected\r\n   **/\n  p._dispatchEvent = function (eventObj, eventPhase) {\n    var l,\n      arr,\n      listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;\n    if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {\n      try {\n        eventObj.currentTarget = this;\n      } catch (e) {}\n      try {\n        eventObj.eventPhase = eventPhase | 0;\n      } catch (e) {}\n      eventObj.removed = false;\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n      for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        var o = arr[i];\n        if (o.handleEvent) {\n          o.handleEvent(eventObj);\n        } else {\n          o(eventObj);\n        }\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase == 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n    if (eventPhase === 2) {\n      this._dispatchEvent(eventObj, 2.1);\n    }\n  };\n  createjs.EventDispatcher = EventDispatcher;\n})();\n\n//##############################################################################\n// Ticker.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n   * event to be notified when a set time interval has elapsed.\n   *\n   * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n   * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n   * can not be instantiated.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      function handleTick(event) {\n   *          // Actions carried out each tick (aka frame)\n   *          if (!event.paused) {\n   *              // Actions carried out when the Ticker is not paused.\n   *          }\n   *      }\n   *\n   * @class Ticker\n   * @uses EventDispatcher\n   * @static\n   **/\n  function Ticker() {\n    throw \"Ticker cannot be instantiated.\";\n  }\n\n  // constants:\n  /**\n   * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n   * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n   * dispatches the tick when the time is within a certain threshold.\n   *\n   * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n   * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n   * gaining the benefits of that API (screen synch, background throttling).\n   *\n   * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n   * framerates of 10, 12, 15, 20, and 30 work well.\n   *\n   * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n   * supported.\n   * @property RAF_SYNCHED\n   * @static\n   * @type {String}\n   * @default \"synched\"\n   * @readonly\n   **/\n  Ticker.RAF_SYNCHED = \"synched\";\n\n  /**\n   * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n   * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n   * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event object's \"delta\" properties to make this easier.\n   *\n   * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n   * supported.\n   * @property RAF\n   * @static\n   * @type {String}\n   * @default \"raf\"\n   * @readonly\n   **/\n  Ticker.RAF = \"raf\";\n\n  /**\n   * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n   * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n   * @property TIMEOUT\n   * @static\n   * @type {String}\n   * @default \"timeout\"\n   * @readonly\n   **/\n  Ticker.TIMEOUT = \"timeout\";\n\n  // static events:\n  /**\n   * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n   * {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      function handleTick(event) {\n   *          console.log(\"Paused:\", event.paused, event.delta);\n   *      }\n   *\n   * @event tick\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Boolean} paused Indicates whether the ticker is currently paused.\n   * @param {Number} delta The time elapsed in ms since the last tick.\n   * @param {Number} time The total time in ms since Ticker was initialized.\n   * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n   * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n   * @since 0.6.0\n   */\n\n  // public static properties:\n  /**\n   * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n   * {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}}, and\n   * {{#crossLink \"Ticker/RAF_SYNCHED:property\"}}{{/crossLink}} for mode details.\n   * @property timingMode\n   * @static\n   * @type {String}\n   * @default Ticker.TIMEOUT\n   **/\n  Ticker.timingMode = null;\n\n  /**\n   * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n   * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n   * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n   * (ex. maxDelta=50 when running at 40fps).\n   * \n   * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n   * when using both delta and other values.\n   * \n   * If 0, there is no maximum.\n   * @property maxDelta\n   * @static\n   * @type {number}\n   * @default 0\n   */\n  Ticker.maxDelta = 0;\n\n  /**\n   * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n   * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n   * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n   * info.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      createjs.Ticker.paused = true;\n   *      function handleTick(event) {\n   *          console.log(event.paused,\n   *          \tcreatejs.Ticker.getTime(false),\n   *          \tcreatejs.Ticker.getTime(true));\n   *      }\n   *\n   * @property paused\n   * @static\n   * @type {Boolean}\n   * @default false\n   **/\n  Ticker.paused = false;\n\n  // mix-ins:\n  // EventDispatcher methods:\n  Ticker.removeEventListener = null;\n  Ticker.removeAllEventListeners = null;\n  Ticker.dispatchEvent = null;\n  Ticker.hasEventListener = null;\n  Ticker._listeners = null;\n  createjs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n  Ticker._addEventListener = Ticker.addEventListener;\n  Ticker.addEventListener = function () {\n    !Ticker._inited && Ticker.init();\n    return Ticker._addEventListener.apply(Ticker, arguments);\n  };\n\n  // private static properties:\n  /**\n   * @property _inited\n   * @static\n   * @type {Boolean}\n   * @private\n   **/\n  Ticker._inited = false;\n\n  /**\n   * @property _startTime\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._startTime = 0;\n\n  /**\n   * @property _pausedTime\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._pausedTime = 0;\n\n  /**\n   * The number of ticks that have passed\n   * @property _ticks\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._ticks = 0;\n\n  /**\n   * The number of ticks that have passed while Ticker has been paused\n   * @property _pausedTicks\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._pausedTicks = 0;\n\n  /**\n   * @property _interval\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._interval = 50;\n\n  /**\n   * @property _lastTime\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._lastTime = 0;\n\n  /**\n   * @property _times\n   * @static\n   * @type {Array}\n   * @private\n   **/\n  Ticker._times = null;\n\n  /**\n   * @property _tickTimes\n   * @static\n   * @type {Array}\n   * @private\n   **/\n  Ticker._tickTimes = null;\n\n  /**\n   * Stores the timeout or requestAnimationFrame id.\n   * @property _timerId\n   * @static\n   * @type {Number}\n   * @private\n   **/\n  Ticker._timerId = null;\n\n  /**\n   * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n   * if that property changed and a tick hasn't fired.\n   * @property _raf\n   * @static\n   * @type {Boolean}\n   * @private\n   **/\n  Ticker._raf = true;\n\n  // static getter / setters:\n  /**\n   * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n   * @method _setInterval\n   * @private\n   * @static\n   * @param {Number} interval\n   **/\n  Ticker._setInterval = function (interval) {\n    Ticker._interval = interval;\n    if (!Ticker._inited) {\n      return;\n    }\n    Ticker._setupTick();\n  };\n  // Ticker.setInterval is @deprecated. Remove for 1.1+\n  Ticker.setInterval = createjs.deprecate(Ticker._setInterval, \"Ticker.setInterval\");\n\n  /**\n   * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n   * @method _getInterval\n   * @private\n   * @static\n   * @return {Number}\n   **/\n  Ticker._getInterval = function () {\n    return Ticker._interval;\n  };\n  // Ticker.getInterval is @deprecated. Remove for 1.1+\n  Ticker.getInterval = createjs.deprecate(Ticker._getInterval, \"Ticker.getInterval\");\n\n  /**\n   * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n   * @method _setFPS\n   * @private\n   * @static\n   * @param {Number} value\n   **/\n  Ticker._setFPS = function (value) {\n    Ticker._setInterval(1000 / value);\n  };\n  // Ticker.setFPS is @deprecated. Remove for 1.1+\n  Ticker.setFPS = createjs.deprecate(Ticker._setFPS, \"Ticker.setFPS\");\n\n  /**\n   * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n   * @method _getFPS\n   * @static\n   * @private\n   * @return {Number}\n   **/\n  Ticker._getFPS = function () {\n    return 1000 / Ticker._interval;\n  };\n  // Ticker.getFPS is @deprecated. Remove for 1.1+\n  Ticker.getFPS = createjs.deprecate(Ticker._getFPS, \"Ticker.getFPS\");\n\n  /**\n   * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n   * Note that actual time between ticks may be more than specified depending on CPU load.\n   * This property is ignored if the ticker is using the `RAF` timing mode.\n   * @property interval\n   * @static\n   * @type {Number}\n   **/\n\n  /**\n   * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n   * `framerate == 1000/interval`.\n   * @property framerate\n   * @static\n   * @type {Number}\n   **/\n  try {\n    Object.defineProperties(Ticker, {\n      interval: {\n        get: Ticker._getInterval,\n        set: Ticker._setInterval\n      },\n      framerate: {\n        get: Ticker._getFPS,\n        set: Ticker._setFPS\n      }\n    });\n  } catch (e) {\n    console.log(e);\n  }\n\n  // public static methods:\n  /**\n   * Starts the tick. This is called automatically when the first listener is added.\n   * @method init\n   * @static\n   **/\n  Ticker.init = function () {\n    if (Ticker._inited) {\n      return;\n    }\n    Ticker._inited = true;\n    Ticker._times = [];\n    Ticker._tickTimes = [];\n    Ticker._startTime = Ticker._getTime();\n    Ticker._times.push(Ticker._lastTime = 0);\n    Ticker.interval = Ticker._interval;\n  };\n\n  /**\n   * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n   * @method reset\n   * @static\n   **/\n  Ticker.reset = function () {\n    if (Ticker._raf) {\n      var f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n      f && f(Ticker._timerId);\n    } else {\n      clearTimeout(Ticker._timerId);\n    }\n    Ticker.removeAllEventListeners(\"tick\");\n    Ticker._timerId = Ticker._times = Ticker._tickTimes = null;\n    Ticker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n    Ticker._inited = false;\n  };\n\n  /**\n   * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n   * because it only measures the time spent within the tick execution stack. \n   * \n   * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n   * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n   * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n   *\n   * Example 2: With a target FPS of 30, {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} returns 10fps, which\n   * indicates an average of 100ms between the end of one tick and the end of the next. However, {{#crossLink \"Ticker/getMeasuredTickTime\"}}{{/crossLink}}\n   * returns 20ms. This would indicate that something other than the tick is using ~80ms (another script, DOM\n   * rendering, etc).\n   * @method getMeasuredTickTime\n   * @static\n   * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n   * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n   * @return {Number} The average time spent in a tick in milliseconds.\n   **/\n  Ticker.getMeasuredTickTime = function (ticks) {\n    var ttl = 0,\n      times = Ticker._tickTimes;\n    if (!times || times.length < 1) {\n      return -1;\n    }\n\n    // by default, calculate average for the past ~1 second:\n    ticks = Math.min(times.length, ticks || Ticker._getFPS() | 0);\n    for (var i = 0; i < ticks; i++) {\n      ttl += times[i];\n    }\n    return ttl / ticks;\n  };\n\n  /**\n   * Returns the actual frames / ticks per second.\n   * @method getMeasuredFPS\n   * @static\n   * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n   * Defaults to the number of ticks per second.\n   * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n   * from the target frames per second.\n   **/\n  Ticker.getMeasuredFPS = function (ticks) {\n    var times = Ticker._times;\n    if (!times || times.length < 2) {\n      return -1;\n    }\n\n    // by default, calculate fps for the past ~1 second:\n    ticks = Math.min(times.length - 1, ticks || Ticker._getFPS() | 0);\n    return 1000 / ((times[0] - times[ticks]) / ticks);\n  };\n\n  /**\n   * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n   * Returns -1 if Ticker has not been initialized. For example, you could use\n   * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n   * @method getTime\n   * @static\n   * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n   * If false, the value returned will be total time elapsed since the first tick event listener was added.\n   * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n   **/\n  Ticker.getTime = function (runTime) {\n    return Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n  };\n\n  /**\n   * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event object.\n   * @method getEventTime\n   * @static\n   * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n   * @returns {number} The time or runTime property from the most recent tick event or -1.\n   */\n  Ticker.getEventTime = function (runTime) {\n    return Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n  };\n\n  /**\n   * Returns the number of ticks that have been broadcast by Ticker.\n   * @method getTicks\n   * @static\n   * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n   * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n   * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n   * value. The default value is false.\n   * @return {Number} of ticks that have been broadcast.\n   **/\n  Ticker.getTicks = function (pauseable) {\n    return Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n  };\n\n  // private static methods:\n  /**\n   * @method _handleSynch\n   * @static\n   * @private\n   **/\n  Ticker._handleSynch = function () {\n    Ticker._timerId = null;\n    Ticker._setupTick();\n\n    // run if enough time has elapsed, with a little bit of flexibility to be early:\n    if (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval - 1) * 0.97) {\n      Ticker._tick();\n    }\n  };\n\n  /**\n   * @method _handleRAF\n   * @static\n   * @private\n   **/\n  Ticker._handleRAF = function () {\n    Ticker._timerId = null;\n    Ticker._setupTick();\n    Ticker._tick();\n  };\n\n  /**\n   * @method _handleTimeout\n   * @static\n   * @private\n   **/\n  Ticker._handleTimeout = function () {\n    Ticker._timerId = null;\n    Ticker._setupTick();\n    Ticker._tick();\n  };\n\n  /**\n   * @method _setupTick\n   * @static\n   * @private\n   **/\n  Ticker._setupTick = function () {\n    if (Ticker._timerId != null) {\n      return;\n    } // avoid duplicates\n\n    var mode = Ticker.timingMode;\n    if (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n      var f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n      if (f) {\n        Ticker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n        Ticker._raf = true;\n        return;\n      }\n    }\n    Ticker._raf = false;\n    Ticker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n  };\n\n  /**\n   * @method _tick\n   * @static\n   * @private\n   **/\n  Ticker._tick = function () {\n    var paused = Ticker.paused;\n    var time = Ticker._getTime();\n    var elapsedTime = time - Ticker._lastTime;\n    Ticker._lastTime = time;\n    Ticker._ticks++;\n    if (paused) {\n      Ticker._pausedTicks++;\n      Ticker._pausedTime += elapsedTime;\n    }\n    if (Ticker.hasEventListener(\"tick\")) {\n      var event = new createjs.Event(\"tick\");\n      var maxDelta = Ticker.maxDelta;\n      event.delta = maxDelta && elapsedTime > maxDelta ? maxDelta : elapsedTime;\n      event.paused = paused;\n      event.time = time;\n      event.runTime = time - Ticker._pausedTime;\n      Ticker.dispatchEvent(event);\n    }\n    Ticker._tickTimes.unshift(Ticker._getTime() - time);\n    while (Ticker._tickTimes.length > 100) {\n      Ticker._tickTimes.pop();\n    }\n    Ticker._times.unshift(time);\n    while (Ticker._times.length > 100) {\n      Ticker._times.pop();\n    }\n  };\n\n  /**\n   * @method _getTime\n   * @static\n   * @private\n   **/\n  var w = window,\n    now = w.performance.now || w.performance.mozNow || w.performance.msNow || w.performance.oNow || w.performance.webkitNow;\n  Ticker._getTime = function () {\n    return (now && now.call(w.performance) || new Date().getTime()) - Ticker._startTime;\n  };\n  createjs.Ticker = Ticker;\n})();\n\n//##############################################################################\n// VideoBuffer.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n   * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n   * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n   * \n   * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n   * \tvar myBitmap = new Bitmap(myBuffer);\n   * \n   * @class VideoBuffer\n   * @param {HTMLVideoElement} video The HTML video element to buffer.\n   * @constructor\n   **/\n  function VideoBuffer(video) {\n    // private properties:\n    /**\n     * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n     * @property readyState\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this.readyState = video.readyState;\n\n    /**\n     * @property _video\n     * @protected\n     * @type {HTMLVideoElement}\n     * @default 0\n     **/\n    this._video = video;\n\n    /**\n     * @property _canvas\n     * @protected\n     * @type {HTMLCanvasElement}\n     * @default 0\n     **/\n    this._canvas = null;\n\n    /**\n     * @property _lastTime\n     * @protected\n     * @type {Number}\n     * @default -1\n     **/\n    this._lastTime = -1;\n    if (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    } //once:true isn't supported everywhere, but its a non-critical optimization here.\n  }\n\n  var p = VideoBuffer.prototype;\n\n  // public methods:\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n   * @method getImage\n   **/\n  p.getImage = function () {\n    if (this.readyState < 2) {\n      return;\n    }\n    var canvas = this._canvas,\n      video = this._video;\n    if (!canvas) {\n      canvas = this._canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n    }\n    if (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n      var ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      this._lastTime = video.currentTime;\n    }\n    return canvas;\n  };\n\n  // private methods:\n  /**\n   * @method _videoReady\n   * @protected\n   **/\n  p._videoReady = function () {\n    this.readyState = 2;\n  };\n  createjs.VideoBuffer = VideoBuffer;\n})();\n\n//##############################################################################\n// MouseEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n   * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n   * @class MouseEvent\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @param {Number} stageX The normalized x position relative to the stage.\n   * @param {Number} stageY The normalized y position relative to the stage.\n   * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n   * @param {Number} pointerID The unique id for the pointer.\n   * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n   * @param {Number} rawX The raw x position relative to the stage.\n   * @param {Number} rawY The raw y position relative to the stage.\n   * @param {DisplayObject} relatedTarget The secondary target for the event.\n   * @extends Event\n   * @constructor\n   **/\n  function MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n    this.Event_constructor(type, bubbles, cancelable);\n\n    // public properties:\n    /**\n     * The normalized x position on the stage. This will always be within the range 0 to stage width.\n     * @property stageX\n     * @type Number\n    */\n    this.stageX = stageX;\n\n    /**\n     * The normalized y position on the stage. This will always be within the range 0 to stage height.\n     * @property stageY\n     * @type Number\n     **/\n    this.stageY = stageY;\n\n    /**\n     * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @property rawX\n     * @type Number\n    */\n    this.rawX = rawX == null ? stageX : rawX;\n\n    /**\n     * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @property rawY\n     * @type Number\n    */\n    this.rawY = rawY == null ? stageY : rawY;\n\n    /**\n     * The native MouseEvent generated by the browser. The properties and API for this\n     * event may differ between browsers. This property will be null if the\n     * EaselJS property was not directly generated from a native MouseEvent.\n     * @property nativeEvent\n     * @type HtmlMouseEvent\n     * @default null\n     **/\n    this.nativeEvent = nativeEvent;\n\n    /**\n     * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n     * supplied id value.\n     * @property pointerID\n     * @type {Number}\n     */\n    this.pointerID = pointerID;\n\n    /**\n     * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n     * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n     * @property primary\n     * @type {Boolean}\n     */\n    this.primary = !!primary;\n\n    /**\n     * The secondary target for the event, if applicable. This is used for mouseout/rollout\n     * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n     * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n     * \n     * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n     * @property relatedTarget\n     * @type {DisplayObject}\n     */\n    this.relatedTarget = relatedTarget;\n  }\n  var p = createjs.extend(MouseEvent, createjs.Event);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  // getter / setters:\n  /**\n   * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n   * @property localX\n   * @type {Number}\n   * @readonly\n   */\n  p._get_localX = function () {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n  };\n\n  /**\n   * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n   * @property localY\n   * @type {Number}\n   * @readonly\n   */\n  p._get_localY = function () {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n  };\n\n  /**\n   * Indicates whether the event was generated by a touch input (versus a mouse input).\n   * @property isTouch\n   * @type {Boolean}\n   * @readonly\n   */\n  p._get_isTouch = function () {\n    return this.pointerID !== -1;\n  };\n  try {\n    Object.defineProperties(p, {\n      localX: {\n        get: p._get_localX\n      },\n      localY: {\n        get: p._get_localY\n      },\n      isTouch: {\n        get: p._get_isTouch\n      }\n    });\n  } catch (e) {} // TODO: use Log\n\n  // public methods:\n  /**\n   * Returns a clone of the MouseEvent instance.\n   * @method clone\n   * @return {MouseEvent} a clone of the MouseEvent instance.\n   **/\n  p.clone = function () {\n    return new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[MouseEvent (type=\" + this.type + \" stageX=\" + this.stageX + \" stageY=\" + this.stageY + \")]\";\n  };\n  createjs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n})();\n\n//##############################################################################\n// Matrix2D.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n   *\n   * This matrix can be visualized as:\n   *\n   * \t[ a  c  tx\n   * \t  b  d  ty\n   * \t  0  0  1  ]\n   *\n   * Note the locations of b and c.\n   *\n   * @class Matrix2D\n   * @param {Number} [a=1] Specifies the a property for the new matrix.\n   * @param {Number} [b=0] Specifies the b property for the new matrix.\n   * @param {Number} [c=0] Specifies the c property for the new matrix.\n   * @param {Number} [d=1] Specifies the d property for the new matrix.\n   * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n   * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n   * @constructor\n   **/\n  function Matrix2D(a, b, c, d, tx, ty) {\n    this.setValues(a, b, c, d, tx, ty);\n\n    // public properties:\n    // assigned in the setValues method.\n    /**\n     * Position (0, 0) in a 3x3 affine transformation matrix.\n     * @property a\n     * @type Number\n     **/\n\n    /**\n     * Position (0, 1) in a 3x3 affine transformation matrix.\n     * @property b\n     * @type Number\n     **/\n\n    /**\n     * Position (1, 0) in a 3x3 affine transformation matrix.\n     * @property c\n     * @type Number\n     **/\n\n    /**\n     * Position (1, 1) in a 3x3 affine transformation matrix.\n     * @property d\n     * @type Number\n     **/\n\n    /**\n     * Position (2, 0) in a 3x3 affine transformation matrix.\n     * @property tx\n     * @type Number\n     **/\n\n    /**\n     * Position (2, 1) in a 3x3 affine transformation matrix.\n     * @property ty\n     * @type Number\n     **/\n  }\n\n  var p = Matrix2D.prototype;\n\n  // constants:\n  /**\n   * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n   * @property DEG_TO_RAD\n   * @static\n   * @final\n   * @type Number\n   * @readonly\n   **/\n  Matrix2D.DEG_TO_RAD = Math.PI / 180;\n\n  // static public properties:\n  /**\n   * An identity matrix, representing a null transformation.\n   * @property identity\n   * @static\n   * @type Matrix2D\n   * @readonly\n   **/\n  Matrix2D.identity = null; // set at bottom of class definition.\n\n  // public methods:\n  /**\n   * Sets the specified values on this instance. \n   * @method setValues\n   * @param {Number} [a=1] Specifies the a property for the new matrix.\n   * @param {Number} [b=0] Specifies the b property for the new matrix.\n   * @param {Number} [c=0] Specifies the c property for the new matrix.\n   * @param {Number} [d=1] Specifies the d property for the new matrix.\n   * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n   * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n   * @return {Matrix2D} This instance. Useful for chaining method calls.\n  */\n  p.setValues = function (a, b, c, d, tx, ty) {\n    // don't forget to update docs in the constructor if these change:\n    this.a = a == null ? 1 : a;\n    this.b = b || 0;\n    this.c = c || 0;\n    this.d = d == null ? 1 : d;\n    this.tx = tx || 0;\n    this.ty = ty || 0;\n    return this;\n  };\n\n  /**\n   * Appends the specified matrix properties to this matrix. All parameters are required.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @method append\n   * @param {Number} a\n   * @param {Number} b\n   * @param {Number} c\n   * @param {Number} d\n   * @param {Number} tx\n   * @param {Number} ty\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.append = function (a, b, c, d, tx, ty) {\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    if (a != 1 || b != 0 || c != 0 || d != 1) {\n      this.a = a1 * a + c1 * b;\n      this.b = b1 * a + d1 * b;\n      this.c = a1 * c + c1 * d;\n      this.d = b1 * c + d1 * d;\n    }\n    this.tx = a1 * tx + c1 * ty + this.tx;\n    this.ty = b1 * tx + d1 * ty + this.ty;\n    return this;\n  };\n\n  /**\n   * Prepends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * All parameters are required.\n   * @method prepend\n   * @param {Number} a\n   * @param {Number} b\n   * @param {Number} c\n   * @param {Number} d\n   * @param {Number} tx\n   * @param {Number} ty\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.prepend = function (a, b, c, d, tx, ty) {\n    var a1 = this.a;\n    var c1 = this.c;\n    var tx1 = this.tx;\n    this.a = a * a1 + c * this.b;\n    this.b = b * a1 + d * this.b;\n    this.c = a * c1 + c * this.d;\n    this.d = b * c1 + d * this.d;\n    this.tx = a * tx1 + c * this.ty + tx;\n    this.ty = b * tx1 + d * this.ty + ty;\n    return this;\n  };\n\n  /**\n   * Appends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @method appendMatrix\n   * @param {Matrix2D} matrix\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.appendMatrix = function (matrix) {\n    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n\n  /**\n   * Prepends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * For example, you could calculate the combined transformation for a child object using:\n   * \n   * \tvar o = myDisplayObject;\n   * \tvar mtx = o.getMatrix();\n   * \twhile (o = o.parent) {\n   * \t\t// prepend each parent's transformation in turn:\n   * \t\to.prependMatrix(o.getMatrix());\n   * \t}\n   * @method prependMatrix\n   * @param {Matrix2D} matrix\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.prependMatrix = function (matrix) {\n    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n   * For example, you can use this to generate a matrix representing the transformations of a display object:\n   * \n   * \tvar mtx = new createjs.Matrix2D();\n   * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n   * @method appendTransform\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} regX Optional.\n   * @param {Number} regY Optional.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.appendTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (rotation % 360) {\n      var r = rotation * Matrix2D.DEG_TO_RAD;\n      var cos = Math.cos(r);\n      var sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single append operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n    } else {\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n    if (regX || regY) {\n      // append the registration offset:\n      this.tx -= regX * this.a + regY * this.c;\n      this.ty -= regX * this.b + regY * this.d;\n    }\n    return this;\n  };\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n   * For example, you could calculate the combined transformation for a child object using:\n   * \n   * \tvar o = myDisplayObject;\n   * \tvar mtx = new createjs.Matrix2D();\n   * \tdo  {\n   * \t\t// prepend each parent's transformation in turn:\n   * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n   * \t} while (o = o.parent);\n   * \t\n   * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n   * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n   * @method prependTransform\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} regX Optional.\n   * @param {Number} regY Optional.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.prependTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (rotation % 360) {\n      var r = rotation * Matrix2D.DEG_TO_RAD;\n      var cos = Math.cos(r);\n      var sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n    if (regX || regY) {\n      // prepend the registration offset:\n      this.tx -= regX;\n      this.ty -= regY;\n    }\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single prepend operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n    } else {\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n    return this;\n  };\n\n  /**\n   * Applies a clockwise rotation transformation to the matrix.\n   * @method rotate\n   * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.rotate = function (angle) {\n    angle = angle * Matrix2D.DEG_TO_RAD;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var a1 = this.a;\n    var b1 = this.b;\n    this.a = a1 * cos + this.c * sin;\n    this.b = b1 * cos + this.d * sin;\n    this.c = -a1 * sin + this.c * cos;\n    this.d = -b1 * sin + this.d * cos;\n    return this;\n  };\n\n  /**\n   * Applies a skew transformation to the matrix.\n   * @method skew\n   * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n   * @param {Number} skewY The amount to skew vertically in degrees.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n  */\n  p.skew = function (skewX, skewY) {\n    skewX = skewX * Matrix2D.DEG_TO_RAD;\n    skewY = skewY * Matrix2D.DEG_TO_RAD;\n    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n    return this;\n  };\n\n  /**\n   * Applies a scale transformation to the matrix.\n   * @method scale\n   * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n   * @param {Number} y The amount to scale vertically.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.scale = function (x, y) {\n    this.a *= x;\n    this.b *= x;\n    this.c *= y;\n    this.d *= y;\n    //this.tx *= x;\n    //this.ty *= y;\n    return this;\n  };\n\n  /**\n   * Translates the matrix on the x and y axes.\n   * @method translate\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.translate = function (x, y) {\n    this.tx += this.a * x + this.c * y;\n    this.ty += this.b * x + this.d * y;\n    return this;\n  };\n\n  /**\n   * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n   * @method identity\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.identity = function () {\n    this.a = this.d = 1;\n    this.b = this.c = this.tx = this.ty = 0;\n    return this;\n  };\n\n  /**\n   * Inverts the matrix, causing it to perform the opposite transformation.\n   * @method invert\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n   **/\n  p.invert = function () {\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    var tx1 = this.tx;\n    var n = a1 * d1 - b1 * c1;\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  };\n\n  /**\n   * Returns true if the matrix is an identity matrix.\n   * @method isIdentity\n   * @return {Boolean}\n   **/\n  p.isIdentity = function () {\n    return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n  };\n\n  /**\n   * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n   * @method equals\n   * @param {Matrix2D} matrix The matrix to compare.\n   * @return {Boolean}\n   **/\n  p.equals = function (matrix) {\n    return this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n  };\n\n  /**\n   * Transforms a point according to this matrix.\n   * @method transformPoint\n   * @param {Number} x The x component of the point to transform.\n   * @param {Number} y The y component of the point to transform.\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n   * @return {Point} This matrix. Useful for chaining method calls.\n   **/\n  p.transformPoint = function (x, y, pt) {\n    pt = pt || {};\n    pt.x = x * this.a + y * this.c + this.tx;\n    pt.y = x * this.b + y * this.d + this.ty;\n    return pt;\n  };\n\n  /**\n   * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n   * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n   * results.\n   * @method decompose\n   * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n   * @return {Object} The target, or a new generic object with the transform properties applied.\n  */\n  p.decompose = function (target) {\n    // TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n    if (target == null) {\n      target = {};\n    }\n    target.x = this.tx;\n    target.y = this.ty;\n    target.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n    target.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n    var skewX = Math.atan2(-this.c, this.d);\n    var skewY = Math.atan2(this.b, this.a);\n    var delta = Math.abs(1 - skewX / skewY);\n    if (delta < 0.00001) {\n      // effectively identical, can use rotation:\n      target.rotation = skewY / Matrix2D.DEG_TO_RAD;\n      if (this.a < 0 && this.d >= 0) {\n        target.rotation += target.rotation <= 0 ? 180 : -180;\n      }\n      target.skewX = target.skewY = 0;\n    } else {\n      target.skewX = skewX / Matrix2D.DEG_TO_RAD;\n      target.skewY = skewY / Matrix2D.DEG_TO_RAD;\n    }\n    return target;\n  };\n\n  /**\n   * Copies all properties from the specified matrix to this matrix.\n   * @method copy\n   * @param {Matrix2D} matrix The matrix to copy properties from.\n   * @return {Matrix2D} This matrix. Useful for chaining method calls.\n  */\n  p.copy = function (matrix) {\n    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  };\n\n  /**\n   * Returns a clone of the Matrix2D instance.\n   * @method clone\n   * @return {Matrix2D} a clone of the Matrix2D instance.\n   **/\n  p.clone = function () {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Matrix2D (a=\" + this.a + \" b=\" + this.b + \" c=\" + this.c + \" d=\" + this.d + \" tx=\" + this.tx + \" ty=\" + this.ty + \")]\";\n  };\n\n  // this has to be populated after the class is defined:\n  Matrix2D.identity = new Matrix2D();\n  createjs.Matrix2D = Matrix2D;\n})();\n\n//##############################################################################\n// DisplayProps.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * Used for calculating and encapsulating display related properties.\n   * @class DisplayProps\n   * @param {Number} [visible=true] Visible value.\n   * @param {Number} [alpha=1] Alpha value.\n   * @param {Number} [shadow=null] A Shadow instance or null.\n   * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n   * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n   * @constructor\n   **/\n  function DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n    this.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n    // public properties:\n    // assigned in the setValues method.\n    /**\n     * Property representing the alpha that will be applied to a display object.\n     * @property alpha\n     * @type Number\n     **/\n\n    /**\n     * Property representing the shadow that will be applied to a display object.\n     * @property shadow\n     * @type Shadow\n     **/\n\n    /**\n     * Property representing the compositeOperation that will be applied to a display object.\n     * You can find a list of valid composite operations at:\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n     * @property compositeOperation\n     * @type String\n     **/\n\n    /**\n     * Property representing the value for visible that will be applied to a display object.\n     * @property visible\n     * @type Boolean\n     **/\n\n    /**\n     * The transformation matrix that will be applied to a display object.\n     * @property matrix\n     * @type Matrix2D\n     **/\n  }\n\n  var p = DisplayProps.prototype;\n\n  // initialization:\n  /**\n   * Reinitializes the instance with the specified values.\n   * @method setValues\n   * @param {Number} [visible=true] Visible value.\n   * @param {Number} [alpha=1] Alpha value.\n   * @param {Number} [shadow=null] A Shadow instance or null.\n   * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n   * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.visible = visible == null ? true : !!visible;\n    this.alpha = alpha == null ? 1 : alpha;\n    this.shadow = shadow;\n    this.compositeOperation = compositeOperation;\n    this.matrix = matrix || this.matrix && this.matrix.identity() || new createjs.Matrix2D();\n    return this;\n  };\n\n  // public methods:\n  /**\n   * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n   * @method append\n   * @param {Boolean} visible desired visible value\n   * @param {Number} alpha desired alpha value\n   * @param {Shadow} shadow desired shadow value\n   * @param {String} compositeOperation desired composite operation value\n   * @param {Matrix2D} [matrix] a Matrix2D instance\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.append = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = shadow || this.shadow;\n    this.compositeOperation = compositeOperation || this.compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.appendMatrix(matrix);\n    return this;\n  };\n\n  /**\n   * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n   * For example, to get the combined display properties that would be applied to a child, you could use:\n   * \n   * \tvar o = myDisplayObject;\n   * \tvar props = new createjs.DisplayProps();\n   * \tdo {\n   * \t\t// prepend each parent's props in turn:\n   * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n   * \t} while (o = o.parent);\n   * \t\n   * @method prepend\n   * @param {Boolean} visible desired visible value\n   * @param {Number} alpha desired alpha value\n   * @param {Shadow} shadow desired shadow value\n   * @param {String} compositeOperation desired composite operation value\n   * @param {Matrix2D} [matrix] a Matrix2D instance\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.prepend = function (visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = this.shadow || shadow;\n    this.compositeOperation = this.compositeOperation || compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.prependMatrix(matrix);\n    return this;\n  };\n\n  /**\n   * Resets this instance and its matrix to default values.\n   * @method identity\n   * @return {DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.identity = function () {\n    this.visible = true;\n    this.alpha = 1;\n    this.shadow = this.compositeOperation = null;\n    this.matrix.identity();\n    return this;\n  };\n\n  /**\n   * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n   * @method clone\n   * @return {DisplayProps} a clone of the DisplayProps instance.\n   **/\n  p.clone = function () {\n    return new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n  };\n\n  // private methods:\n\n  createjs.DisplayProps = DisplayProps;\n})();\n\n//##############################################################################\n// Point.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Represents a point on a 2 dimensional x / y coordinate system.\n   *\n   * <h4>Example</h4>\n   * \n   *      var point = new createjs.Point(0, 100);\n   * \n   * @class Point\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @constructor\n   **/\n  function Point(x, y) {\n    this.setValues(x, y);\n\n    // public properties:\n    // assigned in the setValues method.\n    /**\n     * X position.\n     * @property x\n     * @type Number\n     **/\n\n    /**\n     * Y position.\n     * @property y\n     * @type Number\n     **/\n  }\n\n  var p = Point.prototype;\n\n  // public methods:\n  /** \n   * Sets the specified values on this instance.\n   * @method setValues\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @return {Point} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.setValues = function (x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n    return this;\n  };\n\n  /**\n   * Copies all properties from the specified point to this point.\n   * @method copy\n   * @param {Point} point The point to copy properties from.\n   * @return {Point} This point. Useful for chaining method calls.\n   * @chainable\n  */\n  p.copy = function (point) {\n    this.x = point.x;\n    this.y = point.y;\n    return this;\n  };\n\n  /**\n   * Returns a clone of the Point instance.\n   * @method clone\n   * @return {Point} a clone of the Point instance.\n   **/\n  p.clone = function () {\n    return new Point(this.x, this.y);\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Point (x=\" + this.x + \" y=\" + this.y + \")]\";\n  };\n  createjs.Point = Point;\n})();\n\n//##############################################################################\n// Rectangle.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n   *\n   * <h4>Example</h4>\n   *\n   *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n   *\n   * @class Rectangle\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @param {Number} [width=0] The width of the Rectangle.\n   * @param {Number} [height=0] The height of the Rectangle.\n   * @constructor\n   **/\n  function Rectangle(x, y, width, height) {\n    this.setValues(x, y, width, height);\n\n    // public properties:\n    // assigned in the setValues method.\n    /**\n     * X position.\n     * @property x\n     * @type Number\n     **/\n\n    /**\n     * Y position.\n     * @property y\n     * @type Number\n     **/\n\n    /**\n     * Width.\n     * @property width\n     * @type Number\n     **/\n\n    /**\n     * Height.\n     * @property height\n     * @type Number\n     **/\n  }\n\n  var p = Rectangle.prototype;\n\n  // public methods:\n  /** \n   * Sets the specified values on this instance.\n   * @method setValues\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @param {Number} [width=0] The width of the Rectangle.\n   * @param {Number} [height=0] The height of the Rectangle.\n   * @return {Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.setValues = function (x, y, width, height) {\n    // don't forget to update docs in the constructor if these change:\n    this.x = x || 0;\n    this.y = y || 0;\n    this.width = width || 0;\n    this.height = height || 0;\n    return this;\n  };\n\n  /** \n   * Extends the rectangle's bounds to include the described point or rectangle.\n   * @method extend\n   * @param {Number} x X position of the point or rectangle.\n   * @param {Number} y Y position of the point or rectangle.\n   * @param {Number} [width=0] The width of the rectangle.\n   * @param {Number} [height=0] The height of the rectangle.\n   * @return {Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.extend = function (x, y, width, height) {\n    width = width || 0;\n    height = height || 0;\n    if (x + width > this.x + this.width) {\n      this.width = x + width - this.x;\n    }\n    if (y + height > this.y + this.height) {\n      this.height = y + height - this.y;\n    }\n    if (x < this.x) {\n      this.width += this.x - x;\n      this.x = x;\n    }\n    if (y < this.y) {\n      this.height += this.y - y;\n      this.y = y;\n    }\n    return this;\n  };\n\n  /** \n   * Adds the specified padding to the rectangle's bounds.\n   * @method pad\n   * @param {Number} top\n   * @param {Number} left\n   * @param {Number} bottom\n   * @param {Number} right\n   * @return {Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n  p.pad = function (top, left, bottom, right) {\n    this.x -= left;\n    this.y -= top;\n    this.width += left + right;\n    this.height += top + bottom;\n    return this;\n  };\n\n  /**\n   * Copies all properties from the specified rectangle to this rectangle.\n   * @method copy\n   * @param {Rectangle} rectangle The rectangle to copy properties from.\n   * @return {Rectangle} This rectangle. Useful for chaining method calls.\n   * @chainable\n  */\n  p.copy = function (rectangle) {\n    return this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n\n  /** \n   * Returns true if this rectangle fully encloses the described point or rectangle.\n   * @method contains\n   * @param {Number} x X position of the point or rectangle.\n   * @param {Number} y Y position of the point or rectangle.\n   * @param {Number} [width=0] The width of the rectangle.\n   * @param {Number} [height=0] The height of the rectangle.\n   * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n  */\n  p.contains = function (x, y, width, height) {\n    width = width || 0;\n    height = height || 0;\n    return x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height;\n  };\n\n  /** \n   * Returns a new rectangle which contains this rectangle and the specified rectangle.\n   * @method union\n   * @param {Rectangle} rect The rectangle to calculate a union with.\n   * @return {Rectangle} A new rectangle describing the union.\n  */\n  p.union = function (rect) {\n    return this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n  };\n\n  /** \n   * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n   * or null if they do not intersect.\n   * @method intersection\n   * @param {Rectangle} rect The rectangle to calculate an intersection with.\n   * @return {Rectangle} A new rectangle describing the intersection or null.\n  */\n  p.intersection = function (rect) {\n    var x1 = rect.x,\n      y1 = rect.y,\n      x2 = x1 + rect.width,\n      y2 = y1 + rect.height;\n    if (this.x > x1) {\n      x1 = this.x;\n    }\n    if (this.y > y1) {\n      y1 = this.y;\n    }\n    if (this.x + this.width < x2) {\n      x2 = this.x + this.width;\n    }\n    if (this.y + this.height < y2) {\n      y2 = this.y + this.height;\n    }\n    return x2 <= x1 || y2 <= y1 ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1);\n  };\n\n  /** \n   * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n   * @method intersects\n   * @param {Rectangle} rect The rectangle to compare.\n   * @return {Boolean} True if the rectangles intersect.\n  */\n  p.intersects = function (rect) {\n    return rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height;\n  };\n\n  /** \n   * Returns true if the width or height are equal or less than 0.\n   * @method isEmpty\n   * @return {Boolean} True if the rectangle is empty.\n  */\n  p.isEmpty = function () {\n    return this.width <= 0 || this.height <= 0;\n  };\n\n  /**\n   * Returns a clone of the Rectangle instance.\n   * @method clone\n   * @return {Rectangle} a clone of the Rectangle instance.\n   **/\n  p.clone = function () {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Rectangle (x=\" + this.x + \" y=\" + this.y + \" width=\" + this.width + \" height=\" + this.height + \")]\";\n  };\n  createjs.Rectangle = Rectangle;\n})();\n\n//##############################################################################\n// ButtonHelper.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n   * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n   * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n   * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n   *\n   * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n   * garbage collection.\n   * \n   * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n   *      myInstance.addEventListener(\"click\", handleClick);\n   *      function handleClick(event) {\n   *          // Click Happened.\n   *      }\n   *\n   * @class ButtonHelper\n   * @param {Sprite|MovieClip} target The instance to manage.\n   * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n   * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n   * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n   * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n   * states.\n   * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n   * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n   * used for the hitState.\n   * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n   * null, then the default state of the hitArea will be used. *\n   * @constructor\n   */\n  function ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n    if (!target.addEventListener) {\n      return;\n    }\n\n    // public properties:\n    /**\n     * The target for this button helper.\n     * @property target\n     * @type MovieClip | Sprite\n     * @readonly\n     **/\n    this.target = target;\n\n    /**\n     * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n     * @property overLabel\n     * @type String | Number\n     **/\n    this.overLabel = overLabel == null ? \"over\" : overLabel;\n\n    /**\n     * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n     * @property outLabel\n     * @type String | Number\n     **/\n    this.outLabel = outLabel == null ? \"out\" : outLabel;\n\n    /**\n     * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n     * @property downLabel\n     * @type String | Number\n     **/\n    this.downLabel = downLabel == null ? \"down\" : downLabel;\n\n    /**\n     * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n     * @property play\n     * @default false\n     * @type Boolean\n     **/\n    this.play = play;\n\n    //  private properties\n    /**\n     * @property _isPressed\n     * @type Boolean\n     * @protected\n     **/\n    this._isPressed = false;\n\n    /**\n     * @property _isOver\n     * @type Boolean\n     * @protected\n     **/\n    this._isOver = false;\n\n    /**\n     * @property _enabled\n     * @type Boolean\n     * @protected\n     **/\n    this._enabled = false;\n\n    // setup:\n    target.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n    this.enabled = true;\n    this.handleEvent({});\n    if (hitArea) {\n      if (hitLabel) {\n        hitArea.actionsEnabled = false;\n        hitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel);\n      }\n      target.hitArea = hitArea;\n    }\n  }\n  var p = ButtonHelper.prototype;\n\n  // getter / setters:\n  /**\n   * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n   * @method setEnabled\n   * @param {Boolean} value The enabled property to set the instance to.\n   * @[rptected\n   * @protected\n   **/\n  p._setEnabled = function (value) {\n    if (value == this._enabled) {\n      return;\n    }\n    var o = this.target;\n    this._enabled = value;\n    if (value) {\n      o.cursor = \"pointer\";\n      o.addEventListener(\"rollover\", this);\n      o.addEventListener(\"rollout\", this);\n      o.addEventListener(\"mousedown\", this);\n      o.addEventListener(\"pressup\", this);\n      if (o._reset) {\n        o.__reset = o._reset;\n        o._reset = this._reset;\n      }\n    } else {\n      o.cursor = null;\n      o.removeEventListener(\"rollover\", this);\n      o.removeEventListener(\"rollout\", this);\n      o.removeEventListener(\"mousedown\", this);\n      o.removeEventListener(\"pressup\", this);\n      if (o.__reset) {\n        o._reset = o.__reset;\n        delete o.__reset;\n      }\n    }\n  };\n  // ButtonHelper.setEnabled is @deprecated. Remove for 1.1+\n  p.setEnabled = createjs.deprecate(p._setEnabled, \"ButtonHelper.setEnabled\");\n\n  /**\n   * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n   * @method getEnabled\n   * @protected\n   * @return {Boolean}\n   **/\n  p._getEnabled = function () {\n    return this._enabled;\n  };\n  // ButtonHelper.getEnabled is @deprecated. Remove for 1.1+\n  p.getEnabled = createjs.deprecate(p._getEnabled, \"ButtonHelper.getEnabled\");\n\n  /**\n   * Enables or disables the button functionality on the target.\n   * @property enabled\n   * @type {Boolean}\n   **/\n  try {\n    Object.defineProperties(p, {\n      enabled: {\n        get: p._getEnabled,\n        set: p._setEnabled\n      }\n    });\n  } catch (e) {} // TODO: use Log\n\n  // public methods:\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[ButtonHelper]\";\n  };\n\n  // private methods:\n  /**\n   * @method handleEvent\n   * @param {Object} evt The mouse event to handle.\n   * @protected\n   **/\n  p.handleEvent = function (evt) {\n    var label,\n      t = this.target,\n      type = evt.type;\n    if (type == \"mousedown\") {\n      this._isPressed = true;\n      label = this.downLabel;\n    } else if (type == \"pressup\") {\n      this._isPressed = false;\n      label = this._isOver ? this.overLabel : this.outLabel;\n    } else if (type == \"rollover\") {\n      this._isOver = true;\n      label = this._isPressed ? this.downLabel : this.overLabel;\n    } else {\n      // rollout and default\n      this._isOver = false;\n      label = this._isPressed ? this.overLabel : this.outLabel;\n    }\n    if (this.play) {\n      t.gotoAndPlay && t.gotoAndPlay(label);\n    } else {\n      t.gotoAndStop && t.gotoAndStop(label);\n    }\n  };\n\n  /**\n   * Injected into target. Preserves the paused state through a reset.\n   * @method _reset\n   * @protected\n   **/\n  p._reset = function () {\n    // TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n    var p = this.paused;\n    this.__reset();\n    this.paused = p;\n  };\n  createjs.ButtonHelper = ButtonHelper;\n})();\n\n//##############################################################################\n// Shadow.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n   * via its <code>shadow</code> property.\n   *\n   * <h4>Example</h4>\n   *\n   *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n   *\n   * @class Shadow\n   * @constructor\n   * @param {String} color The color of the shadow. This can be any valid CSS color value.\n   * @param {Number} offsetX The x offset of the shadow in pixels.\n   * @param {Number} offsetY The y offset of the shadow in pixels.\n   * @param {Number} blur The size of the blurring effect.\n   **/\n  function Shadow(color, offsetX, offsetY, blur) {\n    // public properties:\n    /** \n     * The color of the shadow. This can be any valid CSS color value.\n     * @property color\n     * @type String\n     * @default null\n     */\n    this.color = color || \"black\";\n\n    /** The x offset of the shadow.\n     * @property offsetX\n     * @type Number\n     * @default 0\n     */\n    this.offsetX = offsetX || 0;\n\n    /** The y offset of the shadow.\n     * @property offsetY\n     * @type Number\n     * @default 0\n     */\n    this.offsetY = offsetY || 0;\n\n    /** The blur of the shadow.\n     * @property blur\n     * @type Number\n     * @default 0\n     */\n    this.blur = blur || 0;\n  }\n  var p = Shadow.prototype;\n\n  // static public properties:\n  /**\n   * An identity shadow object (all properties are set to 0).\n   * @property identity\n   * @type Shadow\n   * @static\n   * @final\n   * @readonly\n   **/\n  Shadow.identity = new Shadow(\"transparent\", 0, 0, 0);\n\n  // public methods:\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Shadow]\";\n  };\n\n  /**\n   * Returns a clone of this Shadow instance.\n   * @method clone\n   * @return {Shadow} A clone of the current Shadow instance.\n   **/\n  p.clone = function () {\n    return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n  };\n  createjs.Shadow = Shadow;\n})();\n\n//##############################################################################\n// SpriteSheet.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n   * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n   * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n   *\n   * The data passed to the SpriteSheet constructor defines:\n   * <ol>\n   * \t<li> The source image or images to use.</li>\n   * \t<li> The positions of individual image frames.</li>\n   * \t<li> Sequences of frames that form named animations. Optional.</li>\n   * \t<li> The target playback framerate. Optional.</li>\n   * </ol>\n   * <h3>SpriteSheet Format</h3>\n   * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n   * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n   *\n   * <h4>images</h4>\n   * An array of source images. Images can be either an HTMlimage\n   * instance, or a uri to an image. The former is recommended to control preloading.\n   *\n   * \timages: [image1, \"path/to/image2.png\"],\n   *\n   * <h4>frames</h4>\n   * Defines the individual frames. There are two supported formats for frame data:\n   * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n   * and `count` properties.\n   *\n   * <ul>\n   *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n   *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n   *  <li>`spacing` indicate the spacing between frames</li>\n   *  <li>`margin` specify the margin around the image(s)</li>\n   *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n   *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n   *  indexes based on their position in the source images (left to right, top to bottom).</li>\n   * </ul>\n   *\n   *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n   *\n   * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n   * with 4 required and 3 optional entries, in the order:\n   *\n   * <ul>\n   *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n   *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n   *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n   * </ul>\n   *\n   * \tframes: [\n   * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n   * \t\t[64, 0, 96, 64],\n   * \t\t[0, 0, 64, 64, 1, 32, 32]\n   * \t\t// etc.\n   * \t]\n   *\n   * <h4>animations</h4>\n   * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n   * animation of the same name. Each animation must specify the frames to play, and may\n   * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n   * the name of the `next` animation to sequence to after it completes.\n   *\n   * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n   * <ol>\n   * \t<li>for a single frame animation, you can simply specify the frame index\n   *\n   * \t\tanimations: {\n   * \t\t\tsit: 7\n   * \t\t}\n   *\n   * </li>\n   * <li>\n   *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n   * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n   *\n   * \t\tanimations: {\n   * \t\t\t// start, end, next*, speed*\n   * \t\t\trun: [0, 8],\n   * \t\t\tjump: [9, 12, \"run\", 2]\n   * \t\t}\n   *\n   *  </li>\n   *  <li>\n   *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n   *     indexes to play in order. The object can also specify `next` and `speed` properties.\n   *\n   * \t\tanimations: {\n   * \t\t\twalk: {\n   * \t\t\t\tframes: [1,2,3,3,2,1]\n   * \t\t\t},\n   * \t\t\tshoot: {\n   * \t\t\t\tframes: [1,4,5,6],\n   * \t\t\t\tnext: \"walk\",\n   * \t\t\t\tspeed: 0.5\n   * \t\t\t}\n   * \t\t}\n   *\n   *  </li>\n   * </ol>\n   * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n   * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n   * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n   *\n   * <h4>framerate</h4>\n   * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n   * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n   *\n   * \t\tframerate: 20\n   *\n   * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n   *\n   * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n   * \t\tfunction handleTick(event) {\n   *\t\t\tstage.update(event);\n   *\t\t}\n   *\n   * <h3>Example</h3>\n   * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n   * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n   * sequencing back to run.\n   *\n   * \t\tvar data = {\n   * \t\t\timages: [\"sprites.jpg\"],\n   * \t\t\tframes: {width:50, height:50},\n   * \t\t\tanimations: {\n   * \t\t\t\tstand:0,\n   * \t\t\t\trun:[1,5],\n   * \t\t\t\tjump:[6,8,\"run\"]\n   * \t\t\t}\n   * \t\t};\n   * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n   * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n   *\n   * <h3>Generating SpriteSheet Images</h3>\n   * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n   * coordinates manually, however there are a number of tools that facilitate this.\n   * <ul>\n   *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n   *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n   *     EaselJS support.\n   *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n   * </ul>\n   *\n   * <h3>Cross Origin Issues</h3>\n   * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n   * using:\n   * <ul>\n   *     <li>a mouse</li>\n   *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n   *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n   *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n   * </ul>\n   * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n   * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n   *\n   * \t\tvar image = new Image();\n   * \t\timg.crossOrigin=\"Anonymous\";\n   * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n   *\n   * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n   * support cross-origin requests, or this will not work. For more information, check out\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n   *\n   * @class SpriteSheet\n   * @constructor\n   * @param {Object} data An object describing the SpriteSheet data.\n   * @extends EventDispatcher\n   **/\n  function SpriteSheet(data) {\n    this.EventDispatcher_constructor();\n\n    // public properties:\n    /**\n     * Indicates whether all images are finished loading.\n     * @property complete\n     * @type Boolean\n     * @readonly\n     **/\n    this.complete = true;\n\n    /**\n     * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n     * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n     * @property framerate\n     * @type Number\n     **/\n    this.framerate = 0;\n\n    // private properties:\n    /**\n     * @property _animations\n     * @protected\n     * @type Array\n     **/\n    this._animations = null;\n\n    /**\n     * @property _frames\n     * @protected\n     * @type Array\n     **/\n    this._frames = null;\n\n    /**\n     * @property _images\n     * @protected\n     * @type Array\n     **/\n    this._images = null;\n\n    /**\n     * @property _data\n     * @protected\n     * @type Object\n     **/\n    this._data = null;\n\n    /**\n     * @property _loadCount\n     * @protected\n     * @type Number\n     **/\n    this._loadCount = 0;\n\n    // only used for simple frame defs:\n    /**\n     * @property _frameHeight\n     * @protected\n     * @type Number\n     **/\n    this._frameHeight = 0;\n\n    /**\n     * @property _frameWidth\n     * @protected\n     * @type Number\n     **/\n    this._frameWidth = 0;\n\n    /**\n     * @property _numFrames\n     * @protected\n     * @type Number\n     **/\n    this._numFrames = 0;\n\n    /**\n     * @property _regX\n     * @protected\n     * @type Number\n     **/\n    this._regX = 0;\n\n    /**\n     * @property _regY\n     * @protected\n     * @type Number\n     **/\n    this._regY = 0;\n\n    /**\n     * @property _spacing\n     * @protected\n     * @type Number\n     **/\n    this._spacing = 0;\n\n    /**\n     * @property _margin\n     * @protected\n     * @type Number\n     **/\n    this._margin = 0;\n\n    // setup:\n    this._parseData(data);\n  }\n  var p = createjs.extend(SpriteSheet, createjs.EventDispatcher);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  // events:\n  /**\n   * Dispatched when all images are loaded.  Note that this only fires if the images\n   * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n   * to prior to adding a listener. Ex.\n   *\n   * \tvar sheet = new createjs.SpriteSheet(data);\n   * \tif (!sheet.complete) {\n   * \t\t// not preloaded, listen for the complete event:\n   * \t\tsheet.addEventListener(\"complete\", handler);\n   * \t}\n   *\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n   * when doing on-demand rendering.\n   * @event getframe\n   * @param {Number} index The frame index.\n   * @param {Object} frame The frame object that getFrame will return.\n   */\n\n  /**\n   * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n   * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n   * event once all images are finished processing, even if an error is encountered.\n   * @event error\n   * @param {String} src The source of the image that failed to load.\n   * @since 0.8.2\n   */\n\n  // getter / setters:\n  /**\n   * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n   * @method _getAnimations\n   * @protected\n   * @return {Array}\n   **/\n  p._getAnimations = function () {\n    return this._animations.slice();\n  };\n  // SpriteSheet.getAnimations is @deprecated. Remove for 1.1+\n  p.getAnimations = createjs.deprecate(p._getAnimations, \"SpriteSheet.getAnimations\");\n\n  /**\n   * Returns an array of all available animation names available on this sprite sheet as strings.\n   * @property animations\n   * @type {Array}\n   * @readonly\n   **/\n  try {\n    Object.defineProperties(p, {\n      animations: {\n        get: p._getAnimations\n      }\n    });\n  } catch (e) {}\n\n  // public methods:\n  /**\n   * Returns the total number of frames in the specified animation, or in the whole sprite\n   * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n   * the images have not been fully loaded.\n   * @method getNumFrames\n   * @param {String} animation The name of the animation to get a frame count for.\n   * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n   */\n  p.getNumFrames = function (animation) {\n    if (animation == null) {\n      return this._frames ? this._frames.length : this._numFrames || 0;\n    } else {\n      var data = this._data[animation];\n      if (data == null) {\n        return 0;\n      } else {\n        return data.frames.length;\n      }\n    }\n  };\n\n  /**\n   * Returns an object defining the specified animation. The returned object contains:<UL>\n   * \t<li>frames: an array of the frame ids in the animation</li>\n   * \t<li>speed: the playback speed for this animation</li>\n   * \t<li>name: the name of the animation</li>\n   * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n   * \tsame.</li>\n   * </UL>\n   * @method getAnimation\n   * @param {String} name The name of the animation to get.\n   * @return {Object} a generic object with frames, speed, name, and next properties.\n   **/\n  p.getAnimation = function (name) {\n    return this._data[name];\n  };\n\n  /**\n   * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n   * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n   * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n   * \timage.</li>\n   * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n   * </UL>\n   * @method getFrame\n   * @param {Number} frameIndex The index of the frame.\n   * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n   **/\n  p.getFrame = function (frameIndex) {\n    var frame;\n    if (this._frames && (frame = this._frames[frameIndex])) {\n      return frame;\n    }\n    return null;\n  };\n\n  /**\n   * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n   * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n   *\n   * \t[x=-50, y=-40, width=90, height=70]\n   *\n   * @method getFrameBounds\n   * @param {Number} frameIndex The index of the frame.\n   * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n   * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n   **/\n  p.getFrameBounds = function (frameIndex, rectangle) {\n    var frame = this.getFrame(frameIndex);\n    return frame ? (rectangle || new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[SpriteSheet]\";\n  };\n\n  /**\n   * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n   * @method clone\n   **/\n  p.clone = function () {\n    throw \"SpriteSheet cannot be cloned.\";\n  };\n\n  // private methods:\n  /**\n   * @method _parseData\n   * @param {Object} data An object describing the SpriteSheet data.\n   * @protected\n   **/\n  p._parseData = function (data) {\n    var i, l, o, a;\n    if (data == null) {\n      return;\n    }\n    this.framerate = data.framerate || 0;\n\n    // parse images:\n    if (data.images && (l = data.images.length) > 0) {\n      a = this._images = [];\n      for (i = 0; i < l; i++) {\n        var img = data.images[i];\n        if (typeof img == \"string\") {\n          var src = img;\n          img = document.createElement(\"img\");\n          img.src = src;\n        }\n        a.push(img);\n        if (!img.getContext && !img.naturalWidth) {\n          this._loadCount++;\n          this.complete = false;\n          (function (o, src) {\n            img.onload = function () {\n              o._handleImageLoad(src);\n            };\n          })(this, src);\n          (function (o, src) {\n            img.onerror = function () {\n              o._handleImageError(src);\n            };\n          })(this, src);\n        }\n      }\n    }\n\n    // parse frames:\n    if (data.frames == null) {// nothing\n    } else if (Array.isArray(data.frames)) {\n      this._frames = [];\n      a = data.frames;\n      for (i = 0, l = a.length; i < l; i++) {\n        var arr = a[i];\n        this._frames.push({\n          image: this._images[arr[4] ? arr[4] : 0],\n          rect: new createjs.Rectangle(arr[0], arr[1], arr[2], arr[3]),\n          regX: arr[5] || 0,\n          regY: arr[6] || 0\n        });\n      }\n    } else {\n      o = data.frames;\n      this._frameWidth = o.width;\n      this._frameHeight = o.height;\n      this._regX = o.regX || 0;\n      this._regY = o.regY || 0;\n      this._spacing = o.spacing || 0;\n      this._margin = o.margin || 0;\n      this._numFrames = o.count;\n      if (this._loadCount == 0) {\n        this._calculateFrames();\n      }\n    }\n\n    // parse animations:\n    this._animations = [];\n    if ((o = data.animations) != null) {\n      this._data = {};\n      var name;\n      for (name in o) {\n        var anim = {\n          name: name\n        };\n        var obj = o[name];\n        if (typeof obj == \"number\") {\n          // single frame\n          a = anim.frames = [obj];\n        } else if (Array.isArray(obj)) {\n          // simple\n          if (obj.length == 1) {\n            anim.frames = [obj[0]];\n          } else {\n            anim.speed = obj[3];\n            anim.next = obj[2];\n            a = anim.frames = [];\n            for (i = obj[0]; i <= obj[1]; i++) {\n              a.push(i);\n            }\n          }\n        } else {\n          // complex\n          anim.speed = obj.speed;\n          anim.next = obj.next;\n          var frames = obj.frames;\n          a = anim.frames = typeof frames == \"number\" ? [frames] : frames.slice(0);\n        }\n        if (anim.next === true || anim.next === undefined) {\n          anim.next = name;\n        } // loop\n        if (anim.next === false || a.length < 2 && anim.next == name) {\n          anim.next = null;\n        } // stop\n        if (!anim.speed) {\n          anim.speed = 1;\n        }\n        this._animations.push(name);\n        this._data[name] = anim;\n      }\n    }\n  };\n\n  /**\n   * @method _handleImageLoad\n   * @protected\n   **/\n  p._handleImageLoad = function (src) {\n    if (--this._loadCount == 0) {\n      this._calculateFrames();\n      this.complete = true;\n      this.dispatchEvent(\"complete\");\n    }\n  };\n\n  /**\n   * @method _handleImageError\n   * @protected\n   */\n  p._handleImageError = function (src) {\n    var errorEvent = new createjs.Event(\"error\");\n    errorEvent.src = src;\n    this.dispatchEvent(errorEvent);\n\n    // Complete is still dispatched.\n    if (--this._loadCount == 0) {\n      this.dispatchEvent(\"complete\");\n    }\n  };\n\n  /**\n   * @method _calculateFrames\n   * @protected\n   **/\n  p._calculateFrames = function () {\n    if (this._frames || this._frameWidth == 0) {\n      return;\n    }\n    this._frames = [];\n    var maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n    var frameCount = 0,\n      frameWidth = this._frameWidth,\n      frameHeight = this._frameHeight;\n    var spacing = this._spacing,\n      margin = this._margin;\n    imgLoop: for (var i = 0, imgs = this._images; i < imgs.length; i++) {\n      var img = imgs[i],\n        imgW = img.width || img.naturalWidth,\n        imgH = img.height || img.naturalHeight;\n      var y = margin;\n      while (y <= imgH - margin - frameHeight) {\n        var x = margin;\n        while (x <= imgW - margin - frameWidth) {\n          if (frameCount >= maxFrames) {\n            break imgLoop;\n          }\n          frameCount++;\n          this._frames.push({\n            image: img,\n            rect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n            regX: this._regX,\n            regY: this._regY\n          });\n          x += frameWidth + spacing;\n        }\n        y += frameHeight + spacing;\n      }\n    }\n    this._numFrames = frameCount;\n  };\n  createjs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n})();\n\n//##############################################################################\n// Graphics.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n   * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n   * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n   * context of an EaselJS display list.\n   *\n   * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n   * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n   * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n   *\n   *      var g = new createjs.Graphics();\n   *      g.setStrokeStyle(1);\n   *      g.beginStroke(\"#000000\");\n   *      g.beginFill(\"red\");\n   *      g.drawCircle(0,0,30);\n   *\n   * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n   * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n   *\n   *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n   *\n   * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n   * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n   *\n   *      var fillCommand = myGraphics.beginFill(\"red\").command;\n   *      // ... later, update the fill style/color:\n   *      fillCommand.style = \"blue\";\n   *      // or change it to a bitmap fill:\n   *      fillCommand.bitmap(myImage);\n   *\n   * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n   * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n   *\n   *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n   *      myGraphics.append(createjs.Graphics.beginCmd);\n   *      // we need to define the path before applying the fill:\n   *      var circle = new createjs.Graphics.Circle(0,0,30);\n   *      myGraphics.append(circle);\n   *      // fill the path we just defined:\n   *      var fill = new createjs.Graphics.Fill(\"red\");\n   *      myGraphics.append(fill);\n   *\n   * These approaches can be used together, for example to insert a custom command:\n   *\n   *      myGraphics.beginFill(\"red\");\n   *      var customCommand = new CustomSpiralCommand(etc);\n   *      myGraphics.append(customCommand);\n   *      myGraphics.beginFill(\"blue\");\n   *      myGraphics.drawCircle(0, 0, 30);\n   *\n   * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n   *\n   * <h4>Tiny API</h4>\n   * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n   * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n   * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n   * descriptions in the docs.\n   *\n   * <table>\n   *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n   *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n   *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n   *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n   *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n   *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n   *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n   *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n   *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n   *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n   *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n   *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n   *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n   *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n   *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n   *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n   *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n   * </table>\n   *\n   * Here is the above example, using the tiny API instead.\n   *\n   *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n   *\n   * @class Graphics\n   * @constructor\n   **/\n  function Graphics() {\n    // public properties\n    /**\n     * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n     * to a Fill command in order to dynamically update the color later by using:\n     *\n     * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n     * \t\t// update color later:\n     * \t\tmyFill.style = \"yellow\";\n     *\n     * @property command\n     * @type Object\n     **/\n    this.command = null;\n\n    // private properties\n    /**\n     * @property _stroke\n     * @protected\n     * @type {Stroke}\n     **/\n    this._stroke = null;\n\n    /**\n     * @property _strokeStyle\n     * @protected\n     * @type {StrokeStyle}\n     **/\n    this._strokeStyle = null;\n\n    /**\n     * @property _oldStrokeStyle\n     * @protected\n     * @type {StrokeStyle}\n     **/\n    this._oldStrokeStyle = null;\n\n    /**\n     * @property _strokeDash\n     * @protected\n     * @type {StrokeDash}\n     **/\n    this._strokeDash = null;\n\n    /**\n     * @property _oldStrokeDash\n     * @protected\n     * @type {StrokeDash}\n     **/\n    this._oldStrokeDash = null;\n\n    /**\n     * @property _strokeIgnoreScale\n     * @protected\n     * @type Boolean\n     **/\n    this._strokeIgnoreScale = false;\n\n    /**\n     * @property _fill\n     * @protected\n     * @type {Fill}\n     **/\n    this._fill = null;\n\n    /**\n     * @property _instructions\n     * @protected\n     * @type {Array}\n     **/\n    this._instructions = [];\n\n    /**\n     * Indicates the last instruction index that was committed.\n     * @property _commitIndex\n     * @protected\n     * @type {Number}\n     **/\n    this._commitIndex = 0;\n\n    /**\n     * Uncommitted instructions.\n     * @property _activeInstructions\n     * @protected\n     * @type {Array}\n     **/\n    this._activeInstructions = [];\n\n    /**\n     * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n     * @property _dirty\n     * @protected\n     * @type {Boolean}\n     * @default false\n     **/\n    this._dirty = false;\n\n    /**\n     * Index to draw from if a store operation has happened.\n     * @property _storeIndex\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this._storeIndex = 0;\n\n    // setup:\n    this.clear();\n  }\n  var p = Graphics.prototype;\n  var G = Graphics; // shortcut\n\n  // static public methods:\n  /**\n   * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n   *\n   *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n   *      // Returns \"rgba(50,100,150,0.5)\"\n   *\n   * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n   * param. For example,\n   *\n   *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n   *      // Returns \"rgba(255,0,255,0.2)\"\n   *\n   * @method getRGB\n   * @static\n   * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n   * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n   * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n   * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n   **/\n  Graphics.getRGB = function (r, g, b, alpha) {\n    if (r != null && b == null) {\n      alpha = g;\n      b = r & 0xFF;\n      g = r >> 8 & 0xFF;\n      r = r >> 16 & 0xFF;\n    }\n    if (alpha == null) {\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    } else {\n      return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n    }\n  };\n\n  /**\n   * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n   * or if alpha is null then in the format \"hsl(360,100,100)\".\n   *\n   *      createjs.Graphics.getHSL(150, 100, 70);\n   *      // Returns \"hsl(150,100,70)\"\n   *\n   * @method getHSL\n   * @static\n   * @param {Number} hue The hue component for the color, between 0 and 360.\n   * @param {Number} saturation The saturation component for the color, between 0 and 100.\n   * @param {Number} lightness The lightness component for the color, between 0 and 100.\n   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n   * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n   * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n   **/\n  Graphics.getHSL = function (hue, saturation, lightness, alpha) {\n    if (alpha == null) {\n      return \"hsl(\" + hue % 360 + \",\" + saturation + \"%,\" + lightness + \"%)\";\n    } else {\n      return \"hsla(\" + hue % 360 + \",\" + saturation + \"%,\" + lightness + \"%,\" + alpha + \")\";\n    }\n  };\n\n  // static properties:\n  /**\n   * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n   * unnecessary instantiation.\n   * @property beginCmd\n   * @type {Graphics.BeginPath}\n   * @static\n   **/\n  // defined at the bottom of this file.\n\n  /**\n   * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n   * @property BASE_64\n   * @static\n   * @final\n   * @readonly\n   * @type {Object}\n   **/\n  Graphics.BASE_64 = {\n    \"A\": 0,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 3,\n    \"E\": 4,\n    \"F\": 5,\n    \"G\": 6,\n    \"H\": 7,\n    \"I\": 8,\n    \"J\": 9,\n    \"K\": 10,\n    \"L\": 11,\n    \"M\": 12,\n    \"N\": 13,\n    \"O\": 14,\n    \"P\": 15,\n    \"Q\": 16,\n    \"R\": 17,\n    \"S\": 18,\n    \"T\": 19,\n    \"U\": 20,\n    \"V\": 21,\n    \"W\": 22,\n    \"X\": 23,\n    \"Y\": 24,\n    \"Z\": 25,\n    \"a\": 26,\n    \"b\": 27,\n    \"c\": 28,\n    \"d\": 29,\n    \"e\": 30,\n    \"f\": 31,\n    \"g\": 32,\n    \"h\": 33,\n    \"i\": 34,\n    \"j\": 35,\n    \"k\": 36,\n    \"l\": 37,\n    \"m\": 38,\n    \"n\": 39,\n    \"o\": 40,\n    \"p\": 41,\n    \"q\": 42,\n    \"r\": 43,\n    \"s\": 44,\n    \"t\": 45,\n    \"u\": 46,\n    \"v\": 47,\n    \"w\": 48,\n    \"x\": 49,\n    \"y\": 50,\n    \"z\": 51,\n    \"0\": 52,\n    \"1\": 53,\n    \"2\": 54,\n    \"3\": 55,\n    \"4\": 56,\n    \"5\": 57,\n    \"6\": 58,\n    \"7\": 59,\n    \"8\": 60,\n    \"9\": 61,\n    \"+\": 62,\n    \"/\": 63\n  };\n\n  /**\n   * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n   * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n   * \"butt\", 1 to \"round\", and 2 to \"square\".\n   * For example, to set the line caps to \"square\":\n   *\n   *      myGraphics.ss(16, 2);\n   *\n   * @property STROKE_CAPS_MAP\n   * @static\n   * @final\n   * @readonly\n   * @type {Array}\n   **/\n  Graphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\n  /**\n   * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n   * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n   * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n   * For example, to set the line joints to \"bevel\":\n   *\n   *      myGraphics.ss(16, 0, 2);\n   *\n   * @property STROKE_JOINTS_MAP\n   * @static\n   * @final\n   * @readonly\n   * @type {Array}\n   **/\n  Graphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\n  /**\n   * @property _ctx\n   * @static\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   **/\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n  if (canvas.getContext) {\n    Graphics._ctx = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n  // getter / setters:\n  /**\n   * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n   * @method _getInstructions\n   * @protected\n   * @return {Array} The instructions array, useful for chaining\n   **/\n  p._getInstructions = function () {\n    this._updateInstructions();\n    return this._instructions;\n  };\n  // Graphics.getInstructions is @deprecated. Remove for 1.1+\n  p.getInstructions = createjs.deprecate(p._getInstructions, \"Graphics.getInstructions\");\n\n  /**\n   * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n   * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n   *\n   * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n   * @property instructions\n   * @type {Array}\n   * @readonly\n   **/\n  try {\n    Object.defineProperties(p, {\n      instructions: {\n        get: p._getInstructions\n      }\n    });\n  } catch (e) {}\n\n  // public methods:\n  /**\n   * Returns true if this Graphics instance has no drawing commands.\n   * @method isEmpty\n   * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n   **/\n  p.isEmpty = function () {\n    return !(this._instructions.length || this._activeInstructions.length);\n  };\n\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n   **/\n  p.draw = function (ctx, data) {\n    this._updateInstructions();\n    var instr = this._instructions;\n    for (var i = this._storeIndex, l = instr.length; i < l; i++) {\n      instr[i].exec(ctx, data);\n    }\n  };\n\n  /**\n   * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n   * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method drawAsPath\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   **/\n  p.drawAsPath = function (ctx) {\n    this._updateInstructions();\n    var instr,\n      instrs = this._instructions;\n    for (var i = this._storeIndex, l = instrs.length; i < l; i++) {\n      // the first command is always a beginPath command.\n      if ((instr = instrs[i]).path !== false) {\n        instr.exec(ctx);\n      }\n    }\n  };\n\n  // public methods that map directly to context 2D calls:\n  /**\n   * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n   * @method moveTo\n   * @param {Number} x The x coordinate the drawing point should move to.\n   * @param {Number} y The y coordinate the drawing point should move to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n   * @chainable\n   **/\n  p.moveTo = function (x, y) {\n    return this.append(new G.MoveTo(x, y), true);\n  };\n\n  /**\n   * Draws a line from the current drawing point to the specified position, which become the new current drawing\n   * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n   * A tiny API method \"lt\" also exists.\n   *\n   * For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n   * whatwg spec</a>.\n   * @method lineTo\n   * @param {Number} x The x coordinate the drawing point should draw to.\n   * @param {Number} y The y coordinate the drawing point should draw to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.lineTo = function (x, y) {\n    return this.append(new G.LineTo(x, y));\n  };\n\n  /**\n   * Draws an arc with the specified control points and radius.  For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n   * whatwg spec</a>. A tiny API method \"at\" also exists.\n   * @method arcTo\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.arcTo = function (x1, y1, x2, y2, radius) {\n    return this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n  };\n\n  /**\n   * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n   * example, to draw a full circle with a radius of 20 centered at (100, 100):\n   *\n   *      arc(100, 100, 20, 0, Math.PI*2);\n   *\n   * For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n   * A tiny API method \"a\" also exists.\n   * @method arc\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle Measured in radians.\n   * @param {Number} endAngle Measured in radians.\n   * @param {Boolean} anticlockwise\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    return this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n  };\n\n  /**\n   * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n   * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n   * whatwg spec</a>. A tiny API method \"qt\" also exists.\n   * @method quadraticCurveTo\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.quadraticCurveTo = function (cpx, cpy, x, y) {\n    return this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n  };\n\n  /**\n   * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n   * cp2y). For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n   * whatwg spec</a>. A tiny API method \"bt\" also exists.\n   * @method bezierCurveTo\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    return this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n  };\n\n  /**\n   * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n   * For detailed information, read the\n   * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n   * whatwg spec</a>. A tiny API method \"r\" also exists.\n   * @method rect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.rect = function (x, y, w, h) {\n    return this.append(new G.Rect(x, y, w, h));\n  };\n\n  /**\n   * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n   * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n   * @method closePath\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.closePath = function () {\n    return this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n  };\n\n  // public methods that roughly map to Adobe Flash/Animate graphics APIs:\n  /**\n   * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n   * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n   * @method clear\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.clear = function () {\n    this._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n    this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n    this._dirty = this._strokeIgnoreScale = false;\n    return this;\n  };\n\n  /**\n   * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n   * @method beginFill\n   * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no fill.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginFill = function (color) {\n    return this._setFill(color ? new G.Fill(color) : null);\n  };\n\n  /**\n   * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n   * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n   * square to display it:\n   *\n   *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n   *\n   * A tiny API method \"lf\" also exists.\n   * @method beginLinearGradientFill\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n   * drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n   * the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginLinearGradientFill = function (colors, ratios, x0, y0, x1, y1) {\n    return this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n  };\n\n  /**\n   * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n   * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n   *\n   *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n   *\n   * A tiny API method \"rf\" also exists.\n   * @method beginRadialGradientFill\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginRadialGradientFill = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  };\n\n  /**\n   * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n   * exists.\n   * @method beginBitmapFill\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n   * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n   * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n   * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n   * will be applied relative to the parent transform.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginBitmapFill = function (image, repetition, matrix) {\n    return this._setFill(new G.Fill(null, matrix).bitmap(image, repetition));\n  };\n\n  /**\n   * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n   * A tiny API method \"ef\" also exists.\n   * @method endFill\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.endFill = function () {\n    return this.beginFill();\n  };\n\n  /**\n   * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n   * the stroke style and color in a single line of code like so:\n   *\n   * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n   *\n   * A tiny API method \"ss\" also exists.\n   * @method setStrokeStyle\n   * @param {Number} thickness The width of the stroke.\n   * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n   * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n   * the tiny API.\n   * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n   * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n   * for use with the tiny API.\n   * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n   * controls at what point a mitered joint will be clipped.\n   * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n   * of active transformations.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.setStrokeStyle = function (thickness, caps, joints, miterLimit, ignoreScale) {\n    this._updateInstructions(true);\n    this._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n    // ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n    if (this._stroke) {\n      this._stroke.ignoreScale = ignoreScale;\n    }\n    this._strokeIgnoreScale = ignoreScale;\n    return this;\n  };\n\n  /**\n   * Sets or clears the stroke dash pattern.\n   *\n   * \tmyGraphics.setStrokeDash([20, 10], 0);\n   *\n   * A tiny API method `sd` also exists.\n   * @method setStrokeDash\n   * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n   * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n   * Passing null or an empty array will clear the existing stroke dash.\n   * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.setStrokeDash = function (segments, offset) {\n    this._updateInstructions(true);\n    this._strokeDash = this.command = new G.StrokeDash(segments, offset);\n    return this;\n  };\n\n  /**\n   * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n   * @method beginStroke\n   * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no stroke.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginStroke = function (color) {\n    return this._setStroke(color ? new G.Stroke(color) : null);\n  };\n\n  /**\n   * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n   * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n   * square to display it:\n   *\n   *      myGraphics.setStrokeStyle(10).\n   *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n   *\n   * A tiny API method \"ls\" also exists.\n   * @method beginLinearGradientStroke\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginLinearGradientStroke = function (colors, ratios, x0, y0, x1, y1) {\n    return this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n  };\n\n  /**\n   * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n   * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n   *\n   *      myGraphics.setStrokeStyle(10)\n   *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n   *          .drawRect(50, 90, 150, 110);\n   *\n   * A tiny API method \"rs\" also exists.\n   * @method beginRadialGradientStroke\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n   * to 100%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginRadialGradientStroke = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  };\n\n  /**\n   * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n   * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n   * also exists.\n   * @method beginBitmapStroke\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n   * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.beginBitmapStroke = function (image, repetition) {\n    // NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n    return this._setStroke(new G.Stroke().bitmap(image, repetition));\n  };\n\n  /**\n   * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n   * A tiny API method \"es\" also exists.\n   * @method endStroke\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.endStroke = function () {\n    return this.beginStroke();\n  };\n\n  /**\n   * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n   * method.\n   * @method curveTo\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.curveTo = p.quadraticCurveTo;\n\n  /**\n   *\n   * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n   * method.\n   * @method drawRect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.drawRect = p.rect;\n\n  /**\n   * Draws a rounded rectangle with all corners with the specified radius.\n   * @method drawRoundRect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radius Corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.drawRoundRect = function (x, y, w, h, radius) {\n    return this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n  };\n\n  /**\n   * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n   * method \"rc\" also exists.\n   * @method drawRoundRectComplex\n   * @param {Number} x The horizontal coordinate to draw the round rect.\n   * @param {Number} y The vertical coordinate to draw the round rect.\n   * @param {Number} w The width of the round rect.\n   * @param {Number} h The height of the round rect.\n   * @param {Number} radiusTL Top left corner radius.\n   * @param {Number} radiusTR Top right corner radius.\n   * @param {Number} radiusBR Bottom right corner radius.\n   * @param {Number} radiusBL Bottom left corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.drawRoundRectComplex = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    return this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n  };\n\n  /**\n   * Draws a circle with the specified radius at (x, y).\n   *\n   *      var g = new createjs.Graphics();\n   *\t    g.setStrokeStyle(1);\n   *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n   *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n   *\t    g.drawCircle(0,0,3);\n   *\n   *\t    var s = new createjs.Shape(g);\n   *\t\ts.x = 100;\n   *\t\ts.y = 100;\n   *\n   *\t    stage.addChild(s);\n   *\t    stage.update();\n   *\n   * A tiny API method \"dc\" also exists.\n   * @method drawCircle\n   * @param {Number} x x coordinate center point of circle.\n   * @param {Number} y y coordinate center point of circle.\n   * @param {Number} radius Radius of circle.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.drawCircle = function (x, y, radius) {\n    return this.append(new G.Circle(x, y, radius));\n  };\n\n  /**\n   * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n   * except the width and height can be different. A tiny API method \"de\" also exists.\n   * @method drawEllipse\n   * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from center.\n   * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from the center.\n   * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n   * number.\n   * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.drawEllipse = function (x, y, w, h) {\n    return this.append(new G.Ellipse(x, y, w, h));\n  };\n\n  /**\n   * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n   * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n   * radius of 50:\n   *\n   *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n   *      // Note: -90 makes the first point vertical\n   *\n   * A tiny API method \"dp\" also exists.\n   *\n   * @method drawPolyStar\n   * @param {Number} x Position of the center of the shape.\n   * @param {Number} y Position of the center of the shape.\n   * @param {Number} radius The outer radius of the shape.\n   * @param {Number} sides The number of points on the star or sides on the polygon.\n   * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n   * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n   * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n   * directly to the right of the center.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.drawPolyStar = function (x, y, radius, sides, pointSize, angle) {\n    return this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n  };\n\n  /**\n   * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n   * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n   * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n   *\n   * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n   * built-in or custom graphics commands. For example:\n   *\n   * \t\t// attach data to our shape, so we can access it during the draw:\n   * \t\tmyShape.color = \"red\";\n   *\n   * \t\t// append a Circle command object:\n   * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n   *\n   * \t\t// append a custom command object with an exec method that sets the fill style\n   * \t\t// based on the shape's data, and then fills the circle.\n   * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n   * \t\t\tctx.fillStyle = shape.color;\n   * \t\t\tctx.fill();\n   * \t\t}});\n   *\n   * @method append\n   * @param {Object} command A graphics command object exposing an \"exec\" method.\n   * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.append = function (command, clean) {\n    this._activeInstructions.push(command);\n    this.command = command;\n    if (!clean) {\n      this._dirty = true;\n    }\n    return this;\n  };\n\n  /**\n   * Decodes a compact encoded path string into a series of draw instructions.\n   * This format is not intended to be human readable, and is meant for use by authoring tools.\n   * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n   * commands.\n   *\n   * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n   * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n   * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n   * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n   * latter. Bits 5 and 6 are currently unused.\n   *\n   * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n   * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n   * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n   * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n   * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n   * appropriate).\n   *\n   * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n   * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n   * parameter.\n   * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n   * indicate 1500 tenths of a pixel.\n   * <br />AA - 000000000000. Absolute y position of 0.\n   * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n   * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n   * provide an absolute position of +150.0px.\n   * <br />AAA - 000000000000000000. A y delta value of 0.\n   *\n   * A tiny API method \"p\" also exists.\n   * @method decodePath\n   * @param {String} str The path string to decode.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.decodePath = function (str) {\n    var instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n    var paramCount = [2, 2, 4, 6, 0];\n    var i = 0,\n      l = str.length;\n    var params = [];\n    var x = 0,\n      y = 0;\n    var base64 = Graphics.BASE_64;\n    while (i < l) {\n      var c = str.charAt(i);\n      var n = base64[c];\n      var fi = n >> 3; // highest order bits 1-3 code for operation.\n      var f = instructions[fi];\n      // check that we have a valid instruction & that the unused bits are empty:\n      if (!f || n & 3) {\n        throw \"bad path data (@\" + i + \"): \" + c;\n      }\n      var pl = paramCount[fi];\n      if (!fi) {\n        x = y = 0;\n      } // move operations reset the position.\n      params.length = 0;\n      i++;\n      var charCount = (n >> 2 & 1) + 2; // 4th header bit indicates number size for this operation.\n      for (var p = 0; p < pl; p++) {\n        var num = base64[str.charAt(i)];\n        var sign = num >> 5 ? -1 : 1;\n        num = (num & 31) << 6 | base64[str.charAt(i + 1)];\n        if (charCount == 3) {\n          num = num << 6 | base64[str.charAt(i + 2)];\n        }\n        num = sign * num / 10;\n        if (p % 2) {\n          x = num += x;\n        } else {\n          y = num += y;\n        }\n        params[p] = num;\n        i += charCount;\n      }\n      f.apply(this, params);\n    }\n    return this;\n  };\n\n  /**\n   * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n   * the existing store. This also affects `drawAsPath()`.\n   *\n   * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n   * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n   * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n   *\n   * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n   * the fill or stroke.\n   *\n   * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n   * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n   * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n   *\n   * \t// set up cache:\n   * \tmyShape.cache(0,0,500,500,scale);\n   *\n   * \t// when the user drags, draw a new line:\n   * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n   * \t// then draw it into the existing cache:\n   * \tmyShape.updateCache(\"source-over\");\n   * \t// store the new line, so it isn't redrawn next time:\n   * \tmyShape.store();\n   *\n   * \t// then, when the window resizes, we can re-render at a different scale:\n   * \t// first, unstore all our lines:\n   * \tmyShape.unstore();\n   * \t// then cache using the new scale:\n   * \tmyShape.cache(0,0,500,500,newScale);\n   * \t// finally, store the existing commands again:\n   * \tmyShape.store();\n   *\n   * @method store\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.store = function () {\n    this._updateInstructions(true);\n    this._storeIndex = this._instructions.length;\n    return this;\n  };\n\n  /**\n   * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n   * so that they will be executed in subsequent draw calls.\n   *\n   * @method unstore\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.unstore = function () {\n    this._storeIndex = 0;\n    return this;\n  };\n\n  /**\n   * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n   * @method clone\n   * @return {Graphics} A clone of the current Graphics instance.\n   **/\n  p.clone = function () {\n    var o = new Graphics();\n    o.command = this.command;\n    o._stroke = this._stroke;\n    o._strokeStyle = this._strokeStyle;\n    o._strokeDash = this._strokeDash;\n    o._strokeIgnoreScale = this._strokeIgnoreScale;\n    o._fill = this._fill;\n    o._instructions = this._instructions.slice();\n    o._commitIndex = this._commitIndex;\n    o._activeInstructions = this._activeInstructions.slice();\n    o._dirty = this._dirty;\n    o._storeIndex = this._storeIndex;\n    return o;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Graphics]\";\n  };\n\n  // tiny API:\n  /**\n   * Shortcut to moveTo.\n   * @method mt\n   * @param {Number} x The x coordinate the drawing point should move to.\n   * @param {Number} y The y coordinate the drawing point should move to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n   * @chainable\n   * @protected\n   **/\n  p.mt = p.moveTo;\n\n  /**\n   * Shortcut to lineTo.\n   * @method lt\n   * @param {Number} x The x coordinate the drawing point should draw to.\n   * @param {Number} y The y coordinate the drawing point should draw to.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.lt = p.lineTo;\n\n  /**\n   * Shortcut to arcTo.\n   * @method at\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.at = p.arcTo;\n\n  /**\n   * Shortcut to bezierCurveTo.\n   * @method bt\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.bt = p.bezierCurveTo;\n\n  /**\n   * Shortcut to quadraticCurveTo / curveTo.\n   * @method qt\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @protected\n   * @chainable\n   **/\n  p.qt = p.quadraticCurveTo;\n\n  /**\n   * Shortcut to arc.\n   * @method a\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle Measured in radians.\n   * @param {Number} endAngle Measured in radians.\n   * @param {Boolean} anticlockwise\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @protected\n   * @chainable\n   **/\n  p.a = p.arc;\n\n  /**\n   * Shortcut to rect.\n   * @method r\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.r = p.rect;\n\n  /**\n   * Shortcut to closePath.\n   * @method cp\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.cp = p.closePath;\n\n  /**\n   * Shortcut to clear.\n   * @method c\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.c = p.clear;\n\n  /**\n   * Shortcut to beginFill.\n   * @method f\n   * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no fill.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.f = p.beginFill;\n\n  /**\n   * Shortcut to beginLinearGradientFill.\n   * @method lf\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n   * drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n   * the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.lf = p.beginLinearGradientFill;\n\n  /**\n   * Shortcut to beginRadialGradientFill.\n   * @method rf\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.rf = p.beginRadialGradientFill;\n\n  /**\n   * Shortcut to beginBitmapFill.\n   * @method bf\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern.\n   * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n   * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n   * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n   * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n   * will be applied relative to the parent transform.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.bf = p.beginBitmapFill;\n\n  /**\n   * Shortcut to endFill.\n   * @method ef\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.ef = p.endFill;\n\n  /**\n   * Shortcut to setStrokeStyle.\n   * @method ss\n   * @param {Number} thickness The width of the stroke.\n   * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n   * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n   * the tiny API.\n   * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n   * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n   * for use with the tiny API.\n   * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n   * controls at what point a mitered joint will be clipped.\n   * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n   * of active transformations.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.ss = p.setStrokeStyle;\n\n  /**\n   * Shortcut to setStrokeDash.\n   * @method sd\n   * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n   * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n   * Passing null or an empty array will clear any existing dash.\n   * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.sd = p.setStrokeDash;\n\n  /**\n   * Shortcut to beginStroke.\n   * @method s\n   * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no stroke.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.s = p.beginStroke;\n\n  /**\n   * Shortcut to beginLinearGradientStroke.\n   * @method ls\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.ls = p.beginLinearGradientStroke;\n\n  /**\n   * Shortcut to beginRadialGradientStroke.\n   * @method rs\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n   * to 100%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.rs = p.beginRadialGradientStroke;\n\n  /**\n   * Shortcut to beginBitmapStroke.\n   * @method bs\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern.\n   * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n   * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.bs = p.beginBitmapStroke;\n\n  /**\n   * Shortcut to endStroke.\n   * @method es\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.es = p.endStroke;\n\n  /**\n   * Shortcut to drawRect.\n   * @method dr\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.dr = p.drawRect;\n\n  /**\n   * Shortcut to drawRoundRect.\n   * @method rr\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radius Corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.rr = p.drawRoundRect;\n\n  /**\n   * Shortcut to drawRoundRectComplex.\n   * @method rc\n   * @param {Number} x The horizontal coordinate to draw the round rect.\n   * @param {Number} y The vertical coordinate to draw the round rect.\n   * @param {Number} w The width of the round rect.\n   * @param {Number} h The height of the round rect.\n   * @param {Number} radiusTL Top left corner radius.\n   * @param {Number} radiusTR Top right corner radius.\n   * @param {Number} radiusBR Bottom right corner radius.\n   * @param {Number} radiusBL Bottom left corner radius.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.rc = p.drawRoundRectComplex;\n\n  /**\n   * Shortcut to drawCircle.\n   * @method dc\n   * @param {Number} x x coordinate center point of circle.\n   * @param {Number} y y coordinate center point of circle.\n   * @param {Number} radius Radius of circle.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.dc = p.drawCircle;\n\n  /**\n   * Shortcut to drawEllipse.\n   * @method de\n   * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from center.\n   * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n   * which draws from the center.\n   * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n   * number.\n   * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.de = p.drawEllipse;\n\n  /**\n   * Shortcut to drawPolyStar.\n   * @method dp\n   * @param {Number} x Position of the center of the shape.\n   * @param {Number} y Position of the center of the shape.\n   * @param {Number} radius The outer radius of the shape.\n   * @param {Number} sides The number of points on the star or sides on the polygon.\n   * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n   * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n   * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n   * directly to the right of the center.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.dp = p.drawPolyStar;\n\n  /**\n   * Shortcut to decodePath.\n   * @method p\n   * @param {String} str The path string to decode.\n   * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   * @protected\n   **/\n  p.p = p.decodePath;\n\n  // private methods:\n  /**\n   * @method _updateInstructions\n   * @param commit\n   * @protected\n   **/\n  p._updateInstructions = function (commit) {\n    var instr = this._instructions,\n      active = this._activeInstructions,\n      commitIndex = this._commitIndex;\n    if (this._dirty && active.length) {\n      instr.length = commitIndex; // remove old, uncommitted commands\n      instr.push(Graphics.beginCmd);\n      var l = active.length,\n        ll = instr.length;\n      instr.length = ll + l;\n      for (var i = 0; i < l; i++) {\n        instr[i + ll] = active[i];\n      }\n      if (this._fill) {\n        instr.push(this._fill);\n      }\n      if (this._stroke) {\n        // doesn't need to be re-applied if it hasn't changed.\n        if (this._strokeDash !== this._oldStrokeDash) {\n          instr.push(this._strokeDash);\n        }\n        if (this._strokeStyle !== this._oldStrokeStyle) {\n          instr.push(this._strokeStyle);\n        }\n        if (commit) {\n          this._oldStrokeStyle = this._strokeStyle;\n          this._oldStrokeDash = this._strokeDash;\n        }\n        instr.push(this._stroke);\n      }\n      this._dirty = false;\n    }\n    if (commit) {\n      active.length = 0;\n      this._commitIndex = instr.length;\n    }\n  };\n\n  /**\n   * @method _setFill\n   * @param fill\n   * @protected\n   **/\n  p._setFill = function (fill) {\n    this._updateInstructions(true);\n    this.command = this._fill = fill;\n    return this;\n  };\n\n  /**\n   * @method _setStroke\n   * @param stroke\n   * @protected\n   **/\n  p._setStroke = function (stroke) {\n    this._updateInstructions(true);\n    if (this.command = this._stroke = stroke) {\n      stroke.ignoreScale = this._strokeIgnoreScale;\n    }\n    return this;\n  };\n\n  // Command Objects:\n  /**\n   * @namespace Graphics\n   */\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class LineTo\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.LineTo = function (x, y) {\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.lineTo(this.x, this.y);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class MoveTo\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  (G.MoveTo = function (x, y) {\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.moveTo(this.x, this.y);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class ArcTo\n   * @constructor\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   **/\n  /**\n   * @property x1\n   * @type Number\n   */\n  /**\n   * @property y1\n   * @type Number\n   */\n  /**\n   * @property x2\n   * @type Number\n   */\n  /**\n   * @property y2\n   * @type Number\n   */\n  /**\n   * @property radius\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.ArcTo = function (x1, y1, x2, y2, radius) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.radius = radius;\n  }).prototype.exec = function (ctx) {\n    ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Arc\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle\n   * @param {Number} endAngle\n   * @param {Number} anticlockwise\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @property radius\n   * @type Number\n   */\n  /**\n   * @property startAngle\n   * @type Number\n   */\n  /**\n   * @property endAngle\n   * @type Number\n   */\n  /**\n   * @property anticlockwise\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.Arc = function (x, y, radius, startAngle, endAngle, anticlockwise) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    this.anticlockwise = !!anticlockwise;\n  }).prototype.exec = function (ctx) {\n    ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class QuadraticCurveTo\n   * @constructor\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   **/\n  /**\n   * @property cpx\n   * @type Number\n   */\n  /**\n   * @property cpy\n   * @type Number\n   */\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.QuadraticCurveTo = function (cpx, cpy, x, y) {\n    this.cpx = cpx;\n    this.cpy = cpy;\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class BezierCurveTo\n   * @constructor\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   **/\n  /**\n   * @property cp1x\n   * @type Number\n   */\n  /**\n   * @property cp1y\n   * @type Number\n   */\n  /**\n   * @property cp2x\n   * @type Number\n   */\n  /**\n   * @property cp2y\n   * @type Number\n   */\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.BezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.cp1x = cp1x;\n    this.cp1y = cp1y;\n    this.cp2x = cp2x;\n    this.cp2y = cp2y;\n    this.x = x;\n    this.y = y;\n  }).prototype.exec = function (ctx) {\n    ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Rect\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @property w\n   * @type Number\n   */\n  /**\n   * @property h\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.Rect = function (x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }).prototype.exec = function (ctx) {\n    ctx.rect(this.x, this.y, this.w, this.h);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class ClosePath\n   * @constructor\n   **/\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.ClosePath = function () {}).prototype.exec = function (ctx) {\n    ctx.closePath();\n  };\n\n  /**\n   * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class BeginPath\n   * @constructor\n   **/\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.BeginPath = function () {}).prototype.exec = function (ctx) {\n    ctx.beginPath();\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Fill\n   * @constructor\n   * @param {Object} style A valid Context2D fillStyle.\n   * @param {Matrix2D} matrix\n   **/\n  /**\n   * A valid Context2D fillStyle.\n   * @property style\n   * @type Object\n   */\n  /**\n   * @property matrix\n   * @type Matrix2D\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  p = (G.Fill = function (style, matrix) {\n    this.style = style;\n    this.matrix = matrix;\n  }).prototype;\n  p.exec = function (ctx) {\n    if (!this.style) {\n      return;\n    }\n    ctx.fillStyle = this.style;\n    var mtx = this.matrix;\n    if (mtx) {\n      ctx.save();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n    ctx.fill();\n    if (mtx) {\n      ctx.restore();\n    }\n  };\n  /**\n   * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n   * @method linearGradient\n   * @param {Array} colors\n   *\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @return {Fill} Returns this Fill object for chaining or assignment.\n   */\n  p.linearGradient = function (colors, ratios, x0, y0, x1, y1) {\n    var o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n    for (var i = 0, l = colors.length; i < l; i++) {\n      o.addColorStop(ratios[i], colors[i]);\n    }\n    o.props = {\n      colors: colors,\n      ratios: ratios,\n      x0: x0,\n      y0: y0,\n      x1: x1,\n      y1: y1,\n      type: \"linear\"\n    };\n    return this;\n  };\n  /**\n   * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n   * @method radialGradient\n   * @param {Array} colors\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} r0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} r1\n   * @return {Fill} Returns this Fill object for chaining or assignment.\n   */\n  p.radialGradient = function (colors, ratios, x0, y0, r0, x1, y1, r1) {\n    var o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n    for (var i = 0, l = colors.length; i < l; i++) {\n      o.addColorStop(ratios[i], colors[i]);\n    }\n    o.props = {\n      colors: colors,\n      ratios: ratios,\n      x0: x0,\n      y0: y0,\n      r0: r0,\n      x1: x1,\n      y1: y1,\n      r1: r1,\n      type: \"radial\"\n    };\n    return this;\n  };\n  /**\n   * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n   * @method bitmap\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n   * @return {Fill} Returns this Fill object for chaining or assignment.\n   */\n  p.bitmap = function (image, repetition) {\n    if (image.naturalWidth || image.getContext || image.readyState >= 2) {\n      var o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n      o.props = {\n        image: image,\n        repetition: repetition,\n        type: \"bitmap\"\n      };\n    }\n    return this;\n  };\n  p.path = false;\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Stroke\n   * @constructor\n   * @param {Object} style A valid Context2D fillStyle.\n   * @param {Boolean} ignoreScale\n   **/\n  /**\n   * A valid Context2D strokeStyle.\n   * @property style\n   * @type Object\n   */\n  /**\n   * @property ignoreScale\n   * @type Boolean\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  p = (G.Stroke = function (style, ignoreScale) {\n    this.style = style;\n    this.ignoreScale = ignoreScale;\n  }).prototype;\n  p.exec = function (ctx) {\n    if (!this.style) {\n      return;\n    }\n    ctx.strokeStyle = this.style;\n    if (this.ignoreScale) {\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    ctx.stroke();\n    if (this.ignoreScale) {\n      ctx.restore();\n    }\n  };\n  /**\n   * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n   * @method linearGradient\n   * @param {Array} colors\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @return {Fill} Returns this Stroke object for chaining or assignment.\n   */\n  p.linearGradient = G.Fill.prototype.linearGradient;\n  /**\n   * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n   * @method radialGradient\n   * @param {Array} colors\n   * @param {Array} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} r0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} r1\n   * @return {Fill} Returns this Stroke object for chaining or assignment.\n   */\n  p.radialGradient = G.Fill.prototype.radialGradient;\n  /**\n   * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n   * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n   * @method bitmap\n   * @param {HTMLImageElement} image\n   * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n   * @return {Fill} Returns this Stroke object for chaining or assignment.\n   */\n  p.bitmap = G.Fill.prototype.bitmap;\n  p.path = false;\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class StrokeStyle\n   * @constructor\n   * @param {Number} width\n   * @param {String} [caps=butt]\n   * @param {String} [joints=miter]\n   * @param {Number} [miterLimit=10]\n   * @param {Boolean} [ignoreScale=false]\n   **/\n  /**\n   * @property width\n   * @type Number\n   */\n  /**\n   * One of: butt, round, square\n   * @property caps\n   * @type String\n   */\n  /**\n   * One of: round, bevel, miter\n   * @property joints\n   * @type String\n   */\n  /**\n   * @property miterLimit\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  p = (G.StrokeStyle = function (width, caps, joints, miterLimit, ignoreScale) {\n    this.width = width;\n    this.caps = caps;\n    this.joints = joints;\n    this.miterLimit = miterLimit;\n    this.ignoreScale = ignoreScale;\n  }).prototype;\n  p.exec = function (ctx) {\n    ctx.lineWidth = this.width == null ? \"1\" : this.width;\n    ctx.lineCap = this.caps == null ? \"butt\" : isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps];\n    ctx.lineJoin = this.joints == null ? \"miter\" : isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints];\n    ctx.miterLimit = this.miterLimit == null ? \"10\" : this.miterLimit;\n    ctx.ignoreScale = this.ignoreScale == null ? false : this.ignoreScale;\n  };\n  p.path = false;\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class StrokeDash\n   * @constructor\n   * @param {Array} [segments]\n   * @param {Number} [offset=0]\n   **/\n  /**\n   * @property segments\n   * @type Array\n   */\n  /**\n   * @property offset\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.StrokeDash = function (segments, offset) {\n    this.segments = segments;\n    this.offset = offset || 0;\n  }).prototype.exec = function (ctx) {\n    if (ctx.setLineDash) {\n      // feature detection.\n      ctx.setLineDash(this.segments || G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n      ctx.lineDashOffset = this.offset || 0;\n    }\n  };\n  /**\n   * The default value for segments (ie. no dash).\n   * @property EMPTY_SEGMENTS\n   * @static\n   * @final\n   * @readonly\n   * @protected\n   * @type {Array}\n   **/\n  G.StrokeDash.EMPTY_SEGMENTS = [];\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class RoundRect\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radiusTL\n   * @param {Number} radiusTR\n   * @param {Number} radiusBR\n   * @param {Number} radiusBL\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @property w\n   * @type Number\n   */\n  /**\n   * @property h\n   * @type Number\n   */\n  /**\n   * @property radiusTL\n   * @type Number\n   */\n  /**\n   * @property radiusTR\n   * @type Number\n   */\n  /**\n   * @property radiusBR\n   * @type Number\n   */\n  /**\n   * @property radiusBL\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.RoundRect = function (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.radiusTL = radiusTL;\n    this.radiusTR = radiusTR;\n    this.radiusBR = radiusBR;\n    this.radiusBL = radiusBL;\n  }).prototype.exec = function (ctx) {\n    var max = (w < h ? w : h) / 2;\n    var mTL = 0,\n      mTR = 0,\n      mBR = 0,\n      mBL = 0;\n    var x = this.x,\n      y = this.y,\n      w = this.w,\n      h = this.h;\n    var rTL = this.radiusTL,\n      rTR = this.radiusTR,\n      rBR = this.radiusBR,\n      rBL = this.radiusBL;\n    if (rTL < 0) {\n      rTL *= mTL = -1;\n    }\n    if (rTL > max) {\n      rTL = max;\n    }\n    if (rTR < 0) {\n      rTR *= mTR = -1;\n    }\n    if (rTR > max) {\n      rTR = max;\n    }\n    if (rBR < 0) {\n      rBR *= mBR = -1;\n    }\n    if (rBR > max) {\n      rBR = max;\n    }\n    if (rBL < 0) {\n      rBL *= mBL = -1;\n    }\n    if (rBL > max) {\n      rBL = max;\n    }\n    ctx.moveTo(x + w - rTR, y);\n    ctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR);\n    ctx.lineTo(x + w, y + h - rBR);\n    ctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR);\n    ctx.lineTo(x + rBL, y + h);\n    ctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL);\n    ctx.lineTo(x, y + rTL);\n    ctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL);\n    ctx.closePath();\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Circle\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @property radius\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.Circle = function (x, y, radius) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }).prototype.exec = function (ctx) {\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class Ellipse\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @property w\n   * @type Number\n   */\n  /**\n   * @property h\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.Ellipse = function (x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }).prototype.exec = function (ctx) {\n    var x = this.x,\n      y = this.y;\n    var w = this.w,\n      h = this.h;\n    var k = 0.5522848;\n    var ox = w / 2 * k;\n    var oy = h / 2 * k;\n    var xe = x + w;\n    var ye = y + h;\n    var xm = x + w / 2;\n    var ym = y + h / 2;\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  };\n\n  /**\n   * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n   * @class PolyStar\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} sides\n   * @param {Number} pointSize\n   * @param {Number} angle\n   **/\n  /**\n   * @property x\n   * @type Number\n   */\n  /**\n   * @property y\n   * @type Number\n   */\n  /**\n   * @property radius\n   * @type Number\n   */\n  /**\n   * @property sides\n   * @type Number\n   */\n  /**\n   * @property pointSize\n   * @type Number\n   */\n  /**\n   * @property angle\n   * @type Number\n   */\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @method exec\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n  (G.PolyStar = function (x, y, radius, sides, pointSize, angle) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.sides = sides;\n    this.pointSize = pointSize;\n    this.angle = angle;\n  }).prototype.exec = function (ctx) {\n    var x = this.x,\n      y = this.y;\n    var radius = this.radius;\n    var angle = (this.angle || 0) / 180 * Math.PI;\n    var sides = this.sides;\n    var ps = 1 - (this.pointSize || 0);\n    var a = Math.PI / sides;\n    ctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n    for (var i = 0; i < sides; i++) {\n      angle += a;\n      if (ps != 1) {\n        ctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps);\n      }\n      angle += a;\n      ctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n    }\n    ctx.closePath();\n  };\n\n  // docced above.\n  Graphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\n  createjs.Graphics = Graphics;\n})();\n\n//##############################################################################\n// DisplayObject.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\r\n   * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\r\n   * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\r\n   * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\r\n   * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\r\n   * caching, and mouse handlers.\r\n   * @class DisplayObject\r\n   * @extends EventDispatcher\r\n   * @constructor\r\n   **/\n  function DisplayObject() {\n    this.EventDispatcher_constructor();\n\n    // public properties:\n    /**\r\n     * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\r\n     * @property alpha\r\n     * @type {Number}\r\n     * @default 1\r\n     **/\n    this.alpha = 1;\n\n    /**\r\n     * If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\r\n     * for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\r\n     * @property cacheCanvas\r\n     * @type {HTMLCanvasElement | Object}\r\n     * @default null\r\n     * @readonly\r\n     **/\n    this.cacheCanvas = null;\n\n    /**\r\n     * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n     * for more information. Use this to control, inspect, and change the cache. In special circumstances this may be a modified or subclassed BitmapCache.\r\n     * @property bitmapCache\r\n     * @type {BitmapCache}\r\n     * @default null\r\n     * @readonly\r\n     **/\n    this.bitmapCache = null;\n\n    /**\r\n     * Unique ID for this display object. Makes display objects easier for some uses.\r\n     * @property id\r\n     * @type {Number}\r\n     * @default -1\r\n     **/\n    this.id = createjs.UID.get();\n\n    /**\r\n     * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\r\n     * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\r\n     * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\r\n     * method from returning the child.\r\n     *\r\n     * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\r\n     * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\r\n     * provided in the next release of EaselJS.\r\n     * @property mouseEnabled\r\n     * @type {Boolean}\r\n     * @default true\r\n     **/\n    this.mouseEnabled = true;\n\n    /**\r\n     * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\r\n     * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n     * on some display objects (ex. Sprite & MovieClip frame advancing, and DOMElement display properties).\r\n     * @property tickEnabled\r\n     * @type Boolean\r\n     * @default true\r\n     **/\n    this.tickEnabled = true;\n\n    /**\r\n     * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\r\n     * debugging.\r\n     * @property name\r\n     * @type {String}\r\n     * @default null\r\n     **/\n    this.name = null;\n\n    /**\r\n     * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\r\n     * contains this display object, or null if it has not been added\r\n     * to one.\r\n     * @property parent\r\n     * @final\r\n     * @type {Container}\r\n     * @default null\r\n     * @readonly\r\n     **/\n    this.parent = null;\n\n    /**\r\n     * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\r\n     * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\r\n     * Cached object's registration points should be set based on pre-cache conditions, not cached size.\r\n     * @property regX\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.regX = 0;\n\n    /**\r\n     * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\r\n     * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\r\n     * Cached object's registration points should be set based on pre-cache conditions, not cached size.\r\n     * @property regY\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.regY = 0;\n\n    /**\r\n     * The rotation in degrees for this display object.\r\n     * @property rotation\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.rotation = 0;\n\n    /**\r\n     * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\r\n     * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\r\n     * @property scaleX\r\n     * @type {Number}\r\n     * @default 1\r\n     **/\n    this.scaleX = 1;\n\n    /**\r\n     * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\r\n     * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\r\n     * @property scaleY\r\n     * @type {Number}\r\n     * @default 1\r\n     **/\n    this.scaleY = 1;\n\n    /**\r\n     * The factor to skew this display object horizontally.\r\n     * @property skewX\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.skewX = 0;\n\n    /**\r\n     * The factor to skew this display object vertically.\r\n     * @property skewY\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.skewY = 0;\n\n    /**\r\n     * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\r\n     * null, this property is inherited from the parent container.\r\n     * @property shadow\r\n     * @type {Shadow}\r\n     * @default null\r\n     **/\n    this.shadow = null;\n\n    /**\r\n     * Indicates whether this display object should be rendered to the canvas and included when running the Stage\r\n     * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\r\n     * @property visible\r\n     * @type {Boolean}\r\n     * @default true\r\n     **/\n    this.visible = true;\n\n    /**\r\n     * The x (horizontal) position of the display object, relative to its parent.\r\n     * @property x\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.x = 0;\n\n    /** The y (vertical) position of the display object, relative to its parent.\r\n     * @property y\r\n     * @type {Number}\r\n     * @default 0\r\n     **/\n    this.y = 0;\n\n    /**\r\n     * If set, defines the transformation for this display object, overriding all other transformation properties\r\n     * (x, y, rotation, scale, skew).\r\n     * @property transformMatrix\r\n     * @type {Matrix2D}\r\n     * @default null\r\n     **/\n    this.transformMatrix = null;\n\n    /**\r\n     * The composite operation indicates how the pixels of this display object will be composited with the elements\r\n     * behind it. If `null`, this property is inherited from the parent container. For more information, read the\r\n     * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n     * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\r\n     * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\r\n     * @property compositeOperation\r\n     * @type {String}\r\n     * @default null\r\n     **/\n    this.compositeOperation = null;\n\n    /**\r\n     * Indicates whether the display object should be drawn to a whole pixel when\r\n     * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\r\n     * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\r\n     * @property snapToPixel\r\n     * @type {Boolean}\r\n     * @default true\r\n     **/\n    this.snapToPixel = true;\n\n    /**\r\n     * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\r\n     * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\r\n     * cached.\r\n     * @property filters\r\n     * @type {Array}\r\n     * @default null\r\n     **/\n    this.filters = null;\n\n    /**\r\n     * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\r\n     * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\r\n     * @property mask\r\n     * @type {Shape}\r\n     * @default null\r\n     */\n    this.mask = null;\n\n    /**\r\n     * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\r\n     * The hit area will have its transformation applied relative to this display object's coordinate space (as though\r\n     * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\r\n     * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\r\n     * ancestors (parents).\r\n     * \r\n     * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\r\n     * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\r\n     *\r\n     * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\r\n     * @property hitArea\r\n     * @type {DisplayObject}\r\n     * @default null\r\n     */\n    this.hitArea = null;\n\n    /**\r\n     * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\r\n     * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\r\n     * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\r\n     * @property cursor\r\n     * @type {String}\r\n     * @default null\r\n     */\n    this.cursor = null;\n\n    // private properties:\n    /**\r\n     * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n     * @property _cacheScale\r\n     * @protected\r\n     * @type {Number}\r\n     * @default 1\r\n     * @deprecated\r\n     **/\n\n    /**\r\n     * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n     * @property _cacheDataURLID\r\n     * @protected\r\n     * @type {Number}\r\n     * @default 0\r\n     * @deprecated\r\n     */\n\n    /**\r\n     * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n     * @property _cacheDataURL\r\n     * @protected\r\n     * @type {String}\r\n     * @default null\r\n     * @deprecated\r\n     */\n\n    /**\r\n     * @property _props\r\n     * @protected\r\n     * @type {DisplayObject}\r\n     * @default null\r\n     **/\n    this._props = new createjs.DisplayProps();\n\n    /**\r\n     * @property _rectangle\r\n     * @protected\r\n     * @type {Rectangle}\r\n     * @default null\r\n     **/\n    this._rectangle = new createjs.Rectangle();\n\n    /**\r\n     * @property _bounds\r\n     * @protected\r\n     * @type {Rectangle}\r\n     * @default null\r\n     **/\n    this._bounds = null;\n\n    /**\r\n     * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\r\n     * or cached objects won't use this property, it's for native display of terminal elements.\r\n     * @property _webGLRenderStyle\r\n     * @protected\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    this._webGLRenderStyle = DisplayObject._StageGL_NONE;\n  }\n  var p = createjs.extend(DisplayObject, createjs.EventDispatcher);\n\n  // static properties:\n  /**\r\n   * Listing of mouse event names. Used in _hasMouseEventListener.\r\n   * @property _MOUSE_EVENTS\r\n   * @protected\r\n   * @static\r\n   * @type {Array}\r\n   **/\n  DisplayObject._MOUSE_EVENTS = [\"click\", \"dblclick\", \"mousedown\", \"mouseout\", \"mouseover\", \"pressmove\", \"pressup\", \"rollout\", \"rollover\"];\n\n  /**\r\n   * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\r\n   * with cross domain content.\r\n   * @property suppressCrossDomainErrors\r\n   * @static\r\n   * @type {Boolean}\r\n   * @default false\r\n   **/\n  DisplayObject.suppressCrossDomainErrors = false;\n\n  /**\r\n   * @property _snapToPixelEnabled\r\n   * @protected\r\n   * @static\r\n   * @type {Boolean}\r\n   * @default false\r\n   **/\n  DisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\n\n  /**\r\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\r\n   * @property _StageGL_NONE\r\n   * @protected\r\n   * @static\r\n   * @type {number}\r\n   */\n  DisplayObject._StageGL_NONE = 0;\n\n  /**\r\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\r\n   * @property _StageGL_SPRITE\r\n   * @protected\r\n   * @static\r\n   * @type {number}\r\n   */\n  DisplayObject._StageGL_SPRITE = 1;\n\n  /**\r\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\r\n   * @property _StageGL_BITMAP\r\n   * @protected\r\n   * @static\r\n   * @type {number}\r\n   */\n  DisplayObject._StageGL_BITMAP = 2;\n\n  /**\r\n   * @property _hitTestCanvas\r\n   * @type {HTMLCanvasElement | Object}\r\n   * @static\r\n   * @protected\r\n   **/\n  /**\r\n   * @property _hitTestContext\r\n   * @type {CanvasRenderingContext2D}\r\n   * @static\r\n   * @protected\r\n   **/\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n  if (canvas.getContext) {\n    DisplayObject._hitTestCanvas = canvas;\n    DisplayObject._hitTestContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n  // events:\n  /**\r\n   * Dispatched when the user presses their left mouse button over the display object. See the \r\n   * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event mousedown\r\n   * @since 0.6.0\r\n   */\n\n  /**\r\n   * Dispatched when the user presses their left mouse button and then releases it while over the display object.\r\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event click\r\n   * @since 0.6.0\r\n   */\n\n  /**\r\n   * Dispatched when the user double clicks their left mouse button over this display object.\r\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event dblclick\r\n   * @since 0.6.0\r\n   */\n\n  /**\r\n   * Dispatched when the user's mouse enters this display object. This event must be enabled using \r\n   * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\r\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event mouseover\r\n   * @since 0.6.0\r\n   */\n\n  /**\r\n   * Dispatched when the user's mouse leaves this display object. This event must be enabled using \r\n   * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\r\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event mouseout\r\n   * @since 0.6.0\r\n   */\n\n  /**\r\n   * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\r\n   * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n   * aggregate of their content.\r\n   * \r\n   * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n   * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\r\n   * myContainer, two events would be received, each targeting a child element:<OL>\r\n   * <LI>when the mouse enters shapeA (target=shapeA)</LI>\r\n   * <LI>when the mouse enters shapeB (target=shapeB)</LI>\r\n   * </OL>\r\n   * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\r\n   * the aggregate myContainer content (target=myContainer).\r\n   * \r\n   * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event rollover\r\n   * @since 0.7.0\r\n   */\n\n  /**\r\n   * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\r\n   * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n   * aggregate of their content.\r\n   * \r\n   * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n   * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\r\n   * on myContainer, two events would be received, each targeting a child element:<OL>\r\n   * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\r\n   * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\r\n   * </OL>\r\n   * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\r\n   * the aggregate myContainer content (target=myContainer).\r\n   * \r\n   * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n   * @event rollout\r\n   * @since 0.7.0\r\n   */\n\n  /**\r\n   * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\r\n   * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\r\n   * useful for dragging and similar operations.\r\n   *\r\n   * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n   * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\r\n   * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n   * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\r\n   * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n   * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n   * @event pressmove\r\n   * @since 0.7.0\r\n   */\n\n  /**\r\n   * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\r\n   * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\r\n   * operations.\r\n   *\r\n   * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n   * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\r\n   * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n   * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\r\n   * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n   * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n   * @event pressup\r\n   * @since 0.7.0\r\n   */\n\n  /**\r\n   * Dispatched when the display object is added to a parent container.\r\n   * @event added\r\n   */\n\n  /**\r\n   * Dispatched when the display object is removed from its parent container.\r\n   * @event removed\r\n   */\n\n  /**\r\n   * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\r\n   * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\r\n   * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\r\n   * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\r\n   * dispatched on their parent.\r\n   * @event tick\r\n   * @param {Object} target The object that dispatched the event.\r\n   * @param {String} type The event type.\r\n   * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\r\n   *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\r\n   * @since 0.6.0\r\n   */\n\n  // getter / setters:\n  /**\r\n   * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\r\n   * @method _getStage\r\n   * @protected\r\n   * @return {Stage}\r\n   **/\n  p._getStage = function () {\n    // uses dynamic access to avoid circular dependencies;\n    var o = this,\n      _Stage = createjs[\"Stage\"];\n    while (o.parent) {\n      o = o.parent;\n    }\n    if (o instanceof _Stage) {\n      return o;\n    }\n    return null;\n  };\n  // DisplayObject.getStage is @deprecated. Remove for 1.1+\n  p.getStage = createjs.deprecate(p._getStage, \"DisplayObject.getStage\");\n\n  /**\r\n   * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\r\n   * @property stage\r\n   * @type {Stage}\r\n   * @readonly\r\n   **/\n\n  /**\r\n   * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\r\n   * determine if the cache has changed since a previous check.\r\n   * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n   * @property cacheID\r\n   * @deprecated\r\n   * @type {Number}\r\n   * @default 0\r\n   */\n\n  /**\r\n   * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\r\n   * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\r\n   * it will return only the `scaleX`.\r\n   * @property scaleX\r\n   * @type {Number}\r\n   * @default 1\r\n   */\n  try {\n    Object.defineProperties(p, {\n      stage: {\n        get: p._getStage\n      },\n      cacheID: {\n        get: function () {\n          return this.bitmapCache && this.bitmapCache.cacheID;\n        },\n        set: function (a) {\n          this.bitmapCache && (this.bitmapCache.cacheID = a);\n        }\n      },\n      scale: {\n        get: function () {\n          return this.scaleX;\n        },\n        set: function (scale) {\n          this.scaleX = this.scaleY = scale;\n        }\n      }\n    });\n  } catch (e) {}\n\n  // public methods:\n  /**\r\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n   * This does not account for whether it would be visible within the boundaries of the stage.\r\n   *\r\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n   * @method isVisible\r\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n   **/\n  p.isVisible = function () {\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  };\n\n  /**\r\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n   * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\r\n   *\r\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n   * @method draw\r\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\r\n   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\r\n   * @return {Boolean}\r\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    var cache = this.bitmapCache;\n    if (cache && !ignoreCache) {\n      return cache.draw(ctx);\n    }\n    return false;\n  };\n\n  /**\r\n   * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\r\n   * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\r\n   * @method updateContext\r\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\r\n   **/\n  p.updateContext = function (ctx) {\n    var o = this,\n      mask = o.mask,\n      mtx = o._props.matrix;\n    if (mask && mask.graphics && !mask.graphics.isEmpty()) {\n      mask.getMatrix(mtx);\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      mask.graphics.drawAsPath(ctx);\n      ctx.clip();\n      mtx.invert();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n    this.getMatrix(mtx);\n    var tx = mtx.tx,\n      ty = mtx.ty;\n    if (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n      tx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n      ty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n    }\n    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty);\n    ctx.globalAlpha *= o.alpha;\n    if (o.compositeOperation) {\n      ctx.globalCompositeOperation = o.compositeOperation;\n    }\n    if (o.shadow) {\n      this._applyShadow(ctx, o.shadow);\n    }\n  };\n\n  /**\r\n   * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\r\n   * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\r\n   * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\r\n   * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\r\n   * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\r\n   * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\r\n   *\r\n   * <h4>Example</h4>\r\n   * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\r\n   *\r\n   *      var shape = new createjs.Shape();\r\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n   *      shape.cache(-25, -25, 50, 50);\r\n   *\r\n   * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\r\n   * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\r\n   * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\r\n   * \r\n   * Usually, the resulting cacheCanvas will have the dimensions width * scale, height * scale, however some filters (ex. BlurFilter)\r\n   * will add padding to the canvas dimensions.\r\n   *\r\n   * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\r\n   * This allows for easier interaction and alternate cache methods like WebGL with {{#crossLink \"StageGL\"}}{{/crossLink}}.\r\n   * For more information on the options object, see the BitmapCache {{#crossLink \"BitmapCache/define\"}}{{/crossLink}}.\r\n   *\r\n   * @method cache\r\n   * @param {Number} x The x coordinate origin for the cache region.\r\n   * @param {Number} y The y coordinate origin for the cache region.\r\n   * @param {Number} width The width of the cache region.\r\n   * @param {Number} height The height of the cache region.\r\n   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\r\n   * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\r\n   * \tcached elements with greater fidelity. Default is 1.\r\n   * @param {Object} [options=undefined] Specify additional parameters for the cache logic\r\n   **/\n  p.cache = function (x, y, width, height, scale, options) {\n    if (!this.bitmapCache) {\n      this.bitmapCache = new createjs.BitmapCache();\n    }\n    this.bitmapCache.define(this, x, y, width, height, scale, options);\n  };\n\n  /**\r\n   * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\r\n   * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\r\n   * will be drawn over the existing cache using the specified compositeOperation.\r\n   *\r\n   * <h4>Example</h4>\r\n   * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\r\n   * will be drawn on top of the old one.\r\n   *\r\n   *      // Not shown: Creating the shape, and caching it.\r\n   *      shapeInstance.clear();\r\n   *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\r\n   *      shapeInstance.updateCache();\r\n   *\r\n   * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\r\n   * This allows for easier interaction and alternate cache methods like WebGL and {{#crossLink \"StageGL\"}}{{/crossLink}}.\r\n   *\r\n   * @method updateCache\r\n   * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\r\n   * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n   * whatwg spec on compositing</a>.\r\n   **/\n  p.updateCache = function (compositeOperation) {\n    if (!this.bitmapCache) {\n      throw \"cache() must be called before updateCache()\";\n    }\n    this.bitmapCache.update(compositeOperation);\n  };\n\n  /**\r\n   * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\r\n   * @method uncache\r\n   **/\n  p.uncache = function () {\n    if (this.bitmapCache) {\n      this.bitmapCache.release();\n      this.bitmapCache = undefined;\n    }\n  };\n\n  /**\r\n   * Returns a data URL for the cache, or null if this display object is not cached.\r\n   * Only generated if the cache has changed, otherwise returns last result.\r\n   * @method getCacheDataURL\r\n   * @return {String} The image data url for the cache.\r\n   **/\n  p.getCacheDataURL = function () {\n    return this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n  };\n\n  /**\r\n   * Transforms the specified x and y position from the coordinate space of the display object\r\n   * to the global (stage) coordinate space. For example, this could be used to position an HTML label\r\n   * over a specific point on a nested display object. Returns a Point instance with x and y properties\r\n   * correlating to the transformed coordinates on the stage.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.x = 300;\r\n   *      displayObject.y = 200;\r\n   *      stage.addChild(displayObject);\r\n   *      var point = displayObject.localToGlobal(100, 100);\r\n   *      // Results in x=400, y=300\r\n   *\r\n   * @method localToGlobal\r\n   * @param {Number} x The x position in the source display object to transform.\r\n   * @param {Number} y The y position in the source display object to transform.\r\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n   * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\r\n   * on the stage.\r\n   **/\n  p.localToGlobal = function (x, y, pt) {\n    return this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt || new createjs.Point());\n  };\n\n  /**\r\n   * Transforms the specified x and y position from the global (stage) coordinate space to the\r\n   * coordinate space of the display object. For example, this could be used to determine\r\n   * the current mouse position within the display object. Returns a Point instance with x and y properties\r\n   * correlating to the transformed position in the display object's coordinate space.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.x = 300;\r\n   *      displayObject.y = 200;\r\n   *      stage.addChild(displayObject);\r\n   *      var point = displayObject.globalToLocal(100, 100);\r\n   *      // Results in x=-200, y=-100\r\n   *\r\n   * @method globalToLocal\r\n   * @param {Number} x The x position on the stage to transform.\r\n   * @param {Number} y The y position on the stage to transform.\r\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n   * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\r\n   * display object's coordinate space.\r\n   **/\n  p.globalToLocal = function (x, y, pt) {\n    return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt || new createjs.Point());\n  };\n\n  /**\r\n   * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\r\n   * space of the target display object. Returns a Point instance with x and y properties correlating to the\r\n   * transformed position in the target's coordinate space. Effectively the same as using the following code with\r\n   * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n   *\r\n   *      var pt = this.localToGlobal(x, y);\r\n   *      pt = target.globalToLocal(pt.x, pt.y);\r\n   *\r\n   * @method localToLocal\r\n   * @param {Number} x The x position in the source display object to transform.\r\n   * @param {Number} y The y position on the source display object to transform.\r\n   * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\r\n   * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n   * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\r\n   * in the target's coordinate space.\r\n   **/\n  p.localToLocal = function (x, y, target, pt) {\n    pt = this.localToGlobal(x, y, pt);\n    return target.globalToLocal(pt.x, pt.y, pt);\n  };\n\n  /**\r\n   * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\r\n   * Omitted parameters will have the default value set.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.setTransform(100, 100, 2, 2);\r\n   *\r\n   * @method setTransform\r\n   * @param {Number} [x=0] The horizontal translation (x position) in pixels\r\n   * @param {Number} [y=0] The vertical translation (y position) in pixels\r\n   * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\r\n   * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\r\n   * @param {Number} [rotation=0] The rotation, in degrees\r\n   * @param {Number} [skewX=0] The horizontal skew factor\r\n   * @param {Number} [skewY=0] The vertical skew factor\r\n   * @param {Number} [regX=0] The horizontal registration point in pixels\r\n   * @param {Number} [regY=0] The vertical registration point in pixels\r\n   * @return {DisplayObject} Returns this instance. Useful for chaining commands.\r\n   * @chainable\r\n  */\n  p.setTransform = function (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.scaleX = scaleX == null ? 1 : scaleX;\n    this.scaleY = scaleY == null ? 1 : scaleY;\n    this.rotation = rotation || 0;\n    this.skewX = skewX || 0;\n    this.skewY = skewY || 0;\n    this.regX = regX || 0;\n    this.regY = regY || 0;\n    return this;\n  };\n\n  /**\r\n   * Returns a matrix based on this object's current transform.\r\n   * @method getMatrix\r\n   * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\r\n   * Matrix object is returned.\r\n   * @return {Matrix2D} A matrix representing this display object's transform.\r\n   **/\n  p.getMatrix = function (matrix) {\n    var o = this,\n      mtx = matrix && matrix.identity() || new createjs.Matrix2D();\n    return o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n  };\n\n  /**\r\n   * Generates a Matrix2D object representing the combined transform of the display object and all of its\r\n   * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\r\n   * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\r\n   * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n   * @method getConcatenatedMatrix\r\n   * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\r\n   * If null, a new Matrix2D object is returned.\r\n   * @return {Matrix2D} The combined matrix.\r\n   **/\n  p.getConcatenatedMatrix = function (matrix) {\n    var o = this,\n      mtx = this.getMatrix(matrix);\n    while (o = o.parent) {\n      mtx.prependMatrix(o.getMatrix(o._props.matrix));\n    }\n    return mtx;\n  };\n\n  /**\r\n   * Generates a DisplayProps object representing the combined display properties of the  object and all of its\r\n   * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\r\n   * @method getConcatenatedDisplayProps\r\n   * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\r\n   * If null, a new DisplayProps object is returned.\r\n   * @return {DisplayProps} The combined display properties.\r\n   **/\n  p.getConcatenatedDisplayProps = function (props) {\n    props = props ? props.identity() : new createjs.DisplayProps();\n    var o = this,\n      mtx = o.getMatrix(props.matrix);\n    do {\n      props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n      // we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n      // this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n      if (o != this) {\n        mtx.prependMatrix(o.getMatrix(o._props.matrix));\n      }\n    } while (o = o.parent);\n    return props;\n  };\n\n  /**\r\n   * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\r\n   * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\r\n   *      function handleMouseDown(event) {\r\n   *          var hit = myShape.hitTest(event.stageX, event.stageY);\r\n   *      }\r\n   *\r\n   * Please note that shape-to-shape collision is not currently supported by EaselJS.\r\n   * @method hitTest\r\n   * @param {Number} x The x position to check in the display object's local coordinates.\r\n   * @param {Number} y The y position to check in the display object's local coordinates.\r\n   * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\r\n   * local Point.\r\n  */\n  p.hitTest = function (x, y) {\n    var ctx = DisplayObject._hitTestContext;\n    ctx.setTransform(1, 0, 0, 1, -x, -y);\n    this.draw(ctx);\n    var hit = this._testHit(ctx);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return hit;\n  };\n\n  /**\r\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n   *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\r\n   *\r\n   * @method set\r\n   * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\r\n   * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\r\n   * @chainable\r\n  */\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n    return this;\n  };\n\n  /**\r\n   * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\r\n   * Objects that have been cached will return the bounds of the cache.\r\n   * \r\n   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n   * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n   * bounds.\r\n   * \r\n   * <table>\r\n   * \t<tr><td><b>All</b></td><td>\r\n   * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\r\n   * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\r\n   * \t\tthe automatic calculations listed below.\r\n   * \t</td></tr>\r\n   * \t<tr><td><b>Bitmap</b></td><td>\r\n   * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\r\n   * \t</td></tr>\r\n   * \t<tr><td><b>Sprite</b></td><td>\r\n   * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\r\n   * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\r\n   * \t</td></tr>\r\n   * \t<tr><td><b>Container</b></td><td>\r\n   * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\r\n   * \t</td></tr>\r\n   * \t<tr><td><b>Shape</b></td><td>\r\n   * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\r\n   * \t</td></tr>\r\n   * \t<tr><td><b>Text</b></td><td>\r\n   * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\r\n   * \t\tnot, especially when using textBaseline values other than \"top\".\r\n   * \t</td></tr>\r\n   * \t<tr><td><b>BitmapText</b></td><td>\r\n   * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\r\n   * \t\tto (x=0,y=0).\r\n   * \t</td></tr>\r\n  * </table>\r\n   * \r\n   * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\r\n   * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\r\n   * bounds explicitly:\r\n   * \r\n   * \tvar bounds = obj.getBounds();\r\n   * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\r\n   * \t// getBounds will now use the set values, instead of recalculating\r\n   * \r\n   * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n   * values if you need to retain it.\r\n   * \r\n   * \tvar myBounds = obj.getBounds().clone();\r\n   * \t// OR:\r\n   * \tmyRect.copy(obj.getBounds());\r\n   * \r\n   * @method getBounds\r\n   * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\r\n   * object.\r\n   **/\n  p.getBounds = function () {\n    if (this._bounds) {\n      return this._rectangle.copy(this._bounds);\n    }\n    var cacheCanvas = this.cacheCanvas;\n    if (cacheCanvas) {\n      var scale = this._cacheScale;\n      return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width / scale, cacheCanvas.height / scale);\n    }\n    return null;\n  };\n\n  /**\r\n   * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\r\n   * Objects that have been cached will return the transformed bounds of the cache.\r\n   * \r\n   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n   * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n   * bounds.\r\n   * \r\n   * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n   * values if you need to retain it.\r\n   * \r\n   * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\r\n   * @method getTransformedBounds\r\n   * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\r\n   **/\n  p.getTransformedBounds = function () {\n    return this._getBounds();\n  };\n\n  /**\r\n   * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\r\n   * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\r\n   * override calculated bounds.\r\n   * \r\n   * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\r\n   * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\r\n   * @method setBounds\r\n   * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\r\n   * @param {Number} y The y origin of the bounds.\r\n   * @param {Number} width The width of the bounds.\r\n   * @param {Number} height The height of the bounds.\r\n   **/\n  p.setBounds = function (x, y, width, height) {\n    if (x == null) {\n      this._bounds = x;\n      return;\n    }\n    this._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\n  };\n\n  /**\r\n   * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\r\n   * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\r\n   * are copied by reference (masks, individual filter instances, hit area)\r\n   * @method clone\r\n   * @return {DisplayObject} A clone of the current DisplayObject instance.\r\n   **/\n  p.clone = function () {\n    return this._cloneProps(new DisplayObject());\n  };\n\n  /**\r\n   * Returns a string representation of this object.\r\n   * @method toString\r\n   * @return {String} a string representation of the instance.\r\n   **/\n  p.toString = function () {\n    return \"[DisplayObject (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n  /**\r\n   * Called before the object gets drawn and is a chance to ensure the display state of the object is correct.\r\n   * Mostly used by {{#crossLink \"MovieClip\"}}{{/crossLink}} and {{#crossLink \"BitmapText\"}}{{/crossLink}} to\r\n   * correct their internal state and children prior to being drawn.\r\n   *\r\n   * Is manually called via draw in a {{#crossLink \"Stage\"}}{{/crossLink}} but is automatically called when\r\n   * present in a {{#crossLink \"StageGL\"}}{{/crossLink}} instance.\r\n   *\r\n   * @method _updateState\r\n   * @default null\r\n   */\n  p._updateState = null;\n\n  // separated so it can be used more easily in subclasses:\n  /**\r\n   * @method _cloneProps\r\n   * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\r\n   * instance copied into.\r\n   * @return {DisplayObject} o\r\n   * @protected\r\n   **/\n  p._cloneProps = function (o) {\n    o.alpha = this.alpha;\n    o.mouseEnabled = this.mouseEnabled;\n    o.tickEnabled = this.tickEnabled;\n    o.name = this.name;\n    o.regX = this.regX;\n    o.regY = this.regY;\n    o.rotation = this.rotation;\n    o.scaleX = this.scaleX;\n    o.scaleY = this.scaleY;\n    o.shadow = this.shadow;\n    o.skewX = this.skewX;\n    o.skewY = this.skewY;\n    o.visible = this.visible;\n    o.x = this.x;\n    o.y = this.y;\n    o.compositeOperation = this.compositeOperation;\n    o.snapToPixel = this.snapToPixel;\n    o.filters = this.filters == null ? null : this.filters.slice(0);\n    o.mask = this.mask;\n    o.hitArea = this.hitArea;\n    o.cursor = this.cursor;\n    o._bounds = this._bounds;\n    return o;\n  };\n\n  /**\r\n   * @method _applyShadow\r\n   * @protected\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Shadow} shadow\r\n   **/\n  p._applyShadow = function (ctx, shadow) {\n    shadow = shadow || Shadow.identity;\n    ctx.shadowColor = shadow.color;\n    ctx.shadowOffsetX = shadow.offsetX;\n    ctx.shadowOffsetY = shadow.offsetY;\n    ctx.shadowBlur = shadow.blur;\n  };\n\n  /**\r\n   * @method _tick\r\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n   * @protected\r\n   **/\n  p._tick = function (evtObj) {\n    // because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n    var ls = this._listeners;\n    if (ls && ls[\"tick\"]) {\n      // reset & reuse the event object to avoid construction / GC costs:\n      evtObj.target = null;\n      evtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n      this.dispatchEvent(evtObj);\n    }\n  };\n\n  /**\r\n   * @method _testHit\r\n   * @protected\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @return {Boolean}\r\n   **/\n  p._testHit = function (ctx) {\n    try {\n      var hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n    } catch (e) {\n      if (!DisplayObject.suppressCrossDomainErrors) {\n        throw \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n      }\n    }\n    return hit;\n  };\n\n  /**\r\n   * @method _getBounds\r\n   * @param {Matrix2D} matrix\r\n   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n   * @return {Rectangle}\r\n   * @protected\r\n   **/\n  p._getBounds = function (matrix, ignoreTransform) {\n    return this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n  };\n\n  /**\r\n   * @method _transformBounds\r\n   * @param {Rectangle} bounds\r\n   * @param {Matrix2D} matrix\r\n   * @param {Boolean} ignoreTransform\r\n   * @return {Rectangle}\r\n   * @protected\r\n   **/\n  p._transformBounds = function (bounds, matrix, ignoreTransform) {\n    if (!bounds) {\n      return bounds;\n    }\n    var x = bounds.x,\n      y = bounds.y,\n      width = bounds.width,\n      height = bounds.height,\n      mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n    if (x || y) {\n      mtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y);\n    } // TODO: simplify this.\n    if (matrix) {\n      mtx.prependMatrix(matrix);\n    }\n    var x_a = width * mtx.a,\n      x_b = width * mtx.b;\n    var y_c = height * mtx.c,\n      y_d = height * mtx.d;\n    var tx = mtx.tx,\n      ty = mtx.ty;\n    var minX = tx,\n      maxX = tx,\n      minY = ty,\n      maxY = ty;\n    if ((x = x_a + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n    if ((x = x_a + y_c + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n    if ((x = y_c + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n    if ((y = x_b + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n    if ((y = x_b + y_d + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n    if ((y = y_d + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n    return bounds.setValues(minX, minY, maxX - minX, maxY - minY);\n  };\n\n  /**\r\n   * Indicates whether the display object has any mouse event listeners or a cursor.\r\n   * @method _isMouseOpaque\r\n   * @return {Boolean}\r\n   * @protected\r\n   **/\n  p._hasMouseEventListener = function () {\n    var evts = DisplayObject._MOUSE_EVENTS;\n    for (var i = 0, l = evts.length; i < l; i++) {\n      if (this.hasEventListener(evts[i])) {\n        return true;\n      }\n    }\n    return !!this.cursor;\n  };\n  createjs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\n})();\n\n//##############################################################################\n// Container.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\r\n   * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\r\n   * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\r\n   * transform them as a group, while still being able to move the individual parts relative to each other. Children of\r\n   * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\r\n   * Container.\r\n   *\r\n   * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\r\n   * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\r\n   * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      var container = new createjs.Container();\r\n   *      container.addChild(bitmapInstance, shapeInstance);\r\n   *      container.x = 100;\r\n   *\r\n   * @class Container\r\n   * @extends DisplayObject\r\n   * @constructor\r\n   **/\n  function Container() {\n    this.DisplayObject_constructor();\n\n    // public properties:\n    /**\r\n     * The array of children in the display list. You should usually use the child management methods such as\r\n     * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\r\n     * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\r\n     * included for advanced uses.\r\n     * @property children\r\n     * @type Array\r\n     * @default null\r\n     **/\n    this.children = [];\n\n    /**\r\n     * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\r\n     * If false, the children will be aggregated under the container - for example, a click on a child shape would\r\n     * trigger a click event on the container.\r\n     * @property mouseChildren\r\n     * @type Boolean\r\n     * @default true\r\n     **/\n    this.mouseChildren = true;\n\n    /**\r\n     * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\r\n     * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\r\n     * @property tickChildren\r\n     * @type Boolean\r\n     * @default true\r\n     **/\n    this.tickChildren = true;\n  }\n  var p = createjs.extend(Container, createjs.DisplayObject);\n\n  // getter / setters:\n  /**\r\n   * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\r\n   * @method _getNumChildren\r\n   * @protected\r\n   * @return {Number}\r\n   **/\n  p._getNumChildren = function () {\n    return this.children.length;\n  };\n  // Container.getNumChildren is @deprecated. Remove for 1.1+\n  p.getNumChildren = createjs.deprecate(p._getNumChildren, \"Container.getNumChildren\");\n\n  /**\r\n   * Returns the number of children in the container.\r\n   * @property numChildren\r\n   * @type {Number}\r\n   * @readonly\r\n   **/\n  try {\n    Object.defineProperties(p, {\n      numChildren: {\n        get: p._getNumChildren\n      }\n    });\n  } catch (e) {}\n\n  // public methods:\n  /**\r\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\r\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\r\n   * @method initialize\r\n   * @deprecated in favour of `createjs.promote()`\r\n   **/\n  p.initialize = Container; // TODO: deprecated.\n\n  /**\r\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n   * This does not account for whether it would be visible within the boundaries of the stage.\r\n   *\r\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n   * @method isVisible\r\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n   **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.children.length;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n  /**\r\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n   * Returns true if the draw was handled (useful for overriding functionality).\r\n   *\r\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n   * @method draw\r\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\r\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\r\n   * into itself).\r\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    // this ensures we don't have issues with display list changes that occur during a draw:\n    var list = this.children.slice();\n    for (var i = 0, l = list.length; i < l; i++) {\n      var child = list[i];\n      if (!child.isVisible()) {\n        continue;\n      }\n\n      // draw the child:\n      ctx.save();\n      child.updateContext(ctx);\n      child.draw(ctx);\n      ctx.restore();\n    }\n    return true;\n  };\n\n  /**\r\n   * Adds a child to the top of the display list.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   * \t\tcontainer.addChild(bitmapInstance);\r\n   *\r\n   * You can also add multiple children at once:\r\n   *\r\n   * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\r\n   *\r\n   * @method addChild\r\n   * @param {DisplayObject} child The display object to add.\r\n   * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\r\n   **/\n  p.addChild = function (child) {\n    if (child == null) {\n      return child;\n    }\n    var l = arguments.length;\n    if (l > 1) {\n      for (var i = 0; i < l; i++) {\n        this.addChild(arguments[i]);\n      }\n      return arguments[l - 1];\n    }\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    var par = child.parent,\n      silent = par === this;\n    par && par._removeChildAt(createjs.indexOf(par.children, child), silent);\n    child.parent = this;\n    this.children.push(child);\n    if (!silent) {\n      child.dispatchEvent(\"added\");\n    }\n    return child;\n  };\n\n  /**\r\n   * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\r\n   * setting its parent to this Container.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      addChildAt(child1, index);\r\n   *\r\n   * You can also add multiple children, such as:\r\n   *\r\n   *      addChildAt(child1, child2, ..., index);\r\n   *\r\n   * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\r\n   * you could use:\r\n   *\r\n   *      container.addChildAt(myShape, container.getChildIndex(otherShape));\r\n   *\r\n   * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\r\n   *\r\n   * @method addChildAt\r\n   * @param {DisplayObject} child The display object to add.\r\n   * @param {Number} index The index to add the child at.\r\n   * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\r\n   **/\n  p.addChildAt = function (child, index) {\n    var l = arguments.length;\n    var indx = arguments[l - 1]; // can't use the same name as the index param or it replaces arguments[1]\n    if (indx < 0 || indx > this.children.length) {\n      return arguments[l - 2];\n    }\n    if (l > 2) {\n      for (var i = 0; i < l - 1; i++) {\n        this.addChildAt(arguments[i], indx + i);\n      }\n      return arguments[l - 2];\n    }\n    var par = child.parent,\n      silent = par === this;\n    par && par._removeChildAt(createjs.indexOf(par.children, child), silent);\n    child.parent = this;\n    this.children.splice(index, 0, child);\n    if (!silent) {\n      child.dispatchEvent(\"added\");\n    }\n    return child;\n  };\n\n  /**\r\n   * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\r\n   * already known.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      container.removeChild(child);\r\n   *\r\n   * You can also remove multiple children:\r\n   *\r\n   *      removeChild(child1, child2, ...);\r\n   *\r\n   * Returns true if the child (or children) was removed, or false if it was not in the display list.\r\n   * @method removeChild\r\n   * @param {DisplayObject} child The child to remove.\r\n   * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\r\n   **/\n  p.removeChild = function (child) {\n    var l = arguments.length;\n    if (l > 1) {\n      var good = true;\n      for (var i = 0; i < l; i++) {\n        good = good && this.removeChild(arguments[i]);\n      }\n      return good;\n    }\n    return this._removeChildAt(createjs.indexOf(this.children, child));\n  };\n\n  /**\r\n   * Removes the child at the specified index from the display list, and sets its parent to null.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      container.removeChildAt(2);\r\n   *\r\n   * You can also remove multiple children:\r\n   *\r\n   *      container.removeChild(2, 7, ...)\r\n   *\r\n   * Returns true if the child (or children) was removed, or false if any index was out of range.\r\n   * @method removeChildAt\r\n   * @param {Number} index The index of the child to remove.\r\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\r\n   **/\n  p.removeChildAt = function (index) {\n    var l = arguments.length;\n    if (l > 1) {\n      var a = [];\n      for (var i = 0; i < l; i++) {\n        a[i] = arguments[i];\n      }\n      a.sort(function (a, b) {\n        return b - a;\n      });\n      var good = true;\n      for (var i = 0; i < l; i++) {\n        good = good && this._removeChildAt(a[i]);\n      }\n      return good;\n    }\n    return this._removeChildAt(index);\n  };\n\n  /**\r\n   * Removes all children from the display list.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   * \tcontainer.removeAllChildren();\r\n   *\r\n   * @method removeAllChildren\r\n   **/\n  p.removeAllChildren = function () {\n    var kids = this.children;\n    while (kids.length) {\n      this._removeChildAt(0);\n    }\n  };\n\n  /**\r\n   * Returns the child at the specified index.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      container.getChildAt(2);\r\n   *\r\n   * @method getChildAt\r\n   * @param {Number} index The index of the child to return.\r\n   * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\r\n   **/\n  p.getChildAt = function (index) {\n    return this.children[index];\n  };\n\n  /**\r\n   * Returns the child with the specified name.\r\n   * @method getChildByName\r\n   * @param {String} name The name of the child to return.\r\n   * @return {DisplayObject} The child with the specified name.\r\n   **/\n  p.getChildByName = function (name) {\n    var kids = this.children;\n    for (var i = 0, l = kids.length; i < l; i++) {\n      if (kids[i].name == name) {\n        return kids[i];\n      }\n    }\n    return null;\n  };\n\n  /**\r\n   * Performs an array sort operation on the child list.\r\n   *\r\n   * <h4>Example: Display children with a higher y in front.</h4>\r\n   * \r\n   *      var sortFunction = function(obj1, obj2, options) {\r\n   *          if (obj1.y > obj2.y) { return 1; }\r\n   *          if (obj1.y < obj2.y) { return -1; }\r\n   *          return 0;\r\n   *      }\r\n   *      container.sortChildren(sortFunction);\r\n   *\r\n   * @method sortChildren\r\n   * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\r\n   * documentation for details.\r\n   **/\n  p.sortChildren = function (sortFunction) {\n    this.children.sort(sortFunction);\n  };\n\n  /**\r\n   * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      var index = container.getChildIndex(child);\r\n   *\r\n   * @method getChildIndex\r\n   * @param {DisplayObject} child The child to return the index of.\r\n   * @return {Number} The index of the specified child. -1 if the child is not found.\r\n   **/\n  p.getChildIndex = function (child) {\n    return createjs.indexOf(this.children, child);\n  };\n\n  /**\r\n   * Swaps the children at the specified indexes. Fails silently if either index is out of range.\r\n   * @method swapChildrenAt\r\n   * @param {Number} index1\r\n   * @param {Number} index2\r\n   **/\n  p.swapChildrenAt = function (index1, index2) {\n    var kids = this.children;\n    var o1 = kids[index1];\n    var o2 = kids[index2];\n    if (!o1 || !o2) {\n      return;\n    }\n    kids[index1] = o2;\n    kids[index2] = o1;\n  };\n\n  /**\r\n   * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\r\n   * Container.\r\n   * @method swapChildren\r\n   * @param {DisplayObject} child1\r\n   * @param {DisplayObject} child2\r\n   **/\n  p.swapChildren = function (child1, child2) {\n    var kids = this.children;\n    var index1, index2;\n    for (var i = 0, l = kids.length; i < l; i++) {\n      if (kids[i] == child1) {\n        index1 = i;\n      }\n      if (kids[i] == child2) {\n        index2 = i;\n      }\n      if (index1 != null && index2 != null) {\n        break;\n      }\n    }\n    if (i == l) {\n      return;\n    } // TODO: throw error?\n    kids[index1] = child2;\n    kids[index2] = child1;\n  };\n\n  /**\r\n   * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\r\n   * @param {DisplayObject} child\r\n   * @param {Number} index  \r\n   * @method setChildIndex\r\n   **/\n  p.setChildIndex = function (child, index) {\n    var kids = this.children,\n      l = kids.length;\n    if (child.parent != this || index < 0 || index >= l) {\n      return;\n    }\n    for (var i = 0; i < l; i++) {\n      if (kids[i] == child) {\n        break;\n      }\n    }\n    if (i == l || i == index) {\n      return;\n    }\n    kids.splice(i, 1);\n    kids.splice(index, 0, child);\n  };\n\n  /**\r\n   * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\r\n   * of this container.\r\n   * @method contains\r\n   * @param {DisplayObject} child The DisplayObject to be checked.\r\n   * @return {Boolean} true if the specified display object either is this container or is a descendent.\r\n   **/\n  p.contains = function (child) {\n    while (child) {\n      if (child == this) {\n        return true;\n      }\n      child = child.parent;\n    }\n    return false;\n  };\n\n  /**\r\n   * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\r\n   * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\r\n   * transform properties including regX/Y.\r\n   * @method hitTest\r\n   * @param {Number} x The x position to check in the display object's local coordinates.\r\n   * @param {Number} y The y position to check in the display object's local coordinates.\r\n   * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\r\n   * coordinates.\r\n   **/\n  p.hitTest = function (x, y) {\n    // TODO: optimize to use the fast cache check where possible.\n    return this.getObjectUnderPoint(x, y) != null;\n  };\n\n  /**\r\n   * Returns an array of all display objects under the specified coordinates that are in this container's display\r\n   * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n   * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\r\n   * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\r\n   * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\r\n   * and only if the mouse's position has changed.\r\n   * \r\n   * <ul>\r\n   *     <li>By default (mode=0) this method evaluates all display objects.</li>\r\n   *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n   * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\r\n   * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\r\n   * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\r\n   * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\r\n   * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\r\n   * </li>\r\n   * \r\n   * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\r\n   * @method getObjectsUnderPoint\r\n   * @param {Number} x The x position in the container to test.\r\n   * @param {Number} y The y position in the container to test.\r\n   * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n   * @return {Array} An Array of DisplayObjects under the specified coordinates.\r\n   **/\n  p.getObjectsUnderPoint = function (x, y, mode) {\n    var arr = [];\n    var pt = this.localToGlobal(x, y);\n    this._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode == 1);\n    return arr;\n  };\n\n  /**\r\n   * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\r\n   * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\r\n   * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\r\n   * @method getObjectUnderPoint\r\n   * @param {Number} x The x position in the container to test.\r\n   * @param {Number} y The y position in the container to test.\r\n   * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n   * @return {DisplayObject} The top-most display object under the specified coordinates.\r\n   **/\n  p.getObjectUnderPoint = function (x, y, mode) {\n    var pt = this.localToGlobal(x, y);\n    return this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode == 1);\n  };\n\n  /**\r\n   * Docced in superclass.\r\n   */\n  p.getBounds = function () {\n    return this._getBounds(null, true);\n  };\n\n  /**\r\n   * Docced in superclass.\r\n   */\n  p.getTransformedBounds = function () {\n    return this._getBounds();\n  };\n\n  /**\r\n   * Returns a clone of this Container. Some properties that are specific to this instance's current context are\r\n   * reverted to their defaults (for example .parent).\r\n   * @method clone\r\n   * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\r\n   * properties of the container will be cloned, but the new instance will not have any children.\r\n   * @return {Container} A clone of the current Container instance.\r\n   **/\n  p.clone = function (recursive) {\n    var o = this._cloneProps(new Container());\n    if (recursive) {\n      this._cloneChildren(o);\n    }\n    return o;\n  };\n\n  /**\r\n   * Returns a string representation of this object.\r\n   * @method toString\r\n   * @return {String} a string representation of the instance.\r\n   **/\n  p.toString = function () {\n    return \"[Container (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n  /**\r\n   * @method _tick\r\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n   * @protected\r\n   **/\n  p._tick = function (evtObj) {\n    if (this.tickChildren) {\n      for (var i = this.children.length - 1; i >= 0; i--) {\n        var child = this.children[i];\n        if (child.tickEnabled && child._tick) {\n          child._tick(evtObj);\n        }\n      }\n    }\n    this.DisplayObject__tick(evtObj);\n  };\n\n  /**\r\n   * Recursively clones all children of this container, and adds them to the target container.\r\n   * @method cloneChildren\r\n   * @protected\r\n   * @param {Container} o The target container.\r\n   **/\n  p._cloneChildren = function (o) {\n    if (o.children.length) {\n      o.removeAllChildren();\n    }\n    var arr = o.children;\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var clone = this.children[i].clone(true);\n      clone.parent = o;\n      arr.push(clone);\n    }\n  };\n\n  /**\r\n   * Removes the child at the specified index from the display list, and sets its parent to null.\r\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\r\n   * @method removeChildAt\r\n   * @protected\r\n   * @param {Number} index The index of the child to remove.\r\n   * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\r\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\r\n   **/\n  p._removeChildAt = function (index, silent) {\n    if (index < 0 || index > this.children.length - 1) {\n      return false;\n    }\n    var child = this.children[index];\n    if (child) {\n      child.parent = null;\n    }\n    this.children.splice(index, 1);\n    if (!silent) {\n      child.dispatchEvent(\"removed\");\n    }\n    return true;\n  };\n\n  /**\r\n   * @method _getObjectsUnderPoint\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   * @param {Array} arr\r\n   * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\r\n   * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\r\n   * @param {Number} currentDepth Indicates the current depth of the search.\r\n   * @return {DisplayObject}\r\n   * @protected\r\n   **/\n  p._getObjectsUnderPoint = function (x, y, arr, mouse, activeListener, currentDepth) {\n    currentDepth = currentDepth || 0;\n    if (!currentDepth && !this._testMask(this, x, y)) {\n      return null;\n    }\n    var mtx,\n      ctx = createjs.DisplayObject._hitTestContext;\n    activeListener = activeListener || mouse && this._hasMouseEventListener();\n\n    // draw children one at a time, and check if we get a hit:\n    var children = this.children,\n      l = children.length;\n    for (var i = l - 1; i >= 0; i--) {\n      var child = children[i];\n      var hitArea = child.hitArea;\n      if (!child.visible || !hitArea && !child.isVisible() || mouse && !child.mouseEnabled) {\n        continue;\n      }\n      if (!hitArea && !this._testMask(child, x, y)) {\n        continue;\n      }\n\n      // if a child container has a hitArea then we only need to check its hitAre2a, so we can treat it as a normal DO:\n      if (!hitArea && child instanceof Container) {\n        var result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n        if (!arr && result) {\n          return mouse && !this.mouseChildren ? this : result;\n        }\n      } else {\n        if (mouse && !activeListener && !child._hasMouseEventListener()) {\n          continue;\n        }\n\n        // TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n        var props = child.getConcatenatedDisplayProps(child._props);\n        mtx = props.matrix;\n        if (hitArea) {\n          mtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n          props.alpha = hitArea.alpha;\n        }\n        ctx.globalAlpha = props.alpha;\n        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n        (hitArea || child).draw(ctx);\n        if (!this._testHit(ctx)) {\n          continue;\n        }\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, 2, 2);\n        if (arr) {\n          arr.push(child);\n        } else {\n          return mouse && !this.mouseChildren ? this : child;\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\r\n   * @method _testMask\r\n   * @param {DisplayObject} target\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   * @return {Boolean} Indicates whether the x/y is within the masked region.\r\n   * @protected\r\n   **/\n  p._testMask = function (target, x, y) {\n    var mask = target.mask;\n    if (!mask || !mask.graphics || mask.graphics.isEmpty()) {\n      return true;\n    }\n    var mtx = this._props.matrix,\n      parent = target.parent;\n    mtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n    mtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n    var ctx = createjs.DisplayObject._hitTestContext;\n    ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n\n    // draw the mask as a solid fill:\n    mask.graphics.drawAsPath(ctx);\n    ctx.fillStyle = \"#000\";\n    ctx.fill();\n    if (!this._testHit(ctx)) {\n      return false;\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return true;\n  };\n\n  /**\r\n   * @method _getBounds\r\n   * @param {Matrix2D} matrix\r\n   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n   * @return {Rectangle}\r\n   * @protected\r\n   **/\n  p._getBounds = function (matrix, ignoreTransform) {\n    var bounds = this.DisplayObject_getBounds();\n    if (bounds) {\n      return this._transformBounds(bounds, matrix, ignoreTransform);\n    }\n    var mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n    if (matrix) {\n      mtx.prependMatrix(matrix);\n    }\n    var l = this.children.length,\n      rect = null;\n    for (var i = 0; i < l; i++) {\n      var child = this.children[i];\n      if (!child.visible || !(bounds = child._getBounds(mtx))) {\n        continue;\n      }\n      if (rect) {\n        rect.extend(bounds.x, bounds.y, bounds.width, bounds.height);\n      } else {\n        rect = bounds.clone();\n      }\n    }\n    return rect;\n  };\n  createjs.Container = createjs.promote(Container, \"DisplayObject\");\n})();\n\n//##############################################################################\n// Stage.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n   * method is called, it will render its display list to its target canvas.\n   *\n   * <h4>Example</h4>\n   * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n   * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n   *\n   *      var stage = new createjs.Stage(\"canvasElementId\");\n   *      var image = new createjs.Bitmap(\"imagePath.png\");\n   *      stage.addChild(image);\n   *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n   *      function handleTick(event) {\n   *          image.x += 10;\n   *          stage.update();\n   *      }\n   *\n   * @class Stage\n   * @extends Container\n   * @constructor\n   * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n   * of a canvas object in the current document.\n   **/\n  function Stage(canvas) {\n    this.Container_constructor();\n\n    // public properties:\n    /**\n     * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n     * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n     * example).\n     *\n     * <h4>Example</h4>\n     *\n     *      var stage = new createjs.Stage(\"canvasId\");\n     *      stage.autoClear = false;\n     *\n     * @property autoClear\n     * @type Boolean\n     * @default true\n     **/\n    this.autoClear = true;\n\n    /**\n     * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n     * first stage that will be ticked (or they will clear each other's render).\n     *\n     * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n     * new canvas or mouse events will not work as expected. For example:\n     *\n     *      myStage.enableDOMEvents(false);\n     *      myStage.canvas = anotherCanvas;\n     *      myStage.enableDOMEvents(true);\n     *\n     * @property canvas\n     * @type HTMLCanvasElement | Object\n     **/\n    this.canvas = typeof canvas == \"string\" ? document.getElementById(canvas) : canvas;\n\n    /**\n     * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @property mouseX\n     * @type Number\n     * @readonly\n     **/\n    this.mouseX = 0;\n\n    /**\n     * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @property mouseY\n     * @type Number\n     * @readonly\n     **/\n    this.mouseY = 0;\n\n    /**\n     * Specifies the area of the stage to affect when calling update. This can be use to selectively\n     * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n     * @property drawRect\n     * @type {Rectangle}\n     */\n    this.drawRect = null;\n\n    /**\n     * Indicates whether display objects should be rendered on whole pixels. You can set the\n     * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n     * display objects to false to enable/disable this behaviour on a per instance basis.\n     * @property snapToPixelEnabled\n     * @type Boolean\n     * @default false\n     **/\n    this.snapToPixelEnabled = false;\n\n    /**\n     * Indicates whether the mouse is currently within the bounds of the canvas.\n     * @property mouseInBounds\n     * @type Boolean\n     * @default false\n     **/\n    this.mouseInBounds = false;\n\n    /**\n     * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n     * @property tickOnUpdate\n     * @type Boolean\n     * @default true\n     **/\n    this.tickOnUpdate = true;\n\n    /**\n     * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n     * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n     * x/y/rawX/rawY.\n     * @property mouseMoveOutside\n     * @type Boolean\n     * @default false\n     **/\n    this.mouseMoveOutside = false;\n\n    /**\n     * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n     * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n     * @property preventSelection\n     * @type Boolean\n     * @default true\n     **/\n    this.preventSelection = true;\n\n    /**\n     * The hitArea property is not supported for Stage.\n     * @property hitArea\n     * @type {DisplayObject}\n     * @default null\n     */\n\n    // private properties:\n    /**\n     * Holds objects with data for each active pointer id. Each object has the following properties:\n     * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n     * @property _pointerData\n     * @type {Object}\n     * @private\n     */\n    this._pointerData = {};\n\n    /**\n     * Number of active pointers.\n     * @property _pointerCount\n     * @type {Object}\n     * @private\n     */\n    this._pointerCount = 0;\n\n    /**\n     * The ID of the primary pointer.\n     * @property _primaryPointerID\n     * @type {Object}\n     * @private\n     */\n    this._primaryPointerID = null;\n\n    /**\n     * @property _mouseOverIntervalID\n     * @protected\n     * @type Number\n     **/\n    this._mouseOverIntervalID = null;\n\n    /**\n     * @property _nextStage\n     * @protected\n     * @type Stage\n     **/\n    this._nextStage = null;\n\n    /**\n     * @property _prevStage\n     * @protected\n     * @type Stage\n     **/\n    this._prevStage = null;\n\n    // initialize:\n    this.enableDOMEvents(true);\n  }\n  var p = createjs.extend(Stage, createjs.Container);\n\n  // events:\n  /**\n   * Dispatched when the user moves the mouse over the canvas.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event stagemousemove\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n   * class for a listing of event properties.\n   * @event stagemousedown\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n   * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n   * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n   * @event stagemouseup\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n   * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n   * class for a listing of event properties.\n   * @event mouseleave\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n   * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n   * class for a listing of event properties.\n   * @event mouseenter\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately before the tick event is propagated through the display list.\n   * You can call preventDefault on the event object to cancel propagating the tick event.\n   * @event tickstart\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n   * tickOnUpdate is false. Precedes the \"drawstart\" event.\n   * @event tickend\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n   * You can call preventDefault on the event object to cancel the draw.\n   * @event drawstart\n   * @since 0.7.0\n   */\n\n  /**\n   * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n   * @event drawend\n   * @since 0.7.0\n   */\n\n  // getter / setters:\n  /**\n   * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n   * This can be useful in cases where you have multiple layered canvases and want user interactions\n   * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n   *\n   *      topStage.nextStage = bottomStage;\n   *\n   * To disable relaying, set nextStage to null.\n   * \n   * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n   * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n   * Considerations when using roll over in relay targets:<OL>\n   * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n   * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n   * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n   * </OL>\n   * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n   * 30 as it's desired frequency):\n   * \ttopStage.nextStage = targetStage;\n   * \ttopStage.enableMouseOver(10);\n   * \ttargetStage.enableMouseOver(30);\n   * \n   * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n   * DOM events using:\n   * \n   *\ttargetStage.enableDOMEvents(false);\n   * \n   * @property nextStage\n   * @type {Stage}\n   **/\n  p._get_nextStage = function () {\n    return this._nextStage;\n  };\n  p._set_nextStage = function (value) {\n    if (this._nextStage) {\n      this._nextStage._prevStage = null;\n    }\n    if (value) {\n      value._prevStage = this;\n    }\n    this._nextStage = value;\n  };\n  try {\n    Object.defineProperties(p, {\n      nextStage: {\n        get: p._get_nextStage,\n        set: p._set_nextStage\n      }\n    });\n  } catch (e) {} // TODO: use Log\n\n  // public methods:\n  /**\n   * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n   * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n   * and then render the display list to the canvas.\n   *\n   * @method update\n   * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n   **/\n  p.update = function (props) {\n    if (!this.canvas) {\n      return;\n    }\n    if (this.tickOnUpdate) {\n      this.tick(props);\n    }\n    if (this.dispatchEvent(\"drawstart\", false, true) === false) {\n      return;\n    }\n    createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n    var r = this.drawRect,\n      ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    if (this.autoClear) {\n      if (r) {\n        ctx.clearRect(r.x, r.y, r.width, r.height);\n      } else {\n        ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n      }\n    }\n    ctx.save();\n    if (this.drawRect) {\n      ctx.beginPath();\n      ctx.rect(r.x, r.y, r.width, r.height);\n      ctx.clip();\n    }\n    this.updateContext(ctx);\n    this.draw(ctx, false);\n    ctx.restore();\n    this.dispatchEvent(\"drawend\");\n  };\n\n  /**\n   * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n   * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n   *\n   * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n   * propagated to listeners.\n   *\n   * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n   * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n   * passed as the `props` parameter to `tick()`. For example:\n   *\n   * \tTicker.on(\"tick\", handleTick);\n   * \tfunction handleTick(evtObj) {\n   * \t\t// clone the event object from Ticker, and add some custom data to it:\n   * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n   * \t\t\n   * \t\t// pass it to stage.update():\n   * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n   * \t}\n   * \t\n   * \t// ...\n   * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n   * \tfunction handleDisplayObjectTick(evt) {\n   * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n   * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n   * \t}\n   * \n   * @method tick\n   * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n   **/\n  p.tick = function (props) {\n    if (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) {\n      return;\n    }\n    var evtObj = new createjs.Event(\"tick\");\n    if (props) {\n      for (var n in props) {\n        if (props.hasOwnProperty(n)) {\n          evtObj[n] = props[n];\n        }\n      }\n    }\n    this._tick(evtObj);\n    this.dispatchEvent(\"tickend\");\n  };\n\n  /**\n   * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n   * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n   * directly, using:\n   *\n   *      Ticker.addEventListener(\"tick\", myStage);\n   *\n   * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n   * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n   * @property handleEvent\n   * @type Function\n   **/\n  p.handleEvent = function (evt) {\n    if (evt.type == \"tick\") {\n      this.update(evt);\n    }\n  };\n\n  /**\n   * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n   * @method clear\n   **/\n  p.clear = function () {\n    if (!this.canvas) {\n      return;\n    }\n    var ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n  };\n\n  /**\n   * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n   * be specified as the src value of an image element.\n   * @method toDataURL\n   * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n   * value is allowed. The default value is a transparent background.\n   * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n   * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n   * @return {String} a Base64 encoded image.\n   **/\n  p.toDataURL = function (backgroundColor, mimeType) {\n    var data,\n      ctx = this.canvas.getContext('2d'),\n      w = this.canvas.width,\n      h = this.canvas.height;\n    if (backgroundColor) {\n      data = ctx.getImageData(0, 0, w, h);\n      var compositeOperation = ctx.globalCompositeOperation;\n      ctx.globalCompositeOperation = \"destination-over\";\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, w, h);\n    }\n    var dataURL = this.canvas.toDataURL(mimeType || \"image/png\");\n    if (backgroundColor) {\n      ctx.putImageData(data, 0, 0);\n      ctx.globalCompositeOperation = compositeOperation;\n    }\n    return dataURL;\n  };\n\n  /**\n   * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n   * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n   * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n   * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n   * independently of mouse move events via the optional `frequency` parameter.\n   *\n   * <h4>Example</h4>\n   *\n   *      var stage = new createjs.Stage(\"canvasId\");\n   *      stage.enableMouseOver(10); // 10 updates per second\n   *\n   * @method enableMouseOver\n   * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n   * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n   * responsive, but uses less CPU.\n   **/\n  p.enableMouseOver = function (frequency) {\n    if (this._mouseOverIntervalID) {\n      clearInterval(this._mouseOverIntervalID);\n      this._mouseOverIntervalID = null;\n      if (frequency == 0) {\n        this._testMouseOver(true);\n      }\n    }\n    if (frequency == null) {\n      frequency = 20;\n    } else if (frequency <= 0) {\n      return;\n    }\n    var o = this;\n    this._mouseOverIntervalID = setInterval(function () {\n      o._testMouseOver();\n    }, 1000 / Math.min(50, frequency));\n  };\n\n  /**\n   * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n   * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n   * events from the page.\n   *\n   * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n   * new canvas or mouse events will not work as expected. For example:\n   *\n   *      myStage.enableDOMEvents(false);\n   *      myStage.canvas = anotherCanvas;\n   *      myStage.enableDOMEvents(true);\n   *\n   * @method enableDOMEvents\n   * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n   **/\n  p.enableDOMEvents = function (enable) {\n    if (enable == null) {\n      enable = true;\n    }\n    var n,\n      o,\n      ls = this._eventListeners;\n    if (!enable && ls) {\n      for (n in ls) {\n        o = ls[n];\n        o.t.removeEventListener(n, o.f, false);\n      }\n      this._eventListeners = null;\n    } else if (enable && !ls && this.canvas) {\n      var t = window.addEventListener ? window : document;\n      var _this = this;\n      ls = this._eventListeners = {};\n      ls[\"mouseup\"] = {\n        t: t,\n        f: function (e) {\n          _this._handleMouseUp(e);\n        }\n      };\n      ls[\"mousemove\"] = {\n        t: t,\n        f: function (e) {\n          _this._handleMouseMove(e);\n        }\n      };\n      ls[\"dblclick\"] = {\n        t: this.canvas,\n        f: function (e) {\n          _this._handleDoubleClick(e);\n        }\n      };\n      ls[\"mousedown\"] = {\n        t: this.canvas,\n        f: function (e) {\n          _this._handleMouseDown(e);\n        }\n      };\n      for (n in ls) {\n        o = ls[n];\n        o.t.addEventListener(n, o.f, false);\n      }\n    }\n  };\n\n  /**\n   * Stage instances cannot be cloned.\n   * @method clone\n   **/\n  p.clone = function () {\n    throw \"Stage cannot be cloned.\";\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Stage (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n  /**\n   * @method _getElementRect\n   * @protected\n   * @param {HTMLElement} e\n   **/\n  p._getElementRect = function (e) {\n    var bounds;\n    try {\n      bounds = e.getBoundingClientRect();\n    } // this can fail on disconnected DOM elements in IE9\n    catch (err) {\n      bounds = {\n        top: e.offsetTop,\n        left: e.offsetLeft,\n        width: e.offsetWidth,\n        height: e.offsetHeight\n      };\n    }\n    var offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n    var offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);\n    var styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n    var padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth);\n    var padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth);\n    var padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth);\n    var padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth);\n\n    // note: in some browsers bounds properties are read only.\n    return {\n      left: bounds.left + offX + padL,\n      right: bounds.right + offX - padR,\n      top: bounds.top + offY + padT,\n      bottom: bounds.bottom + offY - padB\n    };\n  };\n\n  /**\n   * @method _getPointerData\n   * @protected\n   * @param {Number} id\n   **/\n  p._getPointerData = function (id) {\n    var data = this._pointerData[id];\n    if (!data) {\n      data = this._pointerData[id] = {\n        x: 0,\n        y: 0\n      };\n    }\n    return data;\n  };\n\n  /**\n   * @method _handleMouseMove\n   * @protected\n   * @param {MouseEvent} e\n   **/\n  p._handleMouseMove = function (e) {\n    if (!e) {\n      e = window.event;\n    }\n    this._handlePointerMove(-1, e, e.pageX, e.pageY);\n  };\n\n  /**\n   * @method _handlePointerMove\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n  p._handlePointerMove = function (id, e, pageX, pageY, owner) {\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n    if (!this.canvas) {\n      return;\n    }\n    var nextStage = this._nextStage,\n      o = this._getPointerData(id);\n    var inBounds = o.inBounds;\n    this._updatePointerPosition(id, e, pageX, pageY);\n    if (inBounds || o.inBounds || this.mouseMoveOutside) {\n      if (id === -1 && o.inBounds == !inBounds) {\n        this._dispatchMouseEvent(this, inBounds ? \"mouseleave\" : \"mouseenter\", false, id, o, e);\n      }\n      this._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n      this._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n    }\n    nextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);\n  };\n\n  /**\n   * @method _updatePointerPosition\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   **/\n  p._updatePointerPosition = function (id, e, pageX, pageY) {\n    var rect = this._getElementRect(this.canvas);\n    pageX -= rect.left;\n    pageY -= rect.top;\n    var w = this.canvas.width;\n    var h = this.canvas.height;\n    pageX /= (rect.right - rect.left) / w;\n    pageY /= (rect.bottom - rect.top) / h;\n    var o = this._getPointerData(id);\n    if (o.inBounds = pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1) {\n      o.x = pageX;\n      o.y = pageY;\n    } else if (this.mouseMoveOutside) {\n      o.x = pageX < 0 ? 0 : pageX > w - 1 ? w - 1 : pageX;\n      o.y = pageY < 0 ? 0 : pageY > h - 1 ? h - 1 : pageY;\n    }\n    o.posEvtObj = e;\n    o.rawX = pageX;\n    o.rawY = pageY;\n    if (id === this._primaryPointerID || id === -1) {\n      this.mouseX = o.x;\n      this.mouseY = o.y;\n      this.mouseInBounds = o.inBounds;\n    }\n  };\n\n  /**\n   * @method _handleMouseUp\n   * @protected\n   * @param {MouseEvent} e\n   **/\n  p._handleMouseUp = function (e) {\n    this._handlePointerUp(-1, e, false);\n  };\n\n  /**\n   * @method _handlePointerUp\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Boolean} clear\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n  p._handlePointerUp = function (id, e, clear, owner) {\n    var nextStage = this._nextStage,\n      o = this._getPointerData(id);\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n    var target = null,\n      oTarget = o.target;\n    if (!owner && (oTarget || nextStage)) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n    }\n    if (o.down) {\n      this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target);\n      o.down = false;\n    }\n    if (target == oTarget) {\n      this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e);\n    }\n    this._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n    if (clear) {\n      if (id == this._primaryPointerID) {\n        this._primaryPointerID = null;\n      }\n      delete this._pointerData[id];\n    } else {\n      o.target = null;\n    }\n    nextStage && nextStage._handlePointerUp(id, e, clear, owner || target && this);\n  };\n\n  /**\n   * @method _handleMouseDown\n   * @protected\n   * @param {MouseEvent} e\n   **/\n  p._handleMouseDown = function (e) {\n    this._handlePointerDown(-1, e, e.pageX, e.pageY);\n  };\n\n  /**\n   * @method _handlePointerDown\n   * @protected\n   * @param {Number} id\n   * @param {Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n  p._handlePointerDown = function (id, e, pageX, pageY, owner) {\n    if (this.preventSelection) {\n      e.preventDefault();\n    }\n    if (this._primaryPointerID == null || id === -1) {\n      this._primaryPointerID = id;\n    } // mouse always takes over.\n\n    if (pageY != null) {\n      this._updatePointerPosition(id, e, pageX, pageY);\n    }\n    var target = null,\n      nextStage = this._nextStage,\n      o = this._getPointerData(id);\n    if (!owner) {\n      target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n    }\n    if (o.inBounds) {\n      this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target);\n      o.down = true;\n    }\n    this._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n    nextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n  };\n\n  /**\n   * @method _testMouseOver\n   * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   * @param {Stage} eventTarget The stage that the cursor is actively over.\n   * @protected\n   **/\n  p._testMouseOver = function (clear, owner, eventTarget) {\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n    var nextStage = this._nextStage;\n    if (!this._mouseOverIntervalID) {\n      // not enabled for mouseover, but should still relay the event.\n      nextStage && nextStage._testMouseOver(clear, owner, eventTarget);\n      return;\n    }\n    var o = this._getPointerData(-1);\n    // only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n    if (!o || !clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds) {\n      return;\n    }\n    var e = o.posEvtObj;\n    var isEventTarget = eventTarget || e && e.target == this.canvas;\n    var target = null,\n      common = -1,\n      cursor = \"\",\n      t,\n      i,\n      l;\n    if (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n      target = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n      this._mouseOverX = this.mouseX;\n      this._mouseOverY = this.mouseY;\n    }\n    var oldList = this._mouseOverTarget || [];\n    var oldTarget = oldList[oldList.length - 1];\n    var list = this._mouseOverTarget = [];\n\n    // generate ancestor list and check for cursor:\n    t = target;\n    while (t) {\n      list.unshift(t);\n      if (!cursor) {\n        cursor = t.cursor;\n      }\n      t = t.parent;\n    }\n    this.canvas.style.cursor = cursor;\n    if (!owner && eventTarget) {\n      eventTarget.canvas.style.cursor = cursor;\n    }\n\n    // find common ancestor:\n    for (i = 0, l = list.length; i < l; i++) {\n      if (list[i] != oldList[i]) {\n        break;\n      }\n      common = i;\n    }\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n    }\n    for (i = oldList.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n    }\n    for (i = list.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n    }\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n    }\n    nextStage && nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n  };\n\n  /**\n   * @method _handleDoubleClick\n   * @protected\n   * @param {MouseEvent} e\n   * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   **/\n  p._handleDoubleClick = function (e, owner) {\n    var target = null,\n      nextStage = this._nextStage,\n      o = this._getPointerData(-1);\n    if (!owner) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n      this._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n    }\n    nextStage && nextStage._handleDoubleClick(e, owner || target && this);\n  };\n\n  /**\n   * @method _dispatchMouseEvent\n   * @protected\n   * @param {DisplayObject} target\n   * @param {String} type\n   * @param {Boolean} bubbles\n   * @param {Number} pointerId\n   * @param {Object} o\n   * @param {MouseEvent} [nativeEvent]\n   * @param {DisplayObject} [relatedTarget]\n   **/\n  p._dispatchMouseEvent = function (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n    // TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n    if (!target || !bubbles && !target.hasEventListener(type)) {\n      return;\n    }\n    /*\n    // TODO: account for stage transformations?\n    this._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n    var pt = this._mtx.transformPoint(o.x, o.y);\n    var evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n    */\n    var evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n    target.dispatchEvent(evt);\n  };\n  createjs.Stage = createjs.promote(Stage, \"Container\");\n})();\n\n//##############################################################################\n// StageGL.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/*\n * README IF EDITING:\n * Terminology for developers:\n *\n * Vertex: a point that help defines a shape, 3 per triangle. Usually has an x,y,z but can have more/less info.\n * Vertex Property: a piece of information attached to the vertex like a vector3 containing x,y,z\n * Index/Indices: used in groups of 3 to define a triangle, points to vertices by their index in an array (some render\n * \t\tmodes do not use these)\n * Card: a group of 2 triangles used to display a rectangular image\n * U/V: common names for the [0-1] texture co-ordinates on an image\n * Batch: a single call to the renderer, best done as little as possible so multiple cards are put into a single batch\n * Buffer: WebGL array data\n * Program/Shader: For every vertex we run the Vertex shader. The results are used per pixel by the Fragment shader. When\n * \t\tcombined and paired these are a shader \"program\"\n * Texture: WebGL representation of image data and associated extra information\n * Slot: A space on the GPU into which textures can be loaded for use in a batch, using \"ActiveTexture\" switches texture slot.\n */\n\n(function () {\n  \"use strict\";\n\n  /**\n   * A StageGL instance is the root level {{#crossLink \"Container\"}}{{/crossLink}} for an WebGL-optimized display list,\n   * which is used in place of the usual {{#crossLink \"Stage\"}}{{/crossLink}}. This class should behave identically to\n   * a {{#crossLink \"Stage\"}}{{/crossLink}} except for WebGL-specific functionality.\n   *\n   * Each time the {{#crossLink \"Stage/tick\"}}{{/crossLink}} method is called, the display list is rendered to the\n   * target &lt;canvas/&gt; instance, ignoring non-WebGL-compatible display objects. On devices and browsers that don't\n   * support WebGL, content will automatically be rendered to canvas 2D context instead.\n   *\n   * <h4>Limitations</h4>\n   * - {{#crossLink \"Shape\"}}{{/crossLink}}, {{#crossLink \"Shadow\"}}{{/crossLink}}, and {{#crossLink \"Text\"}}{{/crossLink}}\n   * \tare not rendered when added to the display list.\n   * - To display something StageGL cannot render, {{#crossLink \"displayObject/cache\"}}{{/crossLink}} the object.\n   *\tCaches can be rendered regardless of source.\n   * - Images are wrapped as a webGL \"Texture\". Each graphics card has a limit to its concurrent Textures, too many \n   * Textures will noticeably slow performance.\n   * - Each cache counts as an individual Texture. As such {{#crossLink \"SpriteSheet\"}}{{/crossLink}} and \n   * {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}} are recommended practices to help keep texture counts low.\n   * - To use any image node (DOM Image/Canvas Element) between multiple StageGL instances it must be a \n   * {{#crossLink \"Bitmap/clone\"}}{{/crossLink}}, otherwise the GPU texture loading and tracking will get confused.\n   * - to avoid an up/down scaled render you must call {{#crossLink \"StageGL/updateViewport\"}}{{/crossLink}} if you\n   * resize your canvas after making a StageGL instance, this will properly size the WebGL context stored in memory.\n   * - Best performance in demanding scenarios will come from manual management of texture memory, but it is handled\n   * automatically by default. See {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} for details.\n   *\n   * <h4>Example</h4>\n   * This example creates a StageGL instance, adds a child to it, then uses the EaselJS {{#crossLink \"Ticker\"}}{{/crossLink}}\n   * to update the child and redraw the stage.\n   *\n   *      var stage = new createjs.StageGL(\"canvasElementId\");\n   *\n   *      var image = new createjs.Bitmap(\"imagePath.png\");\n   *      stage.addChild(image);\n   *\n   *      createjs.Ticker.on(\"tick\", handleTick);\n   *\n   *      function handleTick(event) {\n   *          image.x += 10;\n   *          stage.update();\n   *      }\n   *\n   * <h4>Notes</h4>\n   * - StageGL is not currently included in the minified version of EaselJS.\n   * - {{#crossLink \"SpriteContainer\"}}{{/crossLink}} (the previous approach to WebGL with EaselJS) has been deprecated.\n   * - Earlier versions of WebGL support in EaselJS (SpriteStage and SpriteContainer) had hard limitations on images\n   * \tper container, which have been solved.\n   *\n   * @class StageGL\n   * @extends Stage\n   * @constructor\n   * @param {HTMLCanvasElement | String | Object} canvas A canvas object that StageGL will render to, or the string id\n   *  of a canvas object in the current DOM.\n   * @param {Object} options All the option parameters in a reference object, some are not supported by some browsers.\n   * @param {Boolean} [options.preserveBuffer=false] If `true`, the canvas is NOT auto-cleared by WebGL (the spec\n   *  discourages setting this to `true`). This is useful if you want persistent draw effects.\n   * @param {Boolean} [options.antialias=false] Specifies whether or not the browser's WebGL implementation should try\n   *  to perform anti-aliasing. This will also enable linear pixel sampling on power-of-two textures (smoother images).\n   * @param {Boolean} [options.transparent=false] If `true`, the canvas is transparent. This is <strong>very</strong>\n   * expensive, and should be used with caution.\n   * @param {Boolean} [options.premultiply=false] Alters color handling. If `true`, this assumes the shader must\n   * account for pre-multiplied alpha. This can help avoid visual halo effects with some assets, but may also cause\n   * problems with other assets.\n   * @param {Integer} [options.autoPurge=1200] How often the system should automatically dump unused textures with\n   * `purgeTextures(autoPurge)` every `autoPurge/2` draws. See {{#crossLink \"StageGL/purgeTextures\"}}{{/crossLink}} for more\n   * information.\n   */\n  function StageGL(canvas, options) {\n    this.Stage_constructor(canvas);\n    if (options !== undefined) {\n      if (typeof options !== \"object\") {\n        throw \"Invalid options object\";\n      }\n      var premultiply = options.premultiply;\n      var transparent = options.transparent;\n      var antialias = options.antialias;\n      var preserveBuffer = options.preserveBuffer;\n      var autoPurge = options.autoPurge;\n    }\n\n    // public properties:\n    /**\n     * Console log potential issues and problems. This is designed to have <em>minimal</em> performance impact, so\n     * if extensive debugging information is required, this may be inadequate. See {{#crossLink \"WebGLInspector\"}}{{/crossLink}}\n     * @property vocalDebug\n     * @type {Boolean}\n     * @default false\n     */\n    this.vocalDebug = false;\n\n    // private properties:\n    /**\n     * Specifies whether or not the canvas is auto-cleared by WebGL. The WebGL spec discourages `true`.\n     * If true, the canvas is NOT auto-cleared by WebGL. Used when the canvas context is created and requires\n     * context re-creation to update.\n     * @property _preserveBuffer\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n    this._preserveBuffer = preserveBuffer || false;\n\n    /**\n     * Specifies whether or not the browser's WebGL implementation should try to perform anti-aliasing.\n     * @property _antialias\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n    this._antialias = antialias || false;\n\n    /**\n     * Specifies whether or not the browser's WebGL implementation should be transparent.\n     * @property _transparent\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n    this._transparent = transparent || false;\n\n    /**\n     * Specifies whether or not StageGL is handling colours as premultiplied alpha.\n     * @property _premultiply\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n    this._premultiply = premultiply || false;\n\n    /**\n     * Internal value of {{#crossLink \"StageGL/autoPurge\"}}{{/crossLink}}\n     * @property _autoPurge\n     * @protected\n     * @type {Integer}\n     * @default null\n     */\n    this._autoPurge = undefined;\n    this.autoPurge = autoPurge; //getter/setter handles setting the real value and validating\n\n    /**\n     * The width in px of the drawing surface saved in memory.\n     * @property _viewportWidth\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n    this._viewportWidth = 0;\n\n    /**\n     * The height in px of the drawing surface saved in memory.\n     * @property _viewportHeight\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n    this._viewportHeight = 0;\n\n    /**\n     * A 2D projection matrix used to convert WebGL's viewspace into canvas co-ordinates. Regular canvas display\n     * uses Top-Left values of [0,0] where WebGL uses a Center [0,0] Top-Right [1,1] (euclidean) system.\n     * @property _projectionMatrix\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n    this._projectionMatrix = null;\n\n    /**\n     * The current WebGL canvas context. Often shorthanded to just \"gl\" in many parts of the code.\n     * @property _webGLContext\n     * @protected\n     * @type {WebGLRenderingContext}\n     * @default null\n     */\n    this._webGLContext = null;\n\n    /**\n     * The color to use when the WebGL canvas has been cleared. May appear as a background color. Defaults to grey.\n     * @property _clearColor\n     * @protected\n     * @type {Object}\n     * @default {r: 0.50, g: 0.50, b: 0.50, a: 0.00}\n     */\n    this._clearColor = {\n      r: 0.50,\n      g: 0.50,\n      b: 0.50,\n      a: 0.00\n    };\n\n    /**\n     * The maximum number of cards (aka a single sprite) that can be drawn in one draw call. Use getter/setters to\n     * modify otherwise internal buffers may be incorrect sizes.\n     * @property _maxCardsPerBatch\n     * @protected\n     * @type {Number}\n     * @default StageGL.DEFAULT_MAX_BATCH_SIZE (10000)\n     */\n    this._maxCardsPerBatch = StageGL.DEFAULT_MAX_BATCH_SIZE; //TODO: write getter/setters for this\n\n    /**\n     * The shader program used to draw the current batch.\n     * @property _activeShader\n     * @protected\n     * @type {WebGLProgram}\n     * @default null\n     */\n    this._activeShader = null;\n\n    /**\n     * The vertex position data for the current draw call.\n     * @property _vertices\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n    this._vertices = null;\n\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_vertices:property\"}}{{/crossLink}}.\n     * @property _vertexPositionBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n    this._vertexPositionBuffer = null;\n\n    /**\n     * The vertex U/V data for the current draw call.\n     * @property _uvs\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n    this._uvs = null;\n\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_uvs:property\"}}{{/crossLink}}.\n     * @property _uvPositionBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n    this._uvPositionBuffer = null;\n\n    /**\n     * The vertex indices data for the current draw call.\n     * @property _indices\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n    this._indices = null;\n\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_indices:property\"}}{{/crossLink}}.\n     * @property _textureIndexBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n    this._textureIndexBuffer = null;\n\n    /**\n     * The vertices data for the current draw call.\n     * @property _alphas\n     * @protected\n     * @type {Float32Array}\n     * @default null\n     */\n    this._alphas = null;\n\n    /**\n     * The WebGL buffer attached to {{#crossLink \"StageGL/_alphas:property\"}}{{/crossLink}}.\n     * @property _alphaBuffer\n     * @protected\n     * @type {WebGLBuffer}\n     * @default null\n     */\n    this._alphaBuffer = null;\n\n    /**\n     * An index based lookup of every WebGL Texture currently in use.\n     * @property _drawTexture\n     * @protected\n     * @type {Array}\n     */\n    this._textureDictionary = [];\n\n    /**\n     * A string based lookup hash of which index a texture is stored at in the dictionary. The lookup string is\n     * often the src url.\n     * @property _textureIDs\n     * @protected\n     * @type {Object}\n     */\n    this._textureIDs = {};\n\n    /**\n     * An array of all the textures currently loaded into the GPU. The index in the array matches the GPU index.\n     * @property _batchTextures\n     * @protected\n     * @type {Array}\n     */\n    this._batchTextures = [];\n\n    /**\n     * An array of all the simple filler textures used to prevent issues with missing textures in a batch.\n     * @property _baseTextures\n     * @protected\n     * @type {Array}\n     */\n    this._baseTextures = [];\n\n    /**\n     * The number of concurrent textures the GPU can handle. This value is dynamically set from WebGL during initialization\n     * via `gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)`. The WebGL spec states that the lowest guaranteed value is 8,\n     * but it could be higher. Do not set this value higher than the value returned by the GPU. Setting it lower will\n     * probably reduce performance, but may be advisable to reserve slots for custom filter work.\n     * NOTE: Can also act as a length for {{#crossLink \"StageGL/_batchTextures:property\"}}.\n     * @property _batchTextureCount\n     * @protected\n     * @type {Number}\n     * @default 8\n     */\n    this._batchTextureCount = 8;\n\n    /**\n     * The location at which the last texture was inserted into a GPU slot in {{#crossLink \"StageGL/_batchTextures:property\"}}{{/crossLink}}.\n     * Manual control of this variable can yield improvements in performance by intelligently replacing textures\n     * inside a batch to reduce texture re-load. It is impossible to write automated general use code, as it requires\n     * display list look ahead inspection and/or render foreknowledge.\n     * @property _lastTextureInsert\n     * @protected\n     * @type {Number}\n     * @default -1\n     */\n    this._lastTextureInsert = -1;\n\n    /**\n     * The current batch being drawn, A batch consists of a call to `drawElements` on the GPU. Many of these calls\n     * can occur per draw.\n     * @property _batchId\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n    this._batchID = 0;\n\n    /**\n     * The current draw being performed, may contain multiple batches. Comparing to {{#crossLink \"StageGL/_batchID:property\"}}{{/crossLink}}\n     * can reveal batching efficiency.\n     * @property _drawID\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n    this._drawID = 0;\n\n    /**\n     * Used to prevent textures in certain GPU slots from being replaced by an insert.\n     * @property _slotBlackList\n     * @protected\n     * @type {Array}\n     */\n    this._slotBlacklist = [];\n\n    /**\n     * Used to prevent nested draw calls from accidentally overwriting drawing information by tracking depth.\n     * @property _isDrawing\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n    this._isDrawing = 0;\n\n    /**\n     * Used to ensure every canvas used as a texture source has a unique ID.\n     * @property _lastTrackedCanvas\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n    this._lastTrackedCanvas = 0;\n\n    /**\n     * Controls whether final rendering output of a {{#crossLink \"cacheDraw\"}}{{/crossLink}} is the canvas or a render\n     * texture. See the {{#crossLink \"cache\"}}{{/crossLink}} function modifications for full implications and discussion.\n     * @property isCacheControlled\n     * @protected\n     * @type {Boolean}\n     * @default false\n     * @todo LM: is this supposed to be _isCacheControlled since its private?\n     */\n    this.isCacheControlled = false;\n\n    /**\n     * Used to counter-position the object being cached so it aligns with the cache surface. Additionally ensures\n     * that all rendering starts with a top level container.\n     * @property _cacheContainer\n     * @protected\n     * @type {Container}\n     * @default An instance of an EaselJS Container.\n     */\n    this._cacheContainer = new createjs.Container();\n\n    // and begin\n    this._initializeWebGL();\n  }\n  var p = createjs.extend(StageGL, createjs.Stage);\n\n  // static methods:\n  /**\n   * Calculate the U/V co-ordinate based info for sprite frames. Instead of pixel count it uses a 0-1 space. Also includes\n   * the ability to get info back for a specific frame, or only calculate that one frame.\n   *\n   *     //generate UV rects for all entries\n   *     StageGL.buildUVRects( spriteSheetA );\n   *     //generate all, fetch the first\n   *     var firstFrame = StageGL.buildUVRects( spriteSheetB, 0 );\n   *     //generate the rect for just a single frame for performance's sake\n   *     var newFrame = StageGL.buildUVRects( dynamicSpriteSheet, newFrameIndex, true );\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method buildUVRects\n   * @param  {SpriteSheet} spritesheet The spritesheet to find the frames on\n   * @param  {int} [target=-1] The index of the frame to return\n   * @param  {Boolean} [onlyTarget=false] Whether \"target\" is the only frame that gets calculated\n   * @static\n   * @return {Object} the target frame if supplied and present or a generic frame {t, l, b, r}\n   */\n  StageGL.buildUVRects = function (spritesheet, target, onlyTarget) {\n    if (!spritesheet || !spritesheet._frames) {\n      return null;\n    }\n    if (target === undefined) {\n      target = -1;\n    }\n    if (onlyTarget === undefined) {\n      onlyTarget = false;\n    }\n    var start = target != -1 && onlyTarget ? target : 0;\n    var end = target != -1 && onlyTarget ? target + 1 : spritesheet._frames.length;\n    for (var i = start; i < end; i++) {\n      var f = spritesheet._frames[i];\n      if (f.uvRect || f.image.width <= 0 || f.image.height <= 0) {\n        continue;\n      }\n      var r = f.rect;\n      f.uvRect = {\n        t: r.y / f.image.height,\n        l: r.x / f.image.width,\n        b: (r.y + r.height) / f.image.height,\n        r: (r.x + r.width) / f.image.width\n      };\n    }\n    return spritesheet._frames[target != -1 ? target : 0].uvRect || {\n      t: 0,\n      l: 0,\n      b: 1,\n      r: 1\n    };\n  };\n\n  /**\n   * Test a context to see if it has WebGL enabled on it.\n   * @method isWebGLActive\n   * @param {CanvasContext} ctx The context to test\n   * @static\n   * @return {Boolean} Whether WebGL is enabled\n   */\n  StageGL.isWebGLActive = function (ctx) {\n    return ctx && ctx instanceof WebGLRenderingContext && typeof WebGLRenderingContext !== 'undefined';\n  };\n\n  // static properties:\n  /**\n   * The number of properties defined per vertex (x, y, textureU, textureV, textureIndex, alpha)\n   * @property VERTEX_PROPERTY_COUNT\n   * @static\n   * @final\n   * @type {Number}\n   * @default 6\n   * @readonly\n   */\n  StageGL.VERTEX_PROPERTY_COUNT = 6;\n\n  /**\n   * The number of triangle indices it takes to form a Card. 3 per triangle, 2 triangles.\n   * @property INDICIES_PER_CARD\n   * @static\n   * @final\n   * @type {Number}\n   * @default 6\n   * @readonly\n   */\n  StageGL.INDICIES_PER_CARD = 6;\n\n  /**\n   * The default value for the maximum number of cards we want to process in a batch. See\n   * {{#crossLink \"StageGL/WEBGL_MAX_INDEX_NUM:property\"}}{{/crossLink}} for a hard limit.\n   * @property DEFAULT_MAX_BATCH_SIZE\n   * @static\n   * @final\n   * @type {Number}\n   * @default 10000\n   * @readonly\n   */\n  StageGL.DEFAULT_MAX_BATCH_SIZE = 10000;\n\n  /**\n   * The maximum size WebGL allows for element index numbers. Uses a 16 bit unsigned integer. It takes 6 indices to\n   * make a unique card.\n   * @property WEBGL_MAX_INDEX_NUM\n   * @static\n   * @final\n   * @type {Number}\n   * @default 65536\n   * @readonly\n   */\n  StageGL.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16);\n\n  /**\n   * Default U/V rect for dealing with full coverage from an image source.\n   * @property UV_RECT\n   * @static\n   * @final\n   * @type {Object}\n   * @default {t:0, l:0, b:1, r:1}\n   * @readonly\n   */\n  StageGL.UV_RECT = {\n    t: 0,\n    l: 0,\n    b: 1,\n    r: 1\n  };\n  try {\n    /**\n     * Vertex positions for a card that covers the entire render. Used with render targets primarily.\n     * @property COVER_VERT\n     * @static\n     * @final\n     * @type {Float32Array}\n     * @readonly\n     */\n    StageGL.COVER_VERT = new Float32Array([-1, 1,\n    //TL\n    1, 1,\n    //TR\n    -1, -1,\n    //BL\n    1, 1,\n    //TR\n    1, -1,\n    //BR\n    -1, -1 //BL\n    ]);\n\n    /**\n     * U/V for {{#crossLink \"StageGL/COVER_VERT:property\"}}{{/crossLink}}.\n     * @property COVER_UV\n     * @static\n     * @final\n     * @type {Float32Array}\n     * @readonly\n     */\n    StageGL.COVER_UV = new Float32Array([0, 0,\n    //TL\n    1, 0,\n    //TR\n    0, 1,\n    //BL\n    1, 0,\n    //TR\n    1, 1,\n    //BR\n    0, 1 //BL\n    ]);\n\n    /**\n     * Flipped U/V for {{#crossLink \"StageGL:COVER_VERT:property\"}}{{/crossLink}}.\n     * @property COVER_UV_FLIP\n     * @static\n     * @final\n     * @type {Float32Array}\n     * @readonly\n     */\n    StageGL.COVER_UV_FLIP = new Float32Array([0, 1,\n    //TL\n    1, 1,\n    //TR\n    0, 0,\n    //BL\n    1, 1,\n    //TR\n    1, 0,\n    //BR\n    0, 0 //BL\n    ]);\n  } catch (e) {/* Breaking in older browsers, but those browsers wont run StageGL so no recovery or warning needed */}\n\n  /**\n   * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n   * regular shader is designed to render all expected objects. Shader code may contain templates that are replaced\n   * pre-compile.\n   * @property REGULAR_VARYING_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.REGULAR_VARYING_HEADER = \"precision mediump float;\" + \"varying vec2 vTextureCoord;\" + \"varying lowp float indexPicker;\" + \"varying lowp float alphaValue;\";\n\n  /**\n   * Actual full header for the vertex shader. Includes the varying header. The regular shader is designed to render\n   * all expected objects. Shader code may contain templates that are replaced pre-compile.\n   * @property REGULAR_VERTEX_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.REGULAR_VERTEX_HEADER = StageGL.REGULAR_VARYING_HEADER + \"attribute vec2 vertexPosition;\" + \"attribute vec2 uvPosition;\" + \"attribute lowp float textureIndex;\" + \"attribute lowp float objectAlpha;\" + \"uniform mat4 pMatrix;\";\n\n  /**\n   * Actual full header for the fragment shader. Includes the varying header. The regular shader is designed to render\n   * all expected objects. Shader code may contain templates that are replaced pre-compile.\n   * @property REGULAR_FRAGMENT_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.REGULAR_FRAGMENT_HEADER = StageGL.REGULAR_VARYING_HEADER + \"uniform sampler2D uSampler[{{count}}];\";\n\n  /**\n   * Body of the vertex shader. The regular shader is designed to render all expected objects. Shader code may contain\n   * templates that are replaced pre-compile.\n   * @property REGULAR_VERTEX_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.REGULAR_VERTEX_BODY = \"void main(void) {\" +\n  //DHG TODO: This doesn't work. Must be something wrong with the hand built matrix see js... bypass for now\n  //vertexPosition, round if flag\n  //\"gl_Position = pMatrix * vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n  \"gl_Position = vec4(\" + \"(vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],\" + \"(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],\" + \"pMatrix[3][2],\" + \"1.0\" + \");\" + \"alphaValue = objectAlpha;\" + \"indexPicker = textureIndex;\" + \"vTextureCoord = uvPosition;\" + \"}\";\n\n  /**\n   * Body of the fragment shader. The regular shader is designed to render all expected objects. Shader code may\n   * contain templates that are replaced pre-compile.\n   * @property REGULAR_FRAGMENT_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.REGULAR_FRAGMENT_BODY = \"void main(void) {\" + \"vec4 color = vec4(1.0, 0.0, 0.0, 1.0);\" + \"if (indexPicker <= 0.5) {\" + \"color = texture2D(uSampler[0], vTextureCoord);\" + \"{{alternates}}\" + \"}\" + \"{{fragColor}}\" + \"}\";\n  StageGL.REGULAR_FRAG_COLOR_NORMAL = \"gl_FragColor = vec4(color.rgb, color.a * alphaValue);\";\n  StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY = \"if(color.a > 0.0035) {\" +\n  // 1/255 = 0.0039, so ignore any value below 1 because it's probably noise\n  \"gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);\" + \"} else {\" + \"gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\" + \"}\";\n\n  //TODO: DHG: a real particle shader\n  /**\n   * @property PARTICLE_VERTEX_BODY\n   * @todo\n   * @final\n   * @static\n   * @type {String}\n   * @readonly\n   */\n  StageGL.PARTICLE_VERTEX_BODY = StageGL.REGULAR_VERTEX_BODY;\n  /**\n   * @property PARTICLE_FRAGMENT_BODY\n   * @todo\n   * @final\n   * @static\n   * @type {String}\n   * @readonly\n   */\n  StageGL.PARTICLE_FRAGMENT_BODY = StageGL.REGULAR_FRAGMENT_BODY;\n\n  /**\n   * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n   * cover shader is designed to be a simple vertex/uv only texture render that covers the render surface. Shader\n   * code may contain templates that are replaced pre-compile.\n   * @property COVER_VARYING_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.COVER_VARYING_HEADER = \"precision mediump float;\" + \"varying highp vec2 vRenderCoord;\" + \"varying highp vec2 vTextureCoord;\";\n\n  /**\n   * Actual full header for the vertex shader. Includes the varying header. The cover shader is designed to be a\n   * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n   * replaced pre-compile.\n   * @property COVER_VERTEX_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.COVER_VERTEX_HEADER = StageGL.COVER_VARYING_HEADER + \"attribute vec2 vertexPosition;\" + \"attribute vec2 uvPosition;\" + \"uniform float uUpright;\";\n\n  /**\n   * Actual full header for the fragment shader. Includes the varying header. The cover shader is designed to be a\n   * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n   * replaced pre-compile.\n   * @property COVER_FRAGMENT_HEADER\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.COVER_FRAGMENT_HEADER = StageGL.COVER_VARYING_HEADER + \"uniform sampler2D uSampler;\";\n\n  /**\n   * Body of the vertex shader. The cover shader is designed to be a simple vertex/uv only texture render that covers\n   * the render surface. Shader code may contain templates that are replaced pre-compile.\n   * @property COVER_VERTEX_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.COVER_VERTEX_BODY = \"void main(void) {\" + \"gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" + \"vRenderCoord = uvPosition;\" + \"vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));\" + \"}\";\n\n  /**\n   * Body of the fragment shader. The cover shader is designed to be a simple vertex/uv only texture render that\n   * covers the render surface. Shader code may contain templates that are replaced pre-compile.\n   * @property COVER_FRAGMENT_BODY\n   * @static\n   * @final\n   * @type {String}\n   * @readonly\n   */\n  StageGL.COVER_FRAGMENT_BODY = \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"gl_FragColor = color;\" + \"}\";\n\n  // events:\n  /**\n   * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it. You can call\n   * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} on the event to cancel the draw.\n   * @event drawstart\n   */\n\n  /**\n   * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n   * @event drawend\n   */\n\n  // getter / setters:\n  p._get_isWebGL = function () {\n    return !!this._webGLContext;\n  };\n  p._set_autoPurge = function (value) {\n    value = isNaN(value) ? 1200 : value;\n    if (value != -1) {\n      value = value < 10 ? 10 : value;\n    }\n    this._autoPurge = value;\n  };\n  p._get_autoPurge = function () {\n    return Number(this._autoPurge);\n  };\n  try {\n    Object.defineProperties(p, {\n      /**\n       * Indicates whether WebGL is being used for rendering. For example, this would be `false` if WebGL is not\n       * supported in the browser.\n       * @property isWebGL\n       * @type {Boolean}\n       * @readonly\n       */\n      isWebGL: {\n        get: p._get_isWebGL\n      },\n      /**\n       * Specifies whether or not StageGL is automatically purging unused textures. Higher numbers purge less\n       * often. Values below 10 are upgraded to 10, and -1 disables this feature.\n       * @property autoPurge\n       * @protected\n       * @type {Integer}\n       * @default 1000\n       */\n      autoPurge: {\n        get: p._get_autoPurge,\n        set: p._set_autoPurge\n      }\n    });\n  } catch (e) {} // TODO: use Log\n\n  // constructor methods:\n  /**\n   * Create and properly initialize the WebGL instance.\n   * @method _initializeWebGL\n   * @protected\n   * @return {WebGLRenderingContext}\n   */\n  p._initializeWebGL = function () {\n    if (this.canvas) {\n      if (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {\n        // A context hasn't been defined yet,\n        // OR the defined context belongs to a different canvas, so reinitialize.\n\n        // defaults and options\n        var options = {\n          depth: false,\n          // Disable the depth buffer as it isn't used.\n          alpha: this._transparent,\n          // Make the canvas background transparent.\n          stencil: true,\n          antialias: this._antialias,\n          premultipliedAlpha: this._premultiply,\n          // Assume the drawing buffer contains colors with premultiplied alpha.\n          preserveDrawingBuffer: this._preserveBuffer\n        };\n        var gl = this._webGLContext = this._fetchWebGLContext(this.canvas, options);\n        if (!gl) {\n          return null;\n        }\n        this.updateSimultaneousTextureCount(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n        this._maxTextureSlots = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this._createBuffers(gl);\n        this._initTextures(gl);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply);\n        //gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n        this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n        this.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);\n      }\n    } else {\n      this._webGLContext = null;\n    }\n    return this._webGLContext;\n  };\n\n  // public methods:\n  /**\n   * Docced in superclass\n   */\n  p.update = function (props) {\n    if (!this.canvas) {\n      return;\n    }\n    if (this.tickOnUpdate) {\n      this.tick(props);\n    }\n    this.dispatchEvent(\"drawstart\");\n    if (this.autoClear) {\n      this.clear();\n    }\n    if (this._webGLContext) {\n      // Use WebGL.\n      this._batchDraw(this, this._webGLContext);\n      if (this._autoPurge != -1 && !(this._drawID % (this._autoPurge / 2 | 0))) {\n        this.purgeTextures(this._autoPurge);\n      }\n    } else {\n      // Use 2D.\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.save();\n      this.updateContext(ctx);\n      this.draw(ctx, false);\n      ctx.restore();\n    }\n    this.dispatchEvent(\"drawend\");\n  };\n\n  /**\n   * Docced in superclass\n   */\n  p.clear = function () {\n    if (!this.canvas) {\n      return;\n    }\n    if (StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      var cc = this._clearColor;\n      var adjust = this._transparent ? cc.a : 1.0;\n      // Use WebGL settings; adjust for pre multiplied alpha appropriate to scenario\n      this._webGLContext.clearColor(cc.r * adjust, cc.g * adjust, cc.b * adjust, adjust);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      this._webGLContext.clearColor(cc.r, cc.g, cc.b, cc.a);\n    } else {\n      // Use 2D.\n      this.Stage_clear();\n    }\n  };\n\n  /**\n   * Draws the stage into the supplied context if possible. Many WebGL properties only exist on their context. As such\n   * you cannot share contexts among many StageGLs and each context requires a unique StageGL instance. Contexts that\n   * don't match the context managed by this StageGL will be treated as a 2D context.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D | WebGLRenderingContext} context The context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For\n   *  example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean} If the draw was handled by this function\n   */\n  p.draw = function (context, ignoreCache) {\n    if (context === this._webGLContext && StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      this._batchDraw(this, gl, ignoreCache);\n      return true;\n    } else {\n      return this.Stage_draw(context, ignoreCache);\n    }\n  };\n\n  /**\n   * Draws the target into the correct context, be it a canvas or Render Texture using WebGL.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method cacheDraw\n   * @param {DisplayObject} target The object we're drawing into cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @param {Array} filters The filters we're drawing into cache.\n   * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n   * @return {Boolean} If the draw was handled by this function\n   */\n  p.cacheDraw = function (target, filters, manager) {\n    if (StageGL.isWebGLActive(this._webGLContext)) {\n      var gl = this._webGLContext;\n      this._cacheDraw(gl, target, filters, manager);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * Blocks, or frees a texture \"slot\" on the GPU. Can be useful if you are overflowing textures. When overflowing\n   * textures they are re-uploaded to the GPU every time they're encountered, this can be expensive with large textures.\n   * By blocking the slot you reduce available slots, potentially increasing draw calls, but mostly you prevent a\n   * texture being re-uploaded if it would have moved slots due to overflow.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * For example, block the slot a background image is stored in so there is less re-loading of that image.\n   * @method protectTextureSlot\n   * @param  {Number} id The slot to be affected\n   * @param  {Boolean} [lock=false] Whether this slot is the one being locked.\n   */\n  p.protectTextureSlot = function (id, lock) {\n    if (id > this._maxTextureSlots || id < 0) {\n      throw \"Slot outside of acceptable range\";\n    }\n    this._slotBlacklist[id] = !!lock;\n  };\n\n  /**\n   * Render textures can't draw into themselves so any item being used for renderTextures needs two to alternate between.\n   * This function creates, gets, and toggles the render surface between the two.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method getTargetRenderTexture\n   * @param  {DisplayObject} target The object associated with the render textures, usually a cached object.\n   * @param  {Number} w The width to create the texture at.\n   * @param  {Number} h The height to create the texture at.\n   * @return {Objet}\n   * @todo fill in return type\n   */\n  p.getTargetRenderTexture = function (target, w, h) {\n    var result,\n      toggle = false;\n    var gl = this._webGLContext;\n    if (target.__lastRT !== undefined && target.__lastRT === target.__rtA) {\n      toggle = true;\n    }\n    if (!toggle) {\n      if (target.__rtA === undefined) {\n        target.__rtA = this.getRenderBufferTexture(w, h);\n      } else {\n        if (w != target.__rtA._width || h != target.__rtA._height) {\n          this.resizeTexture(target.__rtA, w, h);\n        }\n        this.setTextureParams(gl);\n      }\n      result = target.__rtA;\n    } else {\n      if (target.__rtB === undefined) {\n        target.__rtB = this.getRenderBufferTexture(w, h);\n      } else {\n        if (w != target.__rtB._width || h != target.__rtB._height) {\n          this.resizeTexture(target.__rtB, w, h);\n        }\n        this.setTextureParams(gl);\n      }\n      result = target.__rtB;\n    }\n    if (!result) {\n      throw \"Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n    }\n    target.__lastRT = result;\n    return result;\n  };\n\n  /**\n   * For every image encountered StageGL registers and tracks it automatically. This tracking can cause memory leaks \n   * if not purged. StageGL, by default, automatically purges them. This does have a cost and may unfortunately find\n   * false positives. This function is for manual management of this memory instead of the automatic system controlled\n   * by the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n   *\n   * This function will recursively remove all textures found on the object, its children, cache, etc. It will uncache \n   * objects and remove any texture it finds REGARDLESS of whether it is currently in use elsewhere. It is up to the\n   * developer to ensure that a texture in use is not removed.\n   *\n   * Textures in use, or to be used again shortly, should not be removed. This is simply for performance reasons.\n   * Removing a texture in use will cause the texture to have to be re-uploaded slowing rendering.\n   * @method releaseTexture\n   * @param  {DisplayObject | Texture | Image | Canvas} item An object that used the texture to be discarded.\n   */\n  p.releaseTexture = function (item) {\n    var i, l;\n    if (!item) {\n      return;\n    }\n\n    // this is a container object\n    if (item.children) {\n      for (i = 0, l = item.children.length; i < l; i++) {\n        this.releaseTexture(item.children[i]);\n      }\n    }\n\n    // this has a cache canvas\n    if (item.cacheCanvas) {\n      item.uncache();\n    }\n    var foundImage = undefined;\n    if (item._storeID !== undefined) {\n      // this is a texture itself\n      if (item === this._textureDictionary[item._storeID]) {\n        this._killTextureObject(item);\n        item._storeID = undefined;\n        return;\n      }\n\n      // this is an image or canvas\n      foundImage = item;\n    } else if (item._webGLRenderStyle === 2) {\n      // this is a Bitmap class\n      foundImage = item.image;\n    } else if (item._webGLRenderStyle === 1) {\n      // this is a SpriteSheet, we can't tell which image we used from the list easily so remove them all!\n      for (i = 0, l = item.spriteSheet._images.length; i < l; i++) {\n        this.releaseTexture(item.spriteSheet._images[i]);\n      }\n      return;\n    }\n\n    // did we find anything\n    if (foundImage === undefined) {\n      if (this.vocalDebug) {\n        console.log(\"No associated texture found on release\");\n      }\n      return;\n    }\n\n    // remove it\n    this._killTextureObject(this._textureDictionary[foundImage._storeID]);\n    foundImage._storeID = undefined;\n  };\n\n  /**\n   * Similar to {{#crossLink \"releaseTexture\"}}{{/crossLink}}, but this function differs by searching for textures to\n   * release. It works by assuming that it can purge any texture which was last used more than \"count\" draw calls ago.\n   * Because this process is unaware of the objects and whether they may be used on your stage, false positives can\n   * occur. It is recommended to manually manage your memory with {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}},\n   * however, there are many use cases where this is simpler and error-free. This process is also run by default under\n   * the hood to prevent leaks. To disable it see the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n   * @method purgeTextures\n   * @param {Number} [count=100] How many renders ago the texture was last used\n   */\n  p.purgeTextures = function (count) {\n    if (count == undefined) {\n      count = 100;\n    }\n    var dict = this._textureDictionary;\n    var l = dict.length;\n    for (var i = 0; i < l; i++) {\n      var item = dict[i];\n      if (!item) {\n        continue;\n      }\n      if (item._drawID + count <= this._drawID) {\n        // use draw not batch as draw is more indicative of time\n        this._killTextureObject(item);\n      }\n    }\n  };\n\n  /**\n   * Try to set the max textures the system can handle. It should default to the hardware maximum, and lower values\n   * may limit performance. Some devices have been known to mis-report their max textures, or you may need a standard\n   * baseline cross devices for testing. Barring the previous suggestions, there is little need to call this function\n   * as the library will automatically try to find the best value.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method updateSimultaneousTextureCount\n   * @param {Number} [count=1] The number of textures intended for simultaneous loading.\n   */\n  p.updateSimultaneousTextureCount = function (count) {\n    // TODO: DHG: make sure API works in all instances, may be some issues with buffers etc I haven't foreseen\n    var gl = this._webGLContext;\n    var success = false;\n    if (count < 1 || isNaN(count)) {\n      count = 1;\n    }\n    this._batchTextureCount = count;\n    while (!success) {\n      try {\n        this._activeShader = this._fetchShaderProgram(gl);\n        success = true;\n      } catch (e) {\n        if (this._batchTextureCount == 1) {\n          throw \"Cannot compile shader \" + e;\n        }\n        this._batchTextureCount -= 4;\n        if (this._batchTextureCount < 1) {\n          this._batchTextureCount = 1;\n        }\n        if (this.vocalDebug) {\n          console.log(\"Reducing desired texture count due to errors: \" + this._batchTextureCount);\n        }\n      }\n    }\n  };\n\n  /**\n   * Update the WebGL viewport. Note that this does <strong>not</strong> update the canvas element's width/height, but\n   * the render surface's instead. This is necessary after manually resizing the canvas element on the DOM to avoid a\n   * up/down scaled render.\n   * @method updateViewport\n   * @param {Integer} width The width of the render surface in pixels.\n   * @param {Integer} height The height of the render surface in pixels.\n   */\n  p.updateViewport = function (width, height) {\n    this._viewportWidth = width | 0;\n    this._viewportHeight = height | 0;\n    var gl = this._webGLContext;\n    if (gl) {\n      gl.viewport(0, 0, this._viewportWidth, this._viewportHeight);\n\n      // WebGL works with a -1,1 space on its screen. It also follows Y-Up\n      // we need to flip the y, scale and then translate the co-ordinates to match this\n      // additionally we offset into they Y so the polygons are inside the camera's \"clipping\" plane\n      this._projectionMatrix = new Float32Array([2 / this._viewportWidth, 0, 0, 0, 0, -2 / this._viewportHeight, 1, 0, 0, 0, 1, 0, -1, 1, 0.1, 0]);\n      // create the flipped version for use with render texture flipping\n      // DHG: this would be a slice/clone but some platforms don't offer them for Float32Array\n      this._projectionMatrixFlip = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      this._projectionMatrixFlip.set(this._projectionMatrix);\n      this._projectionMatrixFlip[5] *= -1;\n      this._projectionMatrixFlip[13] *= -1;\n    }\n  };\n\n  /**\n   * Fetches the shader compiled and set up to work with the provided filter/object. The shader is compiled on first\n   * use and returned on subsequent calls.\n   * @method getFilterShader\n   * @param  {Filter|Object} filter The object which will provide the information needed to construct the filter shader.\n   * @return {WebGLProgram}\n   */\n  p.getFilterShader = function (filter) {\n    if (!filter) {\n      filter = this;\n    }\n    var gl = this._webGLContext;\n    var targetShader = this._activeShader;\n    if (filter._builtShader) {\n      targetShader = filter._builtShader;\n      if (filter.shaderParamSetup) {\n        gl.useProgram(targetShader);\n        filter.shaderParamSetup(gl, this, targetShader);\n      }\n    } else {\n      try {\n        targetShader = this._fetchShaderProgram(gl, \"filter\", filter.VTX_SHADER_BODY, filter.FRAG_SHADER_BODY, filter.shaderParamSetup && filter.shaderParamSetup.bind(filter));\n        filter._builtShader = targetShader;\n        targetShader._name = filter.toString();\n      } catch (e) {\n        console && console.log(\"SHADER SWITCH FAILURE\", e);\n      }\n    }\n    return targetShader;\n  };\n\n  /**\n   * Returns a base texture that has no image or data loaded. Not intended for loading images. It may return `null`\n   * in some error cases, and trying to use a \"null\" texture can cause renders to fail.\n   * @method getBaseTexture\n   * @param  {uint} [w=1] The width of the texture in pixels, defaults to 1\n   * @param  {uint} [h=1] The height of the texture in pixels, defaults to 1\n   */\n  p.getBaseTexture = function (w, h) {\n    var width = Math.ceil(w > 0 ? w : 1) || 1;\n    var height = Math.ceil(h > 0 ? h : 1) || 1;\n    var gl = this._webGLContext;\n    var texture = gl.createTexture();\n    this.resizeTexture(texture, width, height);\n    this.setTextureParams(gl, false);\n    return texture;\n  };\n\n  /**\n   * Resizes a supplied texture element. May generate invalid textures in some error cases such as; when the texture\n   * is too large, when an out of texture memory error occurs, or other error scenarios. Trying to use an invalid texture\n   * can cause renders to hard stop on some devices. Check the WebGL bound texture after running this function.\n   *\n   * NOTE: The supplied texture must have been made with the WebGL \"texImage2D\" function, all default APIs in StageGL\n   * use this, so this note only matters for library developers and plugins.\n   *\n   * @protected\n   * @method resizeTexture\n   * @param  {WebGLTexture} texture The GL Texture to be modified.\n   * @param  {uint} [width=1] The width of the texture in pixels, defaults to 1\n   * @param  {uint} [height=1] The height of the texture in pixels, defaults to 1\n   */\n  p.resizeTexture = function (texture, width, height) {\n    var gl = this._webGLContext;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D,\n    // target\n    0,\n    // level of detail\n    gl.RGBA,\n    // internal format\n    width, height, 0,\n    // width, height, border (only for array/null sourced textures)\n    gl.RGBA,\n    // format (match internal format)\n    gl.UNSIGNED_BYTE,\n    // type of texture(pixel color depth)\n    null // image data, we can do null because we're doing array data\n    );\n\n    texture.width = width;\n    texture.height = height;\n  };\n\n  /**\n   * Returns a base texture (see {{#crossLink \"StageGL/getBaseTexture\"}}{{/crossLink}}) for details. Also includes an\n   * attached and linked render buffer in `texture._frameBuffer`. RenderTextures can be thought of as an internal\n   * canvas on the GPU that can be drawn to.\n   * @method getRenderBufferTexture\n   * @param  {Number} w The width of the texture in pixels.\n   * @param  {Number} h The height of the texture in pixels.\n   * @return {Texture} the basic texture instance with a render buffer property.\n   */\n  p.getRenderBufferTexture = function (w, h) {\n    var gl = this._webGLContext;\n\n    // get the texture\n    var renderTexture = this.getBaseTexture(w, h);\n    if (!renderTexture) {\n      return null;\n    }\n\n    // get the frame buffer\n    var frameBuffer = gl.createFramebuffer();\n    if (!frameBuffer) {\n      return null;\n    }\n\n    // set its width and height for spoofing as an image\n    renderTexture.width = w;\n    renderTexture.height = h;\n\n    // attach frame buffer to texture and provide cross links to look up each other\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, renderTexture, 0);\n    frameBuffer._renderTexture = renderTexture;\n    renderTexture._frameBuffer = frameBuffer;\n\n    // these keep track of themselves simply to reduce complexity of some lookup code\n    renderTexture._storeID = this._textureDictionary.length;\n    this._textureDictionary[renderTexture._storeID] = renderTexture;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return renderTexture;\n  };\n\n  /**\n   * Common utility function used to apply the correct texture processing parameters for the bound texture.\n   * @method setTextureParams\n   * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param  {Boolean} [isPOT=false] Marks whether the texture is \"Power of Two\", this may allow better quality AA.\n   */\n  p.setTextureParams = function (gl, isPOT) {\n    if (isPOT && this._antialias) {\n      //non POT linear works in some devices, but performance is NOT good, investigate\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  };\n\n  /**\n   * Changes the webGL clear, aka \"background\" color to the provided value. A transparent clear is recommended, as\n   * non-transparent colours may create undesired boxes around some visuals.\n   *\n   * The clear color will also be used for filters and other \"render textures\". The stage background will ignore the\n   * transparency value and display a solid color normally. For the stage to recognize and use transparency it must be\n   * created with the transparent flag set to `true` (see {{#crossLink \"StageGL/constructor\"}}{{/crossLink}})).\n   *\n   * Using \"transparent white\" to demonstrate, the valid data formats are as follows:\n   * <ul>\n   *     <li>\"#FFF\"</li>\n   *     <li>\"#FFFFFF\"</li>\n   *     <li>\"#FFFFFF00\"</li>\n   *     <li>\"rgba(255,255,255,0.0)\"</li>\n   * </ul>\n   * @method setClearColor\n   * @param {String|int} [color=0x00000000] The new color to use as the background\n   */\n  p.setClearColor = function (color) {\n    var r, g, b, a, output;\n    if (typeof color == \"string\") {\n      if (color.indexOf(\"#\") == 0) {\n        if (color.length == 4) {\n          color = \"#\" + color.charAt(1) + color.charAt(1) + color.charAt(2) + color.charAt(2) + color.charAt(3) + color.charAt(3);\n        }\n        r = Number(\"0x\" + color.slice(1, 3)) / 255;\n        g = Number(\"0x\" + color.slice(3, 5)) / 255;\n        b = Number(\"0x\" + color.slice(5, 7)) / 255;\n        a = Number(\"0x\" + color.slice(7, 9)) / 255;\n      } else if (color.indexOf(\"rgba(\") == 0) {\n        output = color.slice(5, -1).split(\",\");\n        r = Number(output[0]) / 255;\n        g = Number(output[1]) / 255;\n        b = Number(output[2]) / 255;\n        a = Number(output[3]);\n      }\n    } else {\n      // >>> is an unsigned shift which is what we want as 0x80000000 and up are negative values\n      r = ((color & 0xFF000000) >>> 24) / 255;\n      g = ((color & 0x00FF0000) >>> 16) / 255;\n      b = ((color & 0x0000FF00) >>> 8) / 255;\n      a = (color & 0x000000FF) / 255;\n    }\n    this._clearColor.r = r || 0;\n    this._clearColor.g = g || 0;\n    this._clearColor.b = b || 0;\n    this._clearColor.a = a || 0;\n    if (!this._webGLContext) {\n      return;\n    }\n    this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n  };\n\n  /**\n   * docced in subclass\n   */\n  p.toString = function () {\n    return \"[StageGL (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n  /**\n   * Sets up and returns the WebGL context for the canvas. May return undefined in error scenarios. These can include \n   * situations where the canvas element already has a context, 2D or GL.\n   * @param  {Canvas} canvas The DOM canvas element to attach to\n   * @param  {Object} options The options to be handed into the WebGL object, see WebGL spec\n   * @method _fetchWebGLContext\n   * @protected\n   * @return {WebGLRenderingContext} The WebGL context, may return undefined in error scenarios\n   */\n  p._fetchWebGLContext = function (canvas, options) {\n    var gl;\n    try {\n      gl = canvas.getContext(\"webgl\", options) || canvas.getContext(\"experimental-webgl\", options);\n    } catch (e) {\n      // don't do anything in catch, null check will handle it\n    }\n    if (!gl) {\n      var msg = \"Could not initialize WebGL\";\n      console.error ? console.error(msg) : console.log(msg);\n    } else {\n      gl.viewportWidth = canvas.width;\n      gl.viewportHeight = canvas.height;\n    }\n    return gl;\n  };\n\n  /**\n   * Create the completed Shader Program from the vertex and fragment shaders. Allows building of custom shaders for\n   * filters. Once compiled, shaders are saved so. If the Shader code requires dynamic alterations re-run this function\n   * to generate a new shader.\n   * @method _fetchShaderProgram\n   * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param  {String} [shaderName=\"regular\"] Working values: \"regular\", \"override\", and \"filter\". Which type of shader to build.\n   * Filter and override both accept the custom params. Regular and override have all features. Filter is a special case reduced feature shader meant to be over-ridden.\n   * @param  {String} [customVTX] Extra vertex shader information to replace a regular draw, see \n   * {{#crossLink \"StageGL/COVER_VERTEX_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n   * @param  {String} [customFRAG] Extra fragment shader information to replace a regular draw, see \n   * {{#crossLink \"StageGL/COVER_FRAGMENT_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n   * @param  {Function} [shaderParamSetup] Function to run so custom shader parameters can get applied for the render.\n   * @protected\n   * @return {WebGLProgram} The compiled and linked shader\n   */\n  p._fetchShaderProgram = function (gl, shaderName, customVTX, customFRAG, shaderParamSetup) {\n    gl.useProgram(null); // safety to avoid collisions\n\n    // build the correct shader string out of the right headers and bodies\n    var targetFrag, targetVtx;\n    switch (shaderName) {\n      case \"filter\":\n        targetVtx = StageGL.COVER_VERTEX_HEADER + (customVTX || StageGL.COVER_VERTEX_BODY);\n        targetFrag = StageGL.COVER_FRAGMENT_HEADER + (customFRAG || StageGL.COVER_FRAGMENT_BODY);\n        break;\n      case \"particle\":\n        //TODO\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.PARTICLE_VERTEX_BODY;\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.PARTICLE_FRAGMENT_BODY;\n        break;\n      case \"override\":\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + (customVTX || StageGL.REGULAR_VERTEX_BODY);\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + (customFRAG || StageGL.REGULAR_FRAGMENT_BODY);\n        break;\n      case \"regular\":\n      default:\n        targetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.REGULAR_VERTEX_BODY;\n        targetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.REGULAR_FRAGMENT_BODY;\n        break;\n    }\n\n    // create the separate vars\n    var vertexShader = this._createShader(gl, gl.VERTEX_SHADER, targetVtx);\n    var fragmentShader = this._createShader(gl, gl.FRAGMENT_SHADER, targetFrag);\n\n    // link them together\n    var shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n    shaderProgram._type = shaderName;\n\n    // check compile status\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      gl.useProgram(this._activeShader);\n      throw gl.getProgramInfoLog(shaderProgram);\n    }\n\n    // set up the parameters on the shader\n    gl.useProgram(shaderProgram);\n    switch (shaderName) {\n      case \"filter\":\n        // get the places in memory the shader is stored so we can feed information into them\n        // then save it off on the shader because it's so tied to the shader itself\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n        shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n        gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        gl.uniform1i(shaderProgram.samplerUniform, 0);\n        shaderProgram.uprightUniform = gl.getUniformLocation(shaderProgram, \"uUpright\");\n        gl.uniform1f(shaderProgram.uprightUniform, 0);\n\n        // if there's some custom attributes be sure to hook them up\n        if (shaderParamSetup) {\n          shaderParamSetup(gl, this, shaderProgram);\n        }\n        break;\n      case \"override\":\n      case \"particle\":\n      case \"regular\":\n      default:\n        // get the places in memory the shader is stored so we can feed information into them\n        // then save it off on the shader because it's so tied to the shader itself\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n        shaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n        gl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n        shaderProgram.textureIndexAttribute = gl.getAttribLocation(shaderProgram, \"textureIndex\");\n        gl.enableVertexAttribArray(shaderProgram.textureIndexAttribute);\n        shaderProgram.alphaAttribute = gl.getAttribLocation(shaderProgram, \"objectAlpha\");\n        gl.enableVertexAttribArray(shaderProgram.alphaAttribute);\n        var samplers = [];\n        for (var i = 0; i < this._batchTextureCount; i++) {\n          samplers[i] = i;\n        }\n        shaderProgram.samplerData = samplers;\n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        gl.uniform1iv(shaderProgram.samplerUniform, samplers);\n        shaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"pMatrix\");\n        break;\n    }\n    gl.useProgram(this._activeShader);\n    return shaderProgram;\n  };\n\n  /**\n   * Creates a shader from the specified string replacing templates. Template items are defined via `{{` `key` `}}``.\n   * @method _createShader\n   * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param  {Number} type The type of shader to create. gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n   * @param  {String} str The definition for the shader.\n   * @return {WebGLShader}\n   * @protected\n   */\n  p._createShader = function (gl, type, str) {\n    // inject the static number\n    str = str.replace(/{{count}}/g, this._batchTextureCount);\n\n    // resolve issue with no dynamic samplers by creating correct samplers in if else chain\n    // TODO: WebGL 2.0 does not need this support\n    var insert = \"\";\n    for (var i = 1; i < this._batchTextureCount; i++) {\n      insert += \"} else if (indexPicker <= \" + i + \".5) { color = texture2D(uSampler[\" + i + \"], vTextureCoord);\";\n    }\n    str = str.replace(/{{alternates}}/g, insert);\n    str = str.replace(/{{fragColor}}/g, this._premultiply ? StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY : StageGL.REGULAR_FRAG_COLOR_NORMAL);\n\n    // actually compile the shader\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, str);\n    gl.compileShader(shader);\n\n    // check compile status\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw gl.getShaderInfoLog(shader);\n    }\n    return shader;\n  };\n\n  /**\n   * Sets up the necessary vertex property buffers, including position and U/V.\n   * @method _createBuffers\n   * @param {WebGLRenderingContext} gl\n   * @protected\n   */\n  p._createBuffers = function (gl) {\n    var groupCount = this._maxCardsPerBatch * StageGL.INDICIES_PER_CARD;\n    var groupSize, i, l;\n\n    // INFO:\n    // all buffers are created using this pattern\n    // create a WebGL buffer\n    // attach it to context\n    // figure out how many parts it has to an entry\n    // fill it with empty data to reserve the memory\n    // attach the empty data to the GPU\n    // track the sizes on the buffer object\n\n    // INFO:\n    // a single buffer may be optimal in some situations and would be approached like this,\n    // currently not implemented due to lack of need and potential complications with drawCover\n\n    // var vertexBuffer = this._vertexBuffer = gl.createBuffer();\n    // gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    // groupSize = 2 + 2 + 1 + 1; //x/y, u/v, index, alpha\n    // var vertexData = this._vertexData = new Float32Array(groupCount * groupSize);\n    // for (i=0; i<vertexData.length; i+=groupSize) {\n    // \tvertexData[i+0] = vertexData[i+1] = 0;\n    // \tvertexData[i+2] = vertexData[i+3] = 0.5;\n    // \tvertexData[i+4] = 0;\n    // \tvertexData[i+5] = 1;\n    // }\n    // vertexBuffer.itemSize = groupSize;\n    // vertexBuffer.numItems = groupCount;\n    // TODO bechmark and test using unified buffer\n\n    // the actual position information\n    var vertexPositionBuffer = this._vertexPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    groupSize = 2;\n    var vertices = this._vertices = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = vertices.length; i < l; i += groupSize) {\n      vertices[i] = vertices[i + 1] = 0;\n    }\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n    vertexPositionBuffer.itemSize = groupSize;\n    vertexPositionBuffer.numItems = groupCount;\n\n    // where on the texture it gets its information\n    var uvPositionBuffer = this._uvPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    groupSize = 2;\n    var uvs = this._uvs = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = uvs.length; i < l; i += groupSize) {\n      uvs[i] = uvs[i + 1] = 0;\n    }\n    gl.bufferData(gl.ARRAY_BUFFER, uvs, gl.DYNAMIC_DRAW);\n    uvPositionBuffer.itemSize = groupSize;\n    uvPositionBuffer.numItems = groupCount;\n\n    // what texture it should use\n    var textureIndexBuffer = this._textureIndexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n    groupSize = 1;\n    var indices = this._indices = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = indices.length; i < l; i++) {\n      indices[i] = 0;\n    }\n    gl.bufferData(gl.ARRAY_BUFFER, indices, gl.DYNAMIC_DRAW);\n    textureIndexBuffer.itemSize = groupSize;\n    textureIndexBuffer.numItems = groupCount;\n\n    // what alpha it should have\n    var alphaBuffer = this._alphaBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n    groupSize = 1;\n    var alphas = this._alphas = new Float32Array(groupCount * groupSize);\n    for (i = 0, l = alphas.length; i < l; i++) {\n      alphas[i] = 1;\n    }\n    gl.bufferData(gl.ARRAY_BUFFER, alphas, gl.DYNAMIC_DRAW);\n    alphaBuffer.itemSize = groupSize;\n    alphaBuffer.numItems = groupCount;\n  };\n\n  /**\n   * Do all the setup steps for textures in the system.\n   * @method _initTextures\n   * @protected\n   */\n  p._initTextures = function () {\n    //TODO: DHG: add a cleanup routine in here in case this happens mid stream\n\n    // reset counters\n    this._lastTextureInsert = -1;\n\n    // clear containers\n    this._textureDictionary = [];\n    this._textureIDs = {};\n    this._baseTextures = [];\n    this._batchTextures = [];\n\n    // fill in blanks as it helps the renderer be stable while textures are loading and reduces need for safety code\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      var tex = this.getBaseTexture();\n      this._baseTextures[i] = this._batchTextures[i] = tex;\n      if (!tex) {\n        throw \"Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n      }\n    }\n  };\n\n  /**\n   * Load a specific texture, accounting for potential delay, as it might not be preloaded.\n   * @method _loadTextureImage\n   * @param {WebGLRenderingContext} gl\n   * @param {Image} image Actual image to be loaded\n   * @return {WebGLTexture} The resulting Texture object\n   * @protected\n   */\n  p._loadTextureImage = function (gl, image) {\n    var src = image.src;\n    if (!src) {\n      // one time canvas property setup\n      image._isCanvas = true;\n      src = image.src = \"canvas_\" + this._lastTrackedCanvas++;\n    }\n\n    // put the texture into our storage system\n    var storeID = this._textureIDs[src];\n    if (storeID === undefined) {\n      storeID = this._textureIDs[src] = this._textureDictionary.length;\n    }\n    if (this._textureDictionary[storeID] === undefined) {\n      this._textureDictionary[storeID] = this.getBaseTexture();\n    }\n    var texture = this._textureDictionary[storeID];\n    if (texture) {\n      // get texture params all set up\n      texture._batchID = this._batchID;\n      texture._storeID = storeID;\n      texture._imageData = image;\n      this._insertTextureInBatch(gl, texture);\n\n      // get the data into the texture or wait for it to load\n      image._storeID = storeID;\n      if (image.complete || image.naturalWidth || image._isCanvas) {\n        // is it already loaded\n        this._updateTextureImageData(gl, image);\n      } else {\n        image.addEventListener(\"load\", this._updateTextureImageData.bind(this, gl, image));\n      }\n    } else {\n      // we really really should have a texture, try to recover the error by using a saved empty texture so we don't crash\n      var msg = \"Problem creating desired texture, known causes include using too much VRAM by not releasing WebGL texture instances\";\n      console.error && console.error(msg) || console.log(msg);\n      texture = this._baseTextures[0];\n      texture._batchID = this._batchID;\n      texture._storeID = -1;\n      texture._imageData = texture;\n      this._insertTextureInBatch(gl, texture);\n    }\n    return texture;\n  };\n\n  /**\n   * Necessary to upload the actual image data to the GPU. Without this the texture will be blank. Called automatically\n   * in most cases due to loading and caching APIs. Flagging an image source with `_invalid = true` will trigger this\n   * next time the image is rendered.\n   * @param {WebGLRenderingContext} gl\n   * @param {Image | Canvas} image The image data to be uploaded\n   * @protected\n   */\n  p._updateTextureImageData = function (gl, image) {\n    // the bitwise & is intentional, cheap exponent 2 check\n    var isNPOT = image.width & image.width - 1 || image.height & image.height - 1;\n    var texture = this._textureDictionary[image._storeID];\n    gl.activeTexture(gl.TEXTURE0 + texture._activeIndex);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    texture.isPOT = !isNPOT;\n    this.setTextureParams(gl, texture.isPOT);\n    try {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    } catch (e) {\n      var errString = \"\\nAn error has occurred. This is most likely due to security restrictions on WebGL images with local or cross-domain origins\";\n      if (console.error) {\n        //TODO: LM: I recommend putting this into a log function internally, since you do it so often, and each is implemented differently.\n        console.error(errString);\n        console.error(e);\n      } else if (console) {\n        console.log(errString);\n        console.log(e);\n      }\n    }\n    image._invalid = false;\n    texture._w = image.width;\n    texture._h = image.height;\n    if (this.vocalDebug) {\n      if (isNPOT) {\n        console.warn(\"NPOT(Non Power of Two) Texture: \" + image.src);\n      }\n      if (image.width > gl.MAX_TEXTURE_SIZE || image.height > gl.MAX_TEXTURE_SIZE) {\n        console && console.error(\"Oversized Texture: \" + image.width + \"x\" + image.height + \" vs \" + gl.MAX_TEXTURE_SIZE + \"max\");\n      }\n    }\n  };\n\n  /**\n   * Adds the texture to a spot in the current batch, forcing a draw if no spots are free.\n   * @method _insertTextureInBatch\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {WebGLTexture} texture The texture to be inserted.\n   * @protected\n   */\n  p._insertTextureInBatch = function (gl, texture) {\n    // if it wasn't used last batch\n    if (this._batchTextures[texture._activeIndex] !== texture) {\n      // we've got to find it a a spot.\n      var found = -1;\n      var start = (this._lastTextureInsert + 1) % this._batchTextureCount;\n      var look = start;\n      do {\n        if (this._batchTextures[look]._batchID != this._batchID && !this._slotBlacklist[look]) {\n          found = look;\n          break;\n        }\n        look = (look + 1) % this._batchTextureCount;\n      } while (look !== start);\n\n      // we couldn't find anywhere for it go, meaning we're maxed out\n      if (found === -1) {\n        this.batchReason = \"textureOverflow\";\n        this._drawBuffers(gl); // <------------------------------------------------------------------------\n        this.batchCardCount = 0;\n        found = start;\n      }\n\n      // lets put it into that spot\n      this._batchTextures[found] = texture;\n      texture._activeIndex = found;\n      var image = texture._imageData;\n      if (image && image._invalid && texture._drawID !== undefined) {\n        this._updateTextureImageData(gl, image);\n      } else {\n        gl.activeTexture(gl.TEXTURE0 + found);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        this.setTextureParams(gl);\n      }\n      this._lastTextureInsert = found;\n    } else {\n      var image = texture._imageData;\n      if (texture._storeID != undefined && image && image._invalid) {\n        this._updateTextureImageData(gl, image);\n      }\n    }\n    texture._drawID = this._drawID;\n    texture._batchID = this._batchID;\n  };\n\n  /**\n   * Remove and clean the texture, expects a texture and is inflexible. Mostly for internal use, recommended to call \n   * {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} instead as it will call this with the correct texture object(s).\n   * Note: Testing shows this may not happen immediately, have to wait frames for WebGL to have actually adjust memory.\n   * @method _killTextureObject\n   * @param {Texture} tex The texture to be cleaned out\n   * @protected\n   */\n  p._killTextureObject = function (tex) {\n    if (!tex) {\n      return;\n    }\n    var gl = this._webGLContext;\n\n    // remove linkage\n    if (tex._storeID !== undefined && tex._storeID >= 0) {\n      this._textureDictionary[tex._storeID] = undefined;\n      for (var n in this._textureIDs) {\n        if (this._textureIDs[n] == tex._storeID) {\n          delete this._textureIDs[n];\n        }\n      }\n      if (tex._imageData) {\n        tex._imageData._storeID = undefined;\n      }\n      tex._imageData = tex._storeID = undefined;\n    }\n\n    // make sure to drop it out of an active slot\n    if (tex._activeIndex !== undefined && this._batchTextures[tex._activeIndex] === tex) {\n      this._batchTextures[tex._activeIndex] = this._baseTextures[tex._activeIndex];\n    }\n\n    // remove buffers if present\n    try {\n      if (tex._frameBuffer) {\n        gl.deleteFramebuffer(tex._frameBuffer);\n      }\n      tex._frameBuffer = undefined;\n    } catch (e) {\n      /* suppress delete errors because it's already gone or didn't need deleting probably */\n      if (this.vocalDebug) {\n        console.log(e);\n      }\n    }\n\n    // remove entry\n    try {\n      gl.deleteTexture(tex);\n    } catch (e) {\n      /* suppress delete errors because it's already gone or didn't need deleting probably */\n      if (this.vocalDebug) {\n        console.log(e);\n      }\n    }\n  };\n\n  /**\n   * Store or restore current batch textures into a backup array\n   * @method _backupBatchTextures\n   * @param {Boolean} restore Perform a restore instead of a store.\n   * @param {Array} [target=this._backupTextures] Where to perform the backup, defaults to internal backup.\n   * @protected\n   */\n  p._backupBatchTextures = function (restore, target) {\n    var gl = this._webGLContext;\n    if (!this._backupTextures) {\n      this._backupTextures = [];\n    }\n    if (target === undefined) {\n      target = this._backupTextures;\n    }\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      gl.activeTexture(gl.TEXTURE0 + i);\n      if (restore) {\n        this._batchTextures[i] = target[i];\n      } else {\n        target[i] = this._batchTextures[i];\n        this._batchTextures[i] = this._baseTextures[i];\n      }\n      gl.bindTexture(gl.TEXTURE_2D, this._batchTextures[i]);\n      this.setTextureParams(gl, this._batchTextures[i].isPOT);\n    }\n    if (restore && target === this._backupTextures) {\n      this._backupTextures = [];\n    }\n  };\n\n  /**\n   * Begin the drawing process for a regular render.\n   * @method _batchDraw\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {Stage || Container} sceneGraph {{#crossLink \"Container\"}}{{/crossLink}} object with all that needs to rendered, preferably a Stage.\n   * @param {Boolean} ignoreCache\n   * @protected\n   */\n  p._batchDraw = function (sceneGraph, gl, ignoreCache) {\n    if (this._isDrawing > 0) {\n      this._drawBuffers(gl);\n    }\n    this._isDrawing++;\n    this._drawID++;\n    this.batchCardCount = 0;\n    this.depth = 0;\n    this._appendToBatchGroup(sceneGraph, gl, new createjs.Matrix2D(), this.alpha, ignoreCache);\n    this.batchReason = \"drawFinish\";\n    this._drawBuffers(gl); // <--------------------------------------------------------\n    this._isDrawing--;\n  };\n\n  /**\n   * Perform the drawing process to fill a specific cache texture, including applying filters.\n   * @method _cacheDraw\n   * @param {DisplayObject} target The object we're drawing into the cache. For example, used for drawing the cache\n   * (to prevent it from simply drawing an existing cache back into itself).\n   * @param {Array} filters The filters we're drawing into cache.\n   * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n   * @protected\n   */\n  p._cacheDraw = function (gl, target, filters, manager) {\n    /*\n    Implicitly there are 4 modes to this function: filtered-sameContext, filtered-uniqueContext, sameContext, uniqueContext.\n    Each situation must be handled slightly differently as 'sameContext' or 'uniqueContext' define how the output works,\n    one drawing directly into the main context and the other drawing into a stored renderTexture respectively.\n    When the draw is a 'filtered' draw, the filters are applied sequentially and will draw into saved textures repeatedly.\n    Once the final filter is done the final output is treated depending upon whether it is a same or unique context.\n    The internal complexity comes from reducing over-draw, shared code, and issues like textures needing to be flipped\n    sometimes when written to render textures.\n    */\n    var renderTexture;\n    var shaderBackup = this._activeShader;\n    var blackListBackup = this._slotBlacklist;\n    var lastTextureSlot = this._maxTextureSlots - 1;\n    var wBackup = this._viewportWidth,\n      hBackup = this._viewportHeight;\n\n    // protect the last slot so that we have somewhere to bind the renderTextures so it doesn't get upset\n    this.protectTextureSlot(lastTextureSlot, true);\n\n    // create offset container for drawing item\n    var mtx = target.getMatrix();\n    mtx = mtx.clone();\n    mtx.scale(1 / manager.scale, 1 / manager.scale);\n    mtx = mtx.invert();\n    mtx.translate(-manager.offX / manager.scale * target.scaleX, -manager.offY / manager.scale * target.scaleY);\n    var container = this._cacheContainer;\n    container.children = [target];\n    container.transformMatrix = mtx;\n    this._backupBatchTextures(false);\n    if (filters && filters.length) {\n      this._drawFilters(target, filters, manager);\n    } else {\n      // is this for another stage or mine?\n      if (this.isCacheControlled) {\n        // draw item to canvas\t\t\t\tI -> C\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._batchDraw(container, gl, true);\n      } else {\n        gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n        target.cacheCanvas = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n        renderTexture = target.cacheCanvas;\n\n        // draw item to render texture\t\tI -> T\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n        this.updateViewport(manager._drawWidth, manager._drawHeight);\n        this._projectionMatrix = this._projectionMatrixFlip;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._batchDraw(container, gl, true);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.updateViewport(wBackup, hBackup);\n      }\n    }\n    this._backupBatchTextures(true);\n    this.protectTextureSlot(lastTextureSlot, false);\n    this._activeShader = shaderBackup;\n    this._slotBlacklist = blackListBackup;\n  };\n\n  /**\n   * Sub portion of _cacheDraw, split off for readability. Do not call independently.\n   * @method _drawFilters\n   * @param {DisplayObject} target The object we're drawing with a filter.\n   * @param {Array} filters The filters we're drawing into cache.\n   * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n   */\n  p._drawFilters = function (target, filters, manager) {\n    var gl = this._webGLContext;\n    var renderTexture;\n    var lastTextureSlot = this._maxTextureSlots - 1;\n    var wBackup = this._viewportWidth,\n      hBackup = this._viewportHeight;\n    var container = this._cacheContainer;\n    var filterCount = filters.length;\n\n    // we don't know which texture slot we're dealing with previously and we need one out of the way\n    // once we're using that slot activate it so when we make and bind our RenderTexture it's safe there\n    gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n    renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\n    // draw item to render texture\t\tI -> T\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n    this.updateViewport(manager._drawWidth, manager._drawHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    this._batchDraw(container, gl, true);\n\n    // bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, renderTexture);\n    this.setTextureParams(gl);\n    var flipY = false;\n    var i = 0,\n      filter = filters[i];\n    do {\n      // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n\n      // swap to correct shader\n      this._activeShader = this.getFilterShader(filter);\n      if (!this._activeShader) {\n        continue;\n      }\n\n      // now the old result is stored in slot 0, make a new render texture\n      gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n      renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n      // draw result to render texture\tR -> T\n      gl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      this._drawCover(gl, flipY);\n\n      // bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, renderTexture);\n      this.setTextureParams(gl);\n\n      // use flipping to keep things upright, things already cancel out on a single filter\n      // this needs to be here as multiPass is not accurate to _this_ frame until after shader acquisition\n      if (filterCount > 1 || filters[0]._multiPass) {\n        flipY = !flipY;\n      }\n\n      // work through the multipass if it's there, otherwise move on\n      filter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n    } while (filter);\n\n    // is this for another stage or mine\n    if (this.isCacheControlled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      this.updateViewport(wBackup, hBackup);\n\n      // draw result to canvas\t\t\tR -> C\n      this._activeShader = this.getFilterShader(this);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      this._drawCover(gl, flipY);\n    } else {\n      //TODO: DHG: this is less than ideal. A flipped initial render for this circumstance might help. Adjust the perspective matrix?\n      if (flipY) {\n        gl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n        renderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n        this._activeShader = this.getFilterShader(this);\n        gl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._drawCover(gl, !flipY);\n      }\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      this.updateViewport(wBackup, hBackup);\n\n      // make sure the last texture is the active thing to draw\n      target.cacheCanvas = renderTexture;\n    }\n  };\n\n  /**\n   * Add all the contents of a container to the pending buffers, called recursively on each container. This may\n   * trigger a draw if a buffer runs out of space. This is the main workforce of the render loop.\n   * @method _appendToBatchGroup\n   * @param {Container} container The {{#crossLink \"Container\"}}{{/crossLink}} that contains everything to be drawn.\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {Matrix2D} concatMtx The effective (concatenated) transformation matrix when beginning this container\n   * @param {Number} concatAlpha The effective (concatenated) alpha when beginning this container\n   * @param {Boolean} ignoreCache Don't use an element's cache during this draw\n   * @protected\n   */\n  p._appendToBatchGroup = function (container, gl, concatMtx, concatAlpha, ignoreCache) {\n    // sort out shared properties\n    if (!container._glMtx) {\n      container._glMtx = new createjs.Matrix2D();\n    }\n    var cMtx = container._glMtx;\n    cMtx.copy(concatMtx);\n    if (container.transformMatrix) {\n      cMtx.appendMatrix(container.transformMatrix);\n    } else {\n      cMtx.appendTransform(container.x, container.y, container.scaleX, container.scaleY, container.rotation, container.skewX, container.skewY, container.regX, container.regY);\n    }\n\n    // sub components of figuring out the position an object holds\n    var subL, subT, subR, subB;\n\n    // actually apply its data to the buffers\n    var l = container.children.length;\n    for (var i = 0; i < l; i++) {\n      var item = container.children[i];\n      if (!(item.visible && concatAlpha)) {\n        continue;\n      }\n      if (!item.cacheCanvas || ignoreCache) {\n        if (item._updateState) {\n          item._updateState();\n        }\n        if (item.children) {\n          this._appendToBatchGroup(item, gl, cMtx, item.alpha * concatAlpha);\n          continue;\n        }\n      }\n\n      // check for overflowing batch, if yes then force a render\n      // TODO: DHG: consider making this polygon count dependant for things like vector draws\n      if (this.batchCardCount + 1 > this._maxCardsPerBatch) {\n        this.batchReason = \"vertexOverflow\";\n        this._drawBuffers(gl); // <------------------------------------------------------------\n        this.batchCardCount = 0;\n      }\n\n      // keep track of concatenated position\n      if (!item._glMtx) {\n        item._glMtx = new createjs.Matrix2D();\n      }\n      var iMtx = item._glMtx;\n      iMtx.copy(cMtx);\n      if (item.transformMatrix) {\n        iMtx.appendMatrix(item.transformMatrix);\n      } else {\n        iMtx.appendTransform(item.x, item.y, item.scaleX, item.scaleY, item.rotation, item.skewX, item.skewY, item.regX, item.regY);\n      }\n      var uvRect, texIndex, image, frame, texture, src;\n      var useCache = item.cacheCanvas && !ignoreCache;\n      if (item._webGLRenderStyle === 2 || useCache) {\n        // BITMAP / Cached Canvas\n        image = (ignoreCache ? false : item.cacheCanvas) || item.image;\n      } else if (item._webGLRenderStyle === 1) {\n        // SPRITE\n        frame = item.spriteSheet.getFrame(item.currentFrame); //TODO: Faster way?\n        if (frame === null) {\n          continue;\n        }\n        image = frame.image;\n      } else {\n        // MISC (DOM objects render themselves later)\n        continue;\n      }\n      var uvs = this._uvs;\n      var vertices = this._vertices;\n      var texI = this._indices;\n      var alphas = this._alphas;\n\n      // calculate texture\n      if (!image) {\n        continue;\n      }\n      if (image._storeID === undefined) {\n        // this texture is new to us so load it and add it to the batch\n        texture = this._loadTextureImage(gl, image);\n        this._insertTextureInBatch(gl, texture);\n      } else {\n        // fetch the texture (render textures know how to look themselves up to simplify this logic)\n        texture = this._textureDictionary[image._storeID];\n        if (!texture) {\n          if (this.vocalDebug) {\n            console.log(\"Texture should not be looked up while not being stored.\");\n          }\n          continue;\n        }\n\n        // put it in the batch if needed\n        if (texture._batchID !== this._batchID) {\n          this._insertTextureInBatch(gl, texture);\n        }\n      }\n      texIndex = texture._activeIndex;\n      if (item._webGLRenderStyle === 2 || useCache) {\n        // BITMAP / Cached Canvas\n        if (!useCache && item.sourceRect) {\n          // calculate uvs\n          if (!item._uvRect) {\n            item._uvRect = {};\n          }\n          src = item.sourceRect;\n          uvRect = item._uvRect;\n          uvRect.t = src.y / image.height;\n          uvRect.l = src.x / image.width;\n          uvRect.b = (src.y + src.height) / image.height;\n          uvRect.r = (src.x + src.width) / image.width;\n\n          // calculate vertices\n          subL = 0;\n          subT = 0;\n          subR = src.width + subL;\n          subB = src.height + subT;\n        } else {\n          // calculate uvs\n          uvRect = StageGL.UV_RECT;\n          // calculate vertices\n          if (useCache) {\n            src = item.bitmapCache;\n            subL = src.x + src._filterOffX / src.scale;\n            subT = src.y + src._filterOffY / src.scale;\n            subR = src._drawWidth / src.scale + subL;\n            subB = src._drawHeight / src.scale + subT;\n          } else {\n            subL = 0;\n            subT = 0;\n            subR = image.width + subL;\n            subB = image.height + subT;\n          }\n        }\n      } else if (item._webGLRenderStyle === 1) {\n        // SPRITE\n        var rect = frame.rect;\n\n        // calculate uvs\n        uvRect = frame.uvRect;\n        if (!uvRect) {\n          uvRect = StageGL.buildUVRects(item.spriteSheet, item.currentFrame, false);\n        }\n\n        // calculate vertices\n        subL = -frame.regX;\n        subT = -frame.regY;\n        subR = rect.width - frame.regX;\n        subB = rect.height - frame.regY;\n      }\n\n      // These must be calculated here else a forced draw might happen after they're set\n      var offV1 = this.batchCardCount * StageGL.INDICIES_PER_CARD; // offset for 1 component vectors\n      var offV2 = offV1 * 2; // offset for 2 component vectors\n\n      //DHG: See Matrix2D.transformPoint for why this math specifically\n      // apply vertices\n      vertices[offV2] = subL * iMtx.a + subT * iMtx.c + iMtx.tx;\n      vertices[offV2 + 1] = subL * iMtx.b + subT * iMtx.d + iMtx.ty;\n      vertices[offV2 + 2] = subL * iMtx.a + subB * iMtx.c + iMtx.tx;\n      vertices[offV2 + 3] = subL * iMtx.b + subB * iMtx.d + iMtx.ty;\n      vertices[offV2 + 4] = subR * iMtx.a + subT * iMtx.c + iMtx.tx;\n      vertices[offV2 + 5] = subR * iMtx.b + subT * iMtx.d + iMtx.ty;\n      vertices[offV2 + 6] = vertices[offV2 + 2];\n      vertices[offV2 + 7] = vertices[offV2 + 3];\n      vertices[offV2 + 8] = vertices[offV2 + 4];\n      vertices[offV2 + 9] = vertices[offV2 + 5];\n      vertices[offV2 + 10] = subR * iMtx.a + subB * iMtx.c + iMtx.tx;\n      vertices[offV2 + 11] = subR * iMtx.b + subB * iMtx.d + iMtx.ty;\n\n      // apply uvs\n      uvs[offV2] = uvRect.l;\n      uvs[offV2 + 1] = uvRect.t;\n      uvs[offV2 + 2] = uvRect.l;\n      uvs[offV2 + 3] = uvRect.b;\n      uvs[offV2 + 4] = uvRect.r;\n      uvs[offV2 + 5] = uvRect.t;\n      uvs[offV2 + 6] = uvRect.l;\n      uvs[offV2 + 7] = uvRect.b;\n      uvs[offV2 + 8] = uvRect.r;\n      uvs[offV2 + 9] = uvRect.t;\n      uvs[offV2 + 10] = uvRect.r;\n      uvs[offV2 + 11] = uvRect.b;\n\n      // apply texture\n      texI[offV1] = texI[offV1 + 1] = texI[offV1 + 2] = texI[offV1 + 3] = texI[offV1 + 4] = texI[offV1 + 5] = texIndex;\n\n      // apply alpha\n      alphas[offV1] = alphas[offV1 + 1] = alphas[offV1 + 2] = alphas[offV1 + 3] = alphas[offV1 + 4] = alphas[offV1 + 5] = item.alpha * concatAlpha;\n      this.batchCardCount++;\n    }\n  };\n\n  /**\n   * Draws all the currently defined cards in the buffer to the render surface.\n   * @method _drawBuffers\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @protected\n   */\n  p._drawBuffers = function (gl) {\n    if (this.batchCardCount <= 0) {\n      return;\n    } // prevents error logs on stages filled with un-renederable content.\n\n    if (this.vocalDebug) {\n      console.log(\"Draw[\" + this._drawID + \":\" + this._batchID + \"] : \" + this.batchReason);\n    }\n    var shaderProgram = this._activeShader;\n    var vertexPositionBuffer = this._vertexPositionBuffer;\n    var textureIndexBuffer = this._textureIndexBuffer;\n    var uvPositionBuffer = this._uvPositionBuffer;\n    var alphaBuffer = this._alphaBuffer;\n    gl.useProgram(shaderProgram);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._vertices);\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n    gl.vertexAttribPointer(shaderProgram.textureIndexAttribute, textureIndexBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._indices);\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._uvs);\n    gl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n    gl.vertexAttribPointer(shaderProgram.alphaAttribute, alphaBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._alphas);\n    gl.uniformMatrix4fv(shaderProgram.pMatrixUniform, gl.FALSE, this._projectionMatrix);\n    for (var i = 0; i < this._batchTextureCount; i++) {\n      var texture = this._batchTextures[i];\n      gl.activeTexture(gl.TEXTURE0 + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      this.setTextureParams(gl, texture.isPOT);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, this.batchCardCount * StageGL.INDICIES_PER_CARD);\n    this._batchID++;\n  };\n\n  /**\n   * Draws a card that covers the entire render surface. Mainly used for filters.\n   * @method _drawBuffers\n   * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n   * @param {Boolean} flipY Covers are used for things like RenderTextures and because of 3D vs Canvas space this can\n   * end up meaning the `y` space sometimes requires flipping in the render.\n   * @protected\n   */\n  p._drawCover = function (gl, flipY) {\n    if (this._isDrawing > 0) {\n      this._drawBuffers(gl);\n    }\n    if (this.vocalDebug) {\n      console.log(\"Draw[\" + this._drawID + \":\" + this._batchID + \"] : \" + \"Cover\");\n    }\n    var shaderProgram = this._activeShader;\n    var vertexPositionBuffer = this._vertexPositionBuffer;\n    var uvPositionBuffer = this._uvPositionBuffer;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.useProgram(shaderProgram);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, StageGL.COVER_VERT);\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n    gl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, flipY ? StageGL.COVER_UV_FLIP : StageGL.COVER_UV);\n    gl.uniform1i(shaderProgram.samplerUniform, 0);\n    gl.uniform1f(shaderProgram.uprightUniform, flipY ? 0 : 1);\n    gl.drawArrays(gl.TRIANGLES, 0, StageGL.INDICIES_PER_CARD);\n  };\n  createjs.StageGL = createjs.promote(StageGL, \"Stage\");\n})();\n\n//##############################################################################\n// Bitmap.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  /**\n   * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n   * HTML element, or a string.\n   *\n   * <h4>Example</h4>\n   *\n   * \tvar bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n   *\n   * <strong>Notes:</strong>\n   * <ol>\n   * \t<li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n   * \t prevent blinking / flashing.\n   * \t<li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n   * \t will be displayed.</li>\n   * \t<li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n   * \tthe Bitmap can be cached.</li>\n   * \t<li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n   * \thappens in all browsers except recent Firefox builds.</li>\n   * \t<li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n   * \tmethods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n   * \t`crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n   * </ol>\n   *\n   * @class Bitmap\n   * @extends DisplayObject\n   * @constructor\n   * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n   * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n   * If the latter, a new Image instance with the URL as its src will be used.\n   **/\n  function Bitmap(imageOrUri) {\n    this.DisplayObject_constructor();\n\n    // public properties:\n    /**\n     * The source image to display. This can be a CanvasImageSource\n     * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n     * If the latter, a new Image instance with the URL as its src will be used.\n     * @property image\n     * @type CanvasImageSource | Object\n     **/\n    if (typeof imageOrUri == \"string\") {\n      this.image = document.createElement(\"img\");\n      this.image.src = imageOrUri;\n    } else {\n      this.image = imageOrUri;\n    }\n\n    /**\n     * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n     * Notes:\n     * <ul>\n     *     <li>that video sources must have a width / height set to work correctly with `sourceRect`</li>\n     *     <li>Cached objects will ignore the `sourceRect` property</li>\n     * </ul>\n     * @property sourceRect\n     * @type Rectangle\n     * @default null\n     */\n    this.sourceRect = null;\n\n    // private properties:\n    /**\n     * Docced in superclass.\n     */\n    this._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP;\n  }\n  var p = createjs.extend(Bitmap, createjs.DisplayObject);\n\n  // public methods:\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n  p.initialize = Bitmap; // TODO: deprecated.\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n  p.isVisible = function () {\n    var image = this.image;\n    var hasContent = this.cacheCanvas || image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   * @return {Boolean}\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n    var img = this.image,\n      rect = this.sourceRect;\n    if (img.getImage) {\n      img = img.getImage();\n    }\n    if (!img) {\n      return true;\n    }\n    if (rect) {\n      // some browsers choke on out of bound values, so we'll fix them:\n      var x1 = rect.x,\n        y1 = rect.y,\n        x2 = x1 + rect.width,\n        y2 = y1 + rect.height,\n        x = 0,\n        y = 0,\n        w = img.width,\n        h = img.height;\n      if (x1 < 0) {\n        x -= x1;\n        x1 = 0;\n      }\n      if (x2 > w) {\n        x2 = w;\n      }\n      if (y1 < 0) {\n        y -= y1;\n        y1 = 0;\n      }\n      if (y2 > h) {\n        y2 = h;\n      }\n      ctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);\n    } else {\n      ctx.drawImage(img, 0, 0);\n    }\n    return true;\n  };\n\n  //Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n  //Bitmap. This is why they have no method implementations.\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method.\n   * @method cache\n   **/\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method.\n   * @method updateCache\n   **/\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method.\n   * @method uncache\n   **/\n\n  /**\n   * Docced in superclass.\n   */\n  p.getBounds = function () {\n    var rect = this.DisplayObject_getBounds();\n    if (rect) {\n      return rect;\n    }\n    var image = this.image,\n      o = this.sourceRect || image;\n    var hasContent = image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n    return hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n  };\n\n  /**\n   * Returns a clone of the Bitmap instance.\n   * @method clone\n   * @param {Boolean} node Whether the underlying dom element should be cloned as well.\n   * @return {Bitmap} a clone of the Bitmap instance.\n   **/\n  p.clone = function (node) {\n    var image = this.image;\n    if (image && node) {\n      image = image.cloneNode();\n    }\n    var o = new Bitmap(image);\n    if (this.sourceRect) {\n      o.sourceRect = this.sourceRect.clone();\n    }\n    this._cloneProps(o);\n    return o;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Bitmap (name=\" + this.name + \")]\";\n  };\n  createjs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n})();\n\n//##############################################################################\n// Sprite.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n   * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n   * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n   * play frames as an animation, and even sequence animations together.\n   *\n   * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n   *\n   * <h4>Example</h4>\n   *\n   *      var instance = new createjs.Sprite(spriteSheet);\n   *      instance.gotoAndStop(\"frameName\");\n   *\n   * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n   * only the first defined frame defined in the sprite sheet will be displayed.\n   *\n   * @class Sprite\n   * @extends DisplayObject\n   * @constructor\n   * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n   * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n   * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n   **/\n  function Sprite(spriteSheet, frameOrAnimation) {\n    this.DisplayObject_constructor();\n\n    // public properties:\n    /**\n     * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n     * definitions, this will advance non-sequentially. This will always be an integer value.\n     * @property currentFrame\n     * @type {Number}\n     * @default 0\n     * @readonly\n     **/\n    this.currentFrame = 0;\n\n    /**\n     * Returns the name of the currently playing animation.\n     * @property currentAnimation\n     * @type {String}\n     * @final\n     * @readonly\n     **/\n    this.currentAnimation = null;\n\n    /**\n     * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n     * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n     * @property paused\n     * @type {Boolean}\n     * @default false\n     **/\n    this.paused = true;\n\n    /**\n     * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n     * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n     * @property spriteSheet\n     * @type {SpriteSheet}\n     * @readonly\n     **/\n    this.spriteSheet = spriteSheet;\n\n    /**\n     * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n     * from 0 to n-1, where n is the number of frames in the current animation.\n     *\n     * This could be a non-integer value if\n     * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n     * not an integer.\n     * @property currentAnimationFrame\n     * @type {Number}\n     * @default 0\n     **/\n    this.currentAnimationFrame = 0;\n\n    /**\n     * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n     * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n     * @property framerate\n     * @type {Number}\n     * @default 0\n     **/\n    this.framerate = 0;\n\n    // private properties:\n    /**\n     * Current animation object.\n     * @property _animation\n     * @protected\n     * @type {Object}\n     * @default null\n     **/\n    this._animation = null;\n\n    /**\n     * Current frame index.\n     * @property _currentFrame\n     * @protected\n     * @type {Number}\n     * @default null\n     **/\n    this._currentFrame = null;\n\n    /**\n     * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n     * @property _skipAdvance\n     * @protected\n     * @type {Boolean}\n     * @default false\n     **/\n    this._skipAdvance = false;\n\n    /**\n     * Docced in superclass.\n     */\n    this._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE;\n    if (frameOrAnimation != null) {\n      this.gotoAndPlay(frameOrAnimation);\n    }\n  }\n  var p = createjs.extend(Sprite, createjs.DisplayObject);\n\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n  p.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n\n  // events:\n  /**\n   * Dispatched when an animation reaches its ends.\n   * @event animationend\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {String} name The name of the animation that just ended.\n   * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n   * or calling gotoAndPlay() or gotoAndStop().\n   * @event change\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   */\n\n  // public methods:\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.spriteSheet.complete;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n    this._normalizeFrame();\n    var o = this.spriteSheet.getFrame(this._currentFrame | 0);\n    if (!o) {\n      return false;\n    }\n    var rect = o.rect;\n    if (rect.width && rect.height) {\n      ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height);\n    }\n    return true;\n  };\n\n  //Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n  //Bitmap. This is why they have no method implementations.\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @method cache\n   **/\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @method updateCache\n   **/\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @method uncache\n   **/\n\n  /**\n   * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n   * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n   * unchanged.\n   * @method play\n   **/\n  p.play = function () {\n    this.paused = false;\n  };\n\n  /**\n   * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n   * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n   * will resume playback.\n   * @method stop\n   **/\n  p.stop = function () {\n    this.paused = true;\n  };\n\n  /**\n   * Sets paused to false and plays the specified animation name, named frame, or frame number.\n   * @method gotoAndPlay\n   * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n   * and begin playing.\n   **/\n  p.gotoAndPlay = function (frameOrAnimation) {\n    this.paused = false;\n    this._skipAdvance = true;\n    this._goto(frameOrAnimation);\n  };\n\n  /**\n   * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n   * @method gotoAndStop\n   * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n   * and stop.\n   **/\n  p.gotoAndStop = function (frameOrAnimation) {\n    this.paused = true;\n    this._goto(frameOrAnimation);\n  };\n\n  /**\n   * Advances the playhead. This occurs automatically each tick by default.\n   * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n   * or its SpriteSheet.\n   * @method advance\n  */\n  p.advance = function (time) {\n    var fps = this.framerate || this.spriteSheet.framerate;\n    var t = fps && time != null ? time / (1000 / fps) : 1;\n    this._normalizeFrame(t);\n  };\n\n  /**\n   * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n   * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n   * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n   *\n   * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n   * @method getBounds\n   * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n   * loaded.\n   **/\n  p.getBounds = function () {\n    // TODO: should this normalizeFrame?\n    return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n  };\n\n  /**\n   * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n   * instances.\n   * @method clone\n   * @return {Sprite} a clone of the Sprite instance.\n   **/\n  p.clone = function () {\n    return this._cloneProps(new Sprite(this.spriteSheet));\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Sprite (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n  /**\n   * @method _cloneProps\n   * @param {Sprite} o\n   * @return {Sprite} o\n   * @protected\n   **/\n  p._cloneProps = function (o) {\n    this.DisplayObject__cloneProps(o);\n    o.currentFrame = this.currentFrame;\n    o.currentAnimation = this.currentAnimation;\n    o.paused = this.paused;\n    o.currentAnimationFrame = this.currentAnimationFrame;\n    o.framerate = this.framerate;\n    o._animation = this._animation;\n    o._currentFrame = this._currentFrame;\n    o._skipAdvance = this._skipAdvance;\n    return o;\n  };\n\n  /**\n   * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n   * ticks.\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * @protected\n   * @method _tick\n   **/\n  p._tick = function (evtObj) {\n    if (!this.paused) {\n      if (!this._skipAdvance) {\n        this.advance(evtObj && evtObj.delta);\n      }\n      this._skipAdvance = false;\n    }\n    this.DisplayObject__tick(evtObj);\n  };\n\n  /**\n   * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n   * @protected\n   * @method _normalizeFrame\n   **/\n  p._normalizeFrame = function (frameDelta) {\n    frameDelta = frameDelta || 0;\n    var animation = this._animation;\n    var paused = this.paused;\n    var frame = this._currentFrame;\n    var l;\n    if (animation) {\n      var speed = animation.speed || 1;\n      var animFrame = this.currentAnimationFrame;\n      l = animation.frames.length;\n      if (animFrame + frameDelta * speed >= l) {\n        var next = animation.next;\n        if (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n          // something changed in the event stack, so we shouldn't make any more changes here.\n          return;\n        } else if (next) {\n          // sequence. Automatically calls _normalizeFrame again with the remaining frames.\n          return this._goto(next, frameDelta - (l - animFrame) / speed);\n        } else {\n          // end.\n          this.paused = true;\n          animFrame = animation.frames.length - 1;\n        }\n      } else {\n        animFrame += frameDelta * speed;\n      }\n      this.currentAnimationFrame = animFrame;\n      this._currentFrame = animation.frames[animFrame | 0];\n    } else {\n      frame = this._currentFrame += frameDelta;\n      l = this.spriteSheet.getNumFrames();\n      if (frame >= l && l > 0) {\n        if (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n          // looped.\n          if ((this._currentFrame -= l) >= l) {\n            return this._normalizeFrame();\n          }\n        }\n      }\n    }\n    frame = this._currentFrame | 0;\n    if (this.currentFrame != frame) {\n      this.currentFrame = frame;\n      this.dispatchEvent(\"change\");\n    }\n  };\n\n  /**\n   * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n   * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n   * @property _dispatchAnimationEnd\n   * @private\n   * @type {Function}\n   **/\n  p._dispatchAnimationEnd = function (animation, frame, paused, next, end) {\n    var name = animation ? animation.name : null;\n    if (this.hasEventListener(\"animationend\")) {\n      var evt = new createjs.Event(\"animationend\");\n      evt.name = name;\n      evt.next = next;\n      this.dispatchEvent(evt);\n    }\n    // did the animation get changed in the event stack?:\n    var changed = this._animation != animation || this._currentFrame != frame;\n    // if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n    if (!changed && !paused && this.paused) {\n      this.currentAnimationFrame = end;\n      changed = true;\n    }\n    return changed;\n  };\n\n  /**\n   * Moves the playhead to the specified frame number or animation.\n   * @method _goto\n   * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n   * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n   * @protected\n   **/\n  p._goto = function (frameOrAnimation, frame) {\n    this.currentAnimationFrame = 0;\n    if (isNaN(frameOrAnimation)) {\n      var data = this.spriteSheet.getAnimation(frameOrAnimation);\n      if (data) {\n        this._animation = data;\n        this.currentAnimation = frameOrAnimation;\n        this._normalizeFrame(frame);\n      }\n    } else {\n      this.currentAnimation = this._animation = null;\n      this._currentFrame = frameOrAnimation;\n      this._normalizeFrame();\n    }\n  };\n  createjs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n})();\n\n//##############################################################################\n// Shape.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n   * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n   * instances to display the same vector graphics with different positions or transforms.\n   *\n   * If the vector art will not\n   * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n   * rendering cost.\n   *\n   * <h4>Example</h4>\n   *\n   *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n   *      var shape = new createjs.Shape(graphics);\n   *\n   *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n   *      var shape = new createjs.Shape();\n   *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n   *\n   * @class Shape\n   * @extends DisplayObject\n   * @constructor\n   * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n   **/\n  function Shape(graphics) {\n    this.DisplayObject_constructor();\n\n    // public properties:\n    /**\n     * The graphics instance to display.\n     * @property graphics\n     * @type Graphics\n     **/\n    this.graphics = graphics ? graphics : new createjs.Graphics();\n  }\n  var p = createjs.extend(Shape, createjs.DisplayObject);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  // public methods:\n  /**\n   * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n   **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n  /**\n   * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n   * the draw was handled (useful for overriding functionality).\n   *\n   * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean}\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n    this.graphics.draw(ctx, this);\n    return true;\n  };\n\n  /**\n   * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n   * their defaults (for example .parent).\n   * @method clone\n   * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n   * cloned. If false, the Graphics instance will be shared with the new Shape.\n   **/\n  p.clone = function (recursive) {\n    var g = recursive && this.graphics ? this.graphics.clone() : this.graphics;\n    return this._cloneProps(new Shape(g));\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Shape (name=\" + this.name + \")]\";\n  };\n  createjs.Shape = createjs.promote(Shape, \"DisplayObject\");\n})();\n\n//##############################################################################\n// Text.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n   * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n   * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n   * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n   *\n   * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n   * multiple font styles, you will need to create multiple text instances, and position them manually.\n   *\n   * <h4>Example</h4>\n   *\n   *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n   *      text.x = 100;\n   *      text.textBaseline = \"alphabetic\";\n   *\n   * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n   * before it can be displayed.\n   *\n   * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n   * browsers will render Text exactly the same.\n   * @class Text\n   * @extends DisplayObject\n   * @constructor\n   * @param {String} [text] The text to display.\n   * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n   * 36px Arial\").\n   * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n   * \"#F00\", \"red\", or \"#FF0000\").\n   **/\n  function Text(text, font, color) {\n    this.DisplayObject_constructor();\n\n    // public properties:\n    /**\n     * The text to display.\n     * @property text\n     * @type String\n     **/\n    this.text = text;\n\n    /**\n     * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n     * @property font\n     * @type String\n     **/\n    this.font = font;\n\n    /**\n     * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n     * It will also accept valid canvas fillStyle values.\n     * @property color\n     * @type String\n     **/\n    this.color = color;\n\n    /**\n     * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n     * information view the\n     * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n     * whatwg spec</a>. Default is \"left\".\n     * @property textAlign\n     * @type String\n     **/\n    this.textAlign = \"left\";\n\n    /**\n     * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n     * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n     * whatwg spec</a>. Default is \"top\".\n     * @property textBaseline\n     * @type String\n    */\n    this.textBaseline = \"top\";\n\n    /**\n     * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n     * shrunk to make it fit in this width. For detailed information view the\n     * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n     * whatwg spec</a>.\n     * @property maxWidth\n     * @type Number\n    */\n    this.maxWidth = null;\n\n    /**\n     * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n     * @property outline\n     * @type Number\n     **/\n    this.outline = 0;\n\n    /**\n     * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n     * the value of getMeasuredLineHeight is used.\n     * @property lineHeight\n     * @type Number\n     **/\n    this.lineHeight = 0;\n\n    /**\n     * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n     * the text will not be wrapped.\n     * @property lineWidth\n     * @type Number\n     **/\n    this.lineWidth = null;\n  }\n  var p = createjs.extend(Text, createjs.DisplayObject);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  // static properties:\n  /**\n   * @property _workingContext\n   * @type CanvasRenderingContext2D\n   * @private\n   **/\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n  if (canvas.getContext) {\n    Text._workingContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n  // constants:\n  /**\n   * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n   * @property H_OFFSETS\n   * @type Object\n   * @protected\n   * @static\n   **/\n  Text.H_OFFSETS = {\n    start: 0,\n    left: 0,\n    center: -0.5,\n    end: -1,\n    right: -1\n  };\n\n  /**\n   * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n   * @property H_OFFSETS\n   * @type Object\n   * @protected\n   * @static\n   **/\n  Text.V_OFFSETS = {\n    top: 0,\n    hanging: -0.01,\n    middle: -0.4,\n    alphabetic: -0.8,\n    ideographic: -0.85,\n    bottom: -1\n  };\n\n  // public methods:\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n   **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.text != null && this.text !== \"\";\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  };\n\n  /**\n   * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n    var col = this.color || \"#000\";\n    if (this.outline) {\n      ctx.strokeStyle = col;\n      ctx.lineWidth = this.outline * 1;\n    } else {\n      ctx.fillStyle = col;\n    }\n    this._drawText(this._prepContext(ctx));\n    return true;\n  };\n\n  /**\n   * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n   * @method getMeasuredWidth\n   * @return {Number} The measured, untransformed width of the text.\n   **/\n  p.getMeasuredWidth = function () {\n    return this._getMeasuredWidth(this.text);\n  };\n\n  /**\n   * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n   * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n   * @method getMeasuredLineHeight\n   * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n   * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n   **/\n  p.getMeasuredLineHeight = function () {\n    return this._getMeasuredWidth(\"M\") * 1.2;\n  };\n\n  /**\n   * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n   * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n   * this operation requires the text flowing logic to run, which has an associated CPU cost.\n   * @method getMeasuredHeight\n   * @return {Number} The approximate height of the untransformed multi-line text.\n   **/\n  p.getMeasuredHeight = function () {\n    return this._drawText(null, {}).height;\n  };\n\n  /**\n   * Docced in superclass.\n   */\n  p.getBounds = function () {\n    var rect = this.DisplayObject_getBounds();\n    if (rect) {\n      return rect;\n    }\n    if (this.text == null || this.text === \"\") {\n      return null;\n    }\n    var o = this._drawText(null, {});\n    var w = this.maxWidth && this.maxWidth < o.width ? this.maxWidth : o.width;\n    var x = w * Text.H_OFFSETS[this.textAlign || \"left\"];\n    var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    var y = lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._rectangle.setValues(x, y, w, o.height);\n  };\n\n  /**\n   * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n   * of the drawn text. The lines property contains an array of strings, one for\n   * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n   * whitespace removed.\n   * @method getMetrics\n   * @return {Object} An object with width, height, and lines properties.\n   **/\n  p.getMetrics = function () {\n    var o = {\n      lines: []\n    };\n    o.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._drawText(null, o, o.lines);\n  };\n\n  /**\n   * Returns a clone of the Text instance.\n   * @method clone\n   * @return {Text} a clone of the Text instance.\n   **/\n  p.clone = function () {\n    return this._cloneProps(new Text(this.text, this.font, this.color));\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Text (text=\" + (this.text.length > 20 ? this.text.substr(0, 17) + \"...\" : this.text) + \")]\";\n  };\n\n  // private methods:\n  /**\n   * @method _cloneProps\n   * @param {Text} o\n   * @protected\n   * @return {Text} o\n   **/\n  p._cloneProps = function (o) {\n    this.DisplayObject__cloneProps(o);\n    o.textAlign = this.textAlign;\n    o.textBaseline = this.textBaseline;\n    o.maxWidth = this.maxWidth;\n    o.outline = this.outline;\n    o.lineHeight = this.lineHeight;\n    o.lineWidth = this.lineWidth;\n    return o;\n  };\n\n  /**\n   * @method _getWorkingContext\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {CanvasRenderingContext2D}\n   * @protected\n   **/\n  p._prepContext = function (ctx) {\n    ctx.font = this.font || \"10px sans-serif\";\n    ctx.textAlign = this.textAlign || \"left\";\n    ctx.textBaseline = this.textBaseline || \"top\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 2.5;\n    return ctx;\n  };\n\n  /**\n   * Draws multiline text.\n   * @method _drawText\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Object} o\n   * @param {Array} lines\n   * @return {Object}\n   * @protected\n   **/\n  p._drawText = function (ctx, o, lines) {\n    var paint = !!ctx;\n    if (!paint) {\n      ctx = Text._workingContext;\n      ctx.save();\n      this._prepContext(ctx);\n    }\n    var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    var maxW = 0,\n      count = 0;\n    var hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n    for (var i = 0, l = hardLines.length; i < l; i++) {\n      var str = hardLines[i];\n      var w = null;\n      if (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n        // text wrapping:\n        var words = str.split(/(\\s)/);\n        str = words[0];\n        w = ctx.measureText(str).width;\n        for (var j = 1, jl = words.length; j < jl; j += 2) {\n          // Line needs to wrap:\n          var wordW = ctx.measureText(words[j] + words[j + 1]).width;\n          if (w + wordW > this.lineWidth) {\n            if (paint) {\n              this._drawTextLine(ctx, str, count * lineHeight);\n            }\n            if (lines) {\n              lines.push(str);\n            }\n            if (w > maxW) {\n              maxW = w;\n            }\n            str = words[j + 1];\n            w = ctx.measureText(str).width;\n            count++;\n          } else {\n            str += words[j] + words[j + 1];\n            w += wordW;\n          }\n        }\n      }\n      if (paint) {\n        this._drawTextLine(ctx, str, count * lineHeight);\n      }\n      if (lines) {\n        lines.push(str);\n      }\n      if (o && w == null) {\n        w = ctx.measureText(str).width;\n      }\n      if (w > maxW) {\n        maxW = w;\n      }\n      count++;\n    }\n    if (o) {\n      o.width = maxW;\n      o.height = count * lineHeight;\n    }\n    if (!paint) {\n      ctx.restore();\n    }\n    return o;\n  };\n\n  /**\n   * @method _drawTextLine\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {Number} y\n   * @protected\n   **/\n  p._drawTextLine = function (ctx, text, y) {\n    // Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n    if (this.outline) {\n      ctx.strokeText(text, 0, y, this.maxWidth || 0xFFFF);\n    } else {\n      ctx.fillText(text, 0, y, this.maxWidth || 0xFFFF);\n    }\n  };\n\n  /**\n   * @method _getMeasuredWidth\n   * @param {String} text\n   * @protected\n   **/\n  p._getMeasuredWidth = function (text) {\n    var ctx = Text._workingContext;\n    ctx.save();\n    var w = this._prepContext(ctx).measureText(text).width;\n    ctx.restore();\n    return w;\n  };\n  createjs.Text = createjs.promote(Text, \"DisplayObject\");\n})();\n\n//##############################################################################\n// BitmapText.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n   * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n   * property for more information on defining glyphs.\n   *\n   * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n   * As such, methods like addChild and removeChild are disabled.\n   *\n   *\n   * @class BitmapText\n   * @extends DisplayObject\n   * @param {String} [text=\"\"] The text to display.\n   * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n   * @constructor\n   **/\n  function BitmapText(text, spriteSheet) {\n    this.Container_constructor();\n\n    // public properties:\n    /**\n     * The text to display.\n     * @property text\n     * @type String\n     * @default \"\"\n     **/\n    this.text = text || \"\";\n\n    /**\n     * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n     * should have a single frame animation defined in the sprite sheet named the same as\n     * corresponding character. For example, the following animation definition:\n     *\n     * \t\t\"A\": {frames: [0]}\n     *\n     * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n     * is also acceptable:\n     * \n     * \t\t\"A\": 0\n     *\n     * Note that if a character in the text is not found in the sprite sheet, it will also\n     * try to use the alternate case (upper or lower).\n     *\n     * See SpriteSheet for more information on defining sprite sheet data.\n     * @property spriteSheet\n     * @type SpriteSheet\n     * @default null\n     **/\n    this.spriteSheet = spriteSheet;\n\n    /**\n     * The height of each line of text. If 0, then it will use a line height calculated\n     * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n     * those characters are not defined, it will use the height of the first frame of the\n     * sprite sheet.\n     * @property lineHeight\n     * @type Number\n     * @default 0\n     **/\n    this.lineHeight = 0;\n\n    /**\n     * This spacing (in pixels) will be added after each character in the output.\n     * @property letterSpacing\n     * @type Number\n     * @default 0\n     **/\n    this.letterSpacing = 0;\n\n    /**\n     * If a space character is not defined in the sprite sheet, then empty pixels equal to\n     * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n     * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n     * those characters are not defined, it will use the width of the first frame of the\n     * sprite sheet.\n     * @property spaceWidth\n     * @type Number\n     * @default 0\n     **/\n    this.spaceWidth = 0;\n\n    // private properties:\n    /**\n    * @property _oldProps\n    * @type Object\n    * @protected\n    **/\n    this._oldProps = {\n      text: 0,\n      spriteSheet: 0,\n      lineHeight: 0,\n      letterSpacing: 0,\n      spaceWidth: 0\n    };\n\n    /**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @property _oldStage\n     * @type Stage\n     * @protected\n     */\n    this._oldStage = null;\n    /**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @property _drawAction\n     * @type function\n     * @protected\n     */\n    this._drawAction = null;\n  }\n  var p = createjs.extend(BitmapText, createjs.Container);\n\n  // static properties:\n  /**\n   * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n   * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n   * retained, slightly increasing memory use, but reducing instantiation.\n   * @property maxPoolSize\n   * @type Number\n   * @static\n   * @default 100\n   **/\n  BitmapText.maxPoolSize = 100;\n\n  /**\n   * Sprite object pool.\n   * @type {Array}\n   * @static\n   * @private\n   */\n  BitmapText._spritePool = [];\n\n  // public methods:\n  /**\n   * Docced in superclass.\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return;\n    }\n    this._updateState();\n    this.Container_draw(ctx, ignoreCache);\n  };\n\n  /**\n   * Docced in superclass.\n   **/\n  p.getBounds = function () {\n    this._updateText();\n    return this.Container_getBounds();\n  };\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n  p.isVisible = function () {\n    var hasContent = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;\n    return !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n  };\n  p.clone = function () {\n    return this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n  };\n\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method addChild\n   **/\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method addChildAt\n   **/\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method removeChild\n   **/\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method removeChildAt\n   **/\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   * @method removeAllChildren\n   **/\n  p.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function () {};\n\n  // private methods:\n  /**\n   * Docced in superclass.\n   **/\n  p._updateState = function () {\n    this._updateText();\n  };\n\n  /**\n  * @method _cloneProps\n  * @param {BitmapText} o\n  * @return {BitmapText} o\n  * @protected\n  **/\n  p._cloneProps = function (o) {\n    this.Container__cloneProps(o);\n    o.lineHeight = this.lineHeight;\n    o.letterSpacing = this.letterSpacing;\n    o.spaceWidth = this.spaceWidth;\n    return o;\n  };\n\n  /**\n   * @method _getFrameIndex\n   * @param {String} character\n   * @param {SpriteSheet} spriteSheet\n   * @return {Number}\n   * @protected\n   **/\n  p._getFrameIndex = function (character, spriteSheet) {\n    var c,\n      o = spriteSheet.getAnimation(character);\n    if (!o) {\n      character != (c = character.toUpperCase()) || character != (c = character.toLowerCase()) || (c = null);\n      if (c) {\n        o = spriteSheet.getAnimation(c);\n      }\n    }\n    return o && o.frames[0];\n  };\n\n  /**\n   * @method _getFrame\n   * @param {String} character\n   * @param {SpriteSheet} spriteSheet\n   * @return {Object}\n   * @protected\n   **/\n  p._getFrame = function (character, spriteSheet) {\n    var index = this._getFrameIndex(character, spriteSheet);\n    return index == null ? index : spriteSheet.getFrame(index);\n  };\n\n  /**\n   * @method _getLineHeight\n   * @param {SpriteSheet} ss\n   * @return {Number}\n   * @protected\n   **/\n  p._getLineHeight = function (ss) {\n    var frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.height : 1;\n  };\n\n  /**\n   * @method _getSpaceWidth\n   * @param {SpriteSheet} ss\n   * @return {Number}\n   * @protected\n   **/\n  p._getSpaceWidth = function (ss) {\n    var frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.width : 1;\n  };\n\n  /**\n   * @method _updateText\n   * @protected\n   **/\n  p._updateText = function () {\n    var x = 0,\n      y = 0,\n      o = this._oldProps,\n      change = false,\n      spaceW = this.spaceWidth,\n      lineH = this.lineHeight,\n      ss = this.spriteSheet;\n    var pool = BitmapText._spritePool,\n      kids = this.children,\n      childIndex = 0,\n      numKids = kids.length,\n      sprite;\n    for (var n in o) {\n      if (o[n] != this[n]) {\n        o[n] = this[n];\n        change = true;\n      }\n    }\n    if (!change) {\n      return;\n    }\n    var hasSpace = !!this._getFrame(\" \", ss);\n    if (!hasSpace && !spaceW) {\n      spaceW = this._getSpaceWidth(ss);\n    }\n    if (!lineH) {\n      lineH = this._getLineHeight(ss);\n    }\n    for (var i = 0, l = this.text.length; i < l; i++) {\n      var character = this.text.charAt(i);\n      if (character == \" \" && !hasSpace) {\n        x += spaceW;\n        continue;\n      } else if (character == \"\\n\" || character == \"\\r\") {\n        if (character == \"\\r\" && this.text.charAt(i + 1) == \"\\n\") {\n          i++;\n        } // crlf\n        x = 0;\n        y += lineH;\n        continue;\n      }\n      var index = this._getFrameIndex(character, ss);\n      if (index == null) {\n        continue;\n      }\n      if (childIndex < numKids) {\n        sprite = kids[childIndex];\n      } else {\n        kids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n        sprite.parent = this;\n        numKids++;\n      }\n      sprite.spriteSheet = ss;\n      sprite.gotoAndStop(index);\n      sprite.x = x;\n      sprite.y = y;\n      childIndex++;\n      x += sprite.getBounds().width + this.letterSpacing;\n    }\n    while (numKids > childIndex) {\n      // faster than removeChild.\n      pool.push(sprite = kids.pop());\n      sprite.parent = null;\n      numKids--;\n    }\n    if (pool.length > BitmapText.maxPoolSize) {\n      pool.length = BitmapText.maxPoolSize;\n    }\n  };\n  createjs.BitmapText = createjs.promote(BitmapText, \"Container\");\n})();\n\n//##############################################################################\n// MovieClip.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n   * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n   * class has been included in the EaselJS minified file since 0.7.0.\n   *\n   * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n   * been made to support time-based timelines in the future.\n   *\n   * <h4>Example</h4>\n   * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n   * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n   *\n   *      var stage = new createjs.Stage(\"canvas\");\n   *      createjs.Ticker.addEventListener(\"tick\", stage);\n   *\n   *      var mc = new createjs.MovieClip({loop:-1, labels:{myLabel:20}});\n   *      stage.addChild(mc);\n   *\n   *      var child1 = new createjs.Shape(\n   *          new createjs.Graphics().beginFill(\"#999999\")\n   *              .drawCircle(30,30,30));\n   *      var child2 = new createjs.Shape(\n   *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n   *              .drawCircle(30,30,30));\n   *\n   *      mc.timeline.addTween(\n   *          createjs.Tween.get(child1)\n   *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n   *      mc.timeline.addTween(\n   *          createjs.Tween.get(child2)\n   *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n   *\n   *      mc.gotoAndPlay(\"start\");\n   *\n   * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n   * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n   * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n   *\n   * @class MovieClip\n   * @main MovieClip\n   * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n   * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n   * specified.<UL>\n   *    <LI> `mode`</LI>\n   *    <LI> `startPosition`</LI>\n   *    <LI> `frameBounds`</LI>\n   * </UL>\n   * \n   * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n   * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n   * @extends Container\n   * @constructor\n   **/\n  function MovieClip(props) {\n    this.Container_constructor();\n    !MovieClip.inited && MovieClip.init(); // static init\n\n    var mode, startPosition, loop, labels;\n\n    // handle old params (mode, startPosition, loop, labels):\n    // TODO: deprecated param handling:\n    if (props instanceof String || arguments.length > 1) {\n      mode = props;\n      startPosition = arguments[1];\n      loop = arguments[2];\n      labels = arguments[3];\n      if (loop == null) {\n        loop = -1;\n      }\n      props = null;\n    } else if (props) {\n      mode = props.mode;\n      startPosition = props.startPosition;\n      loop = props.loop;\n      labels = props.labels;\n    }\n    if (!props) {\n      props = {\n        labels: labels\n      };\n    }\n\n    // public properties:\n    /**\n     * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n     * See each constant for a description of the behaviour.\n     * @property mode\n     * @type String\n     * @default null\n     **/\n    this.mode = mode || MovieClip.INDEPENDENT;\n\n    /**\n     * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n     * @property startPosition\n     * @type Number\n     * @default 0\n     */\n    this.startPosition = startPosition || 0;\n\n    /**\n     * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n     * 1 would cause it to loop once (ie. play a total of twice).\n     * @property loop\n     * @type Number\n     * @default -1\n     */\n    this.loop = loop === true ? -1 : loop || 0;\n\n    /**\n     * The current frame of the movieclip.\n     * @property currentFrame\n     * @type Number\n     * @default 0\n     * @readonly\n     */\n    this.currentFrame = 0;\n\n    /**\n     * If true, the MovieClip's position will not advance when ticked.\n     * @property paused\n     * @type Boolean\n     * @default false\n     */\n    this.paused = props.paused || false;\n\n    /**\n     * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n     * @property actionsEnabled\n     * @type Boolean\n     * @default true\n     */\n    this.actionsEnabled = true;\n\n    /**\n     * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n     * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n     * <br><br>\n     * For example, if you had a character animation with a \"body\" child MovieClip instance\n     * with different costumes on each frame, you could set body.autoReset = false, so that\n     * you can manually change the frame it is on, without worrying that it will be reset\n     * automatically.\n     * @property autoReset\n     * @type Boolean\n     * @default true\n     */\n    this.autoReset = true;\n\n    /**\n     * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n     * @property frameBounds\n     * @type Array\n     * @default null\n     */\n    this.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n    /**\n     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n     * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n     * @property framerate\n     * @type {Number}\n     * @default null\n     **/\n    this.framerate = null;\n\n    // set up the needed props for Timeline:\n    props.useTicks = props.paused = true;\n\n    /**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * <h4>Example</h4>\n     *\n     *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     *      var mc = new createjs.MovieClip();\n     *      mc.timeline.addTween(tween);\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     *      var tween = createjs.Tween.get(target).to({_off:false})\n     *          .wait(1).to({_off:true})\n     *          .wait(1).to({_off:false});\n     *\n     * @property timeline\n     * @type Timeline\n     * @default null\n     */\n    this.timeline = new createjs.Timeline(props);\n\n    // private properties:\n    /**\n     * @property _synchOffset\n     * @type Number\n     * @default 0\n     * @private\n     */\n    this._synchOffset = 0;\n\n    /**\n     * @property _rawPosition\n     * @type Number\n     * @default -1\n     * @private\n     */\n    this._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n    /**\n     * @property _bound_resolveState\n     * @type Function\n     * @private\n     */\n    this._bound_resolveState = this._resolveState.bind(this);\n\n    /**\n     * The time remaining from the previous tick, only applicable when .framerate is set.\n     * @property _t\n     * @type Number\n     * @private\n     */\n    this._t = 0;\n\n    /**\n     * List of display objects that are actively being managed by the MovieClip.\n     * @property _managed\n     * @type Object\n     * @private\n     */\n    this._managed = {};\n  }\n  var p = createjs.extend(MovieClip, createjs.Container);\n\n  // constants:\n  /**\n   * The MovieClip will advance independently of its parent, even if its parent is paused.\n   * This is the default mode.\n   * @property INDEPENDENT\n   * @static\n   * @type String\n   * @default \"independent\"\n   * @readonly\n   **/\n  MovieClip.INDEPENDENT = \"independent\";\n\n  /**\n   * The MovieClip will only display a single frame (as determined by the startPosition property).\n   * @property SINGLE_FRAME\n   * @static\n   * @type String\n   * @default \"single\"\n   * @readonly\n   **/\n  MovieClip.SINGLE_FRAME = \"single\";\n\n  /**\n   * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n   * the parent MovieClip.\n   * @property SYNCHED\n   * @static\n   * @type String\n   * @default \"synched\"\n   * @readonly\n   **/\n  MovieClip.SYNCHED = \"synched\";\n\n  // static properties:\n  MovieClip.inited = false;\n\n  // static methods:\n  MovieClip.init = function () {\n    if (MovieClip.inited) {\n      return;\n    }\n    // plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n    MovieClipPlugin.install();\n    MovieClip.inited = true;\n  };\n\n  // getter / setters:\n  /**\n   * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n   * @method _getLabels\n   * @protected\n   * @return {Array}\n   **/\n  p._getLabels = function () {\n    return this.timeline.getLabels();\n  };\n  // MovieClip.getLabels is @deprecated. Remove for 1.1+\n  p.getLabels = createjs.deprecate(p._getLabels, \"MovieClip.getLabels\");\n\n  /**\n   * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n   * @method _getCurrentLabel\n   * @protected\n   * @return {String}\n   **/\n  p._getCurrentLabel = function () {\n    return this.timeline.currentLabel;\n  };\n  // MovieClip.getCurrentLabel is @deprecated. Remove for 1.1+\n  p.getCurrentLabel = createjs.deprecate(p._getCurrentLabel, \"MovieClip.getCurrentLabel\");\n\n  /**\n   * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n   * @method _getDuration\n   * @protected\n   * @return {Number}\n   **/\n  p._getDuration = function () {\n    return this.timeline.duration;\n  };\n  // MovieClip.getDuration is @deprecated. Remove for 1.1+\n  p.getDuration = createjs.deprecate(p._getDuration, \"MovieClip.getDuration\");\n\n  /**\n   * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n   * @property labels\n   * @type {Array}\n   * @readonly\n   **/\n\n  /**\n   * Returns the name of the label on or immediately before the current frame.\n   * @property currentLabel\n   * @type {String}\n   * @readonly\n   **/\n\n  /**\n   * Returns the duration of this MovieClip in seconds or ticks.\n   * @property totalFrames\n   * @type {Number}\n   * @readonly\n   **/\n\n  /**\n   * Returns the duration of this MovieClip in seconds or ticks.\n   * @property duration\n   * @type {Number}\n   * @readonly\n   **/\n  try {\n    Object.defineProperties(p, {\n      labels: {\n        get: p._getLabels\n      },\n      currentLabel: {\n        get: p._getCurrentLabel\n      },\n      totalFrames: {\n        get: p._getDuration\n      },\n      duration: {\n        get: p._getDuration\n      }\n      // TODO: can we just proxy .currentFrame to tl.position as well? Ditto for .loop (or just remove entirely).\n    });\n  } catch (e) {}\n\n  // public methods:\n  /**\n   * Constructor alias for backwards compatibility. This method will be removed in future versions.\n   * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n   * @method initialize\n   * @deprecated in favour of `createjs.promote()`\n   **/\n  p.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   **/\n  p.isVisible = function () {\n    // children are placed in draw, so we can't determine if we have content.\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  };\n\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   **/\n  p.draw = function (ctx, ignoreCache) {\n    // draw to cache first:\n    if (this.DisplayObject_draw(ctx, ignoreCache)) {\n      return true;\n    }\n    this._updateState();\n    this.Container_draw(ctx, ignoreCache);\n    return true;\n  };\n\n  /**\n   * Sets paused to false.\n   * @method play\n   **/\n  p.play = function () {\n    this.paused = false;\n  };\n\n  /**\n   * Sets paused to true.\n   * @method stop\n   **/\n  p.stop = function () {\n    this.paused = true;\n  };\n\n  /**\n   * Advances this movie clip to the specified position or label and sets paused to false.\n   * @method gotoAndPlay\n   * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n   **/\n  p.gotoAndPlay = function (positionOrLabel) {\n    this.paused = false;\n    this._goto(positionOrLabel);\n  };\n\n  /**\n   * Advances this movie clip to the specified position or label and sets paused to true.\n   * @method gotoAndStop\n   * @param {String|Number} positionOrLabel The animation or frame name to go to.\n   **/\n  p.gotoAndStop = function (positionOrLabel) {\n    this.paused = true;\n    this._goto(positionOrLabel);\n  };\n\n  /**\n   * Advances the playhead. This occurs automatically each tick by default.\n   * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n   * @method advance\n  */\n  p.advance = function (time) {\n    var independent = MovieClip.INDEPENDENT;\n    if (this.mode !== independent) {\n      return;\n    } // update happens in draw for synched clips\n\n    // if this MC doesn't have a framerate, hunt ancestors for one:\n    var o = this,\n      fps = o.framerate;\n    while ((o = o.parent) && fps === null) {\n      if (o.mode === independent) {\n        fps = o._framerate;\n      }\n    }\n    this._framerate = fps;\n    if (this.paused) {\n      return;\n    }\n\n    // calculate how many frames to advance:\n    var t = fps !== null && fps !== -1 && time !== null ? time / (1000 / fps) + this._t : 1;\n    var frames = t | 0;\n    this._t = t - frames; // leftover time, save to add to next advance.\n\n    while (frames--) {\n      this._updateTimeline(this._rawPosition + 1, false);\n    }\n  };\n\n  /**\n   * MovieClip instances cannot be cloned.\n   * @method clone\n   **/\n  p.clone = function () {\n    // TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n    throw \"MovieClip cannot be cloned.\";\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[MovieClip (name=\" + this.name + \")]\";\n  };\n\n  // private methods:\n  /**\n   * Docced in superclass.\n   **/\n  p._updateState = function () {\n    if (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) {\n      this._updateTimeline(-1);\n    }\n  };\n\n  /**\n   * @method _tick\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * function.\n   * @protected\n   **/\n  p._tick = function (evtObj) {\n    this.advance(evtObj && evtObj.delta);\n    this.Container__tick(evtObj);\n  };\n\n  /**\n   * @method _goto\n   * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n   * @protected\n   **/\n  p._goto = function (positionOrLabel) {\n    var pos = this.timeline.resolve(positionOrLabel);\n    if (pos == null) {\n      return;\n    }\n    this._t = 0;\n    this._updateTimeline(pos, true);\n  };\n\n  /**\n   * @method _reset\n   * @private\n   **/\n  p._reset = function () {\n    this._rawPosition = -1;\n    this._t = this.currentFrame = 0;\n    this.paused = false;\n  };\n\n  /**\n   * @method _updateTimeline\n   * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n   * @protected\n   **/\n  p._updateTimeline = function (rawPosition, jump) {\n    var synced = this.mode !== MovieClip.INDEPENDENT,\n      tl = this.timeline;\n    if (synced) {\n      rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset);\n    }\n    if (rawPosition < 0) {\n      rawPosition = 0;\n    }\n    if (this._rawPosition === rawPosition && !synced) {\n      return;\n    }\n    this._rawPosition = rawPosition;\n\n    // update timeline position, ignoring actions if this is a graphic.\n    tl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n    tl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n  };\n\n  /**\n   * Renders position 0 without running actions or updating _rawPosition.\n   * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n   * NOTE: not tested when run after the MC advances past the first frame.\n   * @method _renderFirstFrame\n   * @protected\n   **/\n  p._renderFirstFrame = function () {\n    var tl = this.timeline,\n      pos = tl.rawPosition;\n    tl.setPosition(0, true, true, this._bound_resolveState);\n    tl.rawPosition = pos;\n  };\n\n  /**\n   * Runs via a callback after timeline property updates and before actions.\n   * @method _resolveState\n   * @protected\n   **/\n  p._resolveState = function () {\n    var tl = this.timeline;\n    this.currentFrame = tl.position;\n    for (var n in this._managed) {\n      this._managed[n] = 1;\n    }\n    var tweens = tl.tweens;\n    for (var i = 0, l = tweens.length; i < l; i++) {\n      var tween = tweens[i],\n        target = tween.target;\n      if (target === this || tween.passive) {\n        continue;\n      } // TODO: this assumes the actions tween from Animate has `this` as the target. There's likely a better approach.\n      var offset = tween._stepPosition;\n      if (target instanceof createjs.DisplayObject) {\n        // motion tween.\n        this._addManagedChild(target, offset);\n      } else {\n        // state tween.\n        this._setState(target.state, offset);\n      }\n    }\n    var kids = this.children;\n    for (i = kids.length - 1; i >= 0; i--) {\n      var id = kids[i].id;\n      if (this._managed[id] === 1) {\n        this.removeChildAt(i);\n        delete this._managed[id];\n      }\n    }\n  };\n\n  /**\n   * @method _setState\n   * @param {Array} state\n   * @param {Number} offset\n   * @protected\n   **/\n  p._setState = function (state, offset) {\n    if (!state) {\n      return;\n    }\n    for (var i = state.length - 1; i >= 0; i--) {\n      var o = state[i];\n      var target = o.t;\n      var props = o.p;\n      for (var n in props) {\n        target[n] = props[n];\n      }\n      this._addManagedChild(target, offset);\n    }\n  };\n\n  /**\n   * Adds a child to the timeline, and sets it up as a managed child.\n   * @method _addManagedChild\n   * @param {MovieClip} child The child MovieClip to manage\n   * @param {Number} offset\n   * @private\n   **/\n  p._addManagedChild = function (child, offset) {\n    if (child._off) {\n      return;\n    }\n    this.addChildAt(child, 0);\n    if (child instanceof MovieClip) {\n      child._synchOffset = offset;\n      // TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n      if (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) {\n        child._reset();\n      }\n    }\n    this._managed[child.id] = 2;\n  };\n\n  /**\n   * @method _getBounds\n   * @param {Matrix2D} matrix\n   * @param {Boolean} ignoreTransform\n   * @return {Rectangle}\n   * @protected\n   **/\n  p._getBounds = function (matrix, ignoreTransform) {\n    var bounds = this.DisplayObject_getBounds();\n    if (!bounds) {\n      if (this.frameBounds) {\n        bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]);\n      }\n    }\n    if (bounds) {\n      return this._transformBounds(bounds, matrix, ignoreTransform);\n    }\n    return this.Container__getBounds(matrix, ignoreTransform);\n  };\n  createjs.MovieClip = createjs.promote(MovieClip, \"Container\");\n\n  // MovieClipPlugin for TweenJS:\n  /**\n   * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n   * property from tweening.\n   * @private\n   * @class MovieClipPlugin\n   * @constructor\n   **/\n  function MovieClipPlugin() {\n    throw \"MovieClipPlugin cannot be instantiated.\";\n  }\n\n  /**\n   * @property priority\n   * @type {Number}\n   * @static\n   * @readonly\n   **/\n  MovieClipPlugin.priority = 100; // very high priority, should run first\n\n  /**\n   * @property ID\n   * @type {String}\n   * @static\n   * @readonly\n   **/\n  MovieClipPlugin.ID = \"MovieClip\";\n\n  /**\n   * @method install\n   * @static\n   **/\n  MovieClipPlugin.install = function () {\n    createjs.Tween._installPlugin(MovieClipPlugin);\n  };\n\n  /**\n   * @method init\n   * @param {Tween} tween\n   * @param {String} prop\n   * @param {*} value\n   * @static\n   **/\n  MovieClipPlugin.init = function (tween, prop, value) {\n    if (prop === \"startPosition\" && tween.target instanceof MovieClip) {\n      tween._addPlugin(MovieClipPlugin);\n    }\n  };\n\n  /**\n   * @method step\n   * @param {Tween} tween\n   * @param {TweenStep} step\n   * @param {Object} props\n   * @static\n   **/\n  MovieClipPlugin.step = function (tween, step, props) {};\n\n  /**\n   * @method change\n   * @param {Tween} tween\n   * @param {TweenStep} step\n   * @param {*} value\n   * @param {Number} ratio\n   * @param {Object} end\n   * @return {*}\n   * @static\n   */\n  MovieClipPlugin.change = function (tween, step, prop, value, ratio, end) {\n    if (prop === \"startPosition\") {\n      return ratio === 1 ? step.props[prop] : step.prev.props[prop];\n    }\n  };\n})();\n\n//##############################################################################\n// SpriteSheetUtils.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\r\n   * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\r\n   * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\r\n   * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\r\n   * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\r\n   * @class SpriteSheetUtils\r\n   * @static\r\n   **/\n  function SpriteSheetUtils() {\n    throw \"SpriteSheetUtils cannot be instantiated\";\n  }\n\n  // private static properties:\n  /**\r\n   * @property _workingCanvas\r\n   * @static\r\n   * @type HTMLCanvasElement | Object\r\n   * @protected\r\n  */\n  /**\r\n   * @property _workingContext\r\n   * @static\r\n   * @type CanvasRenderingContext2D\r\n   * @protected\r\n  */\n  var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n  if (canvas.getContext) {\n    SpriteSheetUtils._workingCanvas = canvas;\n    SpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n\n  // public static methods:\n  /**\r\n   * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\r\n   * to use a spritesheet frame as the source for a bitmap fill.\r\n   *\r\n   * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\r\n   * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\r\n   * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\r\n   * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\r\n   *\r\n   * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\r\n   * @method extractFrame\r\n   * @static\r\n   * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\r\n   * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\r\n   * name is specified, only the first frame of the animation will be extracted.\r\n   * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\r\n  */\n  SpriteSheetUtils.extractFrame = function (spriteSheet, frameOrAnimation) {\n    if (isNaN(frameOrAnimation)) {\n      frameOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n    }\n    var data = spriteSheet.getFrame(frameOrAnimation);\n    if (!data) {\n      return null;\n    }\n    var r = data.rect;\n    var canvas = SpriteSheetUtils._workingCanvas;\n    canvas.width = r.width;\n    canvas.height = r.height;\n    SpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n    var img = document.createElement(\"img\");\n    img.src = canvas.toDataURL(\"image/png\");\n    return img;\n  };\n\n  // SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n  SpriteSheetUtils.addFlippedFrames = createjs.deprecate(null, \"SpriteSheetUtils.addFlippedFrames\");\n\n  // SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\n  SpriteSheetUtils.mergeAlpha = createjs.deprecate(null, \"SpriteSheetUtils.mergeAlpha\");\n\n  // private static methods:\n  SpriteSheetUtils._flip = function (spriteSheet, count, h, v) {\n    var imgs = spriteSheet._images;\n    var canvas = SpriteSheetUtils._workingCanvas;\n    var ctx = SpriteSheetUtils._workingContext;\n    var il = imgs.length / count;\n    for (var i = 0; i < il; i++) {\n      var src = imgs[i];\n      src.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1);\n      canvas.width = src.width;\n      canvas.height = src.height;\n      ctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0);\n      ctx.drawImage(src, 0, 0);\n      var img = document.createElement(\"img\");\n      img.src = canvas.toDataURL(\"image/png\");\n      // work around a strange bug in Safari:\n      img.width = src.width || src.naturalWidth;\n      img.height = src.height || src.naturalHeight;\n      imgs.push(img);\n    }\n    var frames = spriteSheet._frames;\n    var fl = frames.length / count;\n    for (i = 0; i < fl; i++) {\n      src = frames[i];\n      var rect = src.rect.clone();\n      img = imgs[src.image.__tmp + il * count];\n      var frame = {\n        image: img,\n        rect: rect,\n        regX: src.regX,\n        regY: src.regY\n      };\n      if (h) {\n        rect.x = (img.width || img.naturalWidth) - rect.x - rect.width; // update rect\n        frame.regX = rect.width - src.regX; // update registration point\n      }\n\n      if (v) {\n        rect.y = (img.height || img.naturalHeight) - rect.y - rect.height; // update rect\n        frame.regY = rect.height - src.regY; // update registration point\n      }\n\n      frames.push(frame);\n    }\n    var sfx = \"_\" + (h ? \"h\" : \"\") + (v ? \"v\" : \"\");\n    var names = spriteSheet._animations;\n    var data = spriteSheet._data;\n    var al = names.length / count;\n    for (i = 0; i < al; i++) {\n      var name = names[i];\n      src = data[name];\n      var anim = {\n        name: name + sfx,\n        speed: src.speed,\n        next: src.next,\n        frames: []\n      };\n      if (src.next) {\n        anim.next += sfx;\n      }\n      frames = src.frames;\n      for (var j = 0, l = frames.length; j < l; j++) {\n        anim.frames.push(frames[j] + fl * count);\n      }\n      data[anim.name] = anim;\n      names.push(anim.name);\n    }\n  };\n  createjs.SpriteSheetUtils = SpriteSheetUtils;\n})();\n\n//##############################################################################\n// SpriteSheetBuilder.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n   * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n   * render them at run time as SpriteSheets for better performance.\n   *\n   * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n   * without locking the UI.\n   *\n   * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n   * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n   * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n   * @class SpriteSheetBuilder\n   * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n   * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n   * @extends EventDispatcher\n   * @constructor\n   **/\n  function SpriteSheetBuilder(framerate) {\n    this.EventDispatcher_constructor();\n\n    // public properties:\n    /**\n     * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @property maxWidth\n     * @type Number\n     * @default 2048\n    */\n    this.maxWidth = 2048;\n\n    /**\n     * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @property maxHeight\n     * @type Number\n     * @default 2048\n     **/\n    this.maxHeight = 2048;\n\n    /**\n     * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n     * @property spriteSheet\n     * @type SpriteSheet\n     **/\n    this.spriteSheet = null;\n\n    /**\n     * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n     * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n     * to the a specific device resolution (ex. tablet vs mobile).\n     * @property scale\n     * @type Number\n     * @default 1\n     **/\n    this.scale = 1;\n\n    /**\n    * The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n    * @property padding\n    * @type Number\n    * @default 1\n    **/\n    this.padding = 1;\n\n    /**\n     * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n     * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n     * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n     * Defaults to 0.3.\n     * @property timeSlice\n     * @type Number\n     * @default 0.3\n     **/\n    this.timeSlice = 0.3;\n\n    /**\n     * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n     * been initiated.\n     * @property progress\n     * @type Number\n     * @default -1\n     * @readonly\n     */\n    this.progress = -1;\n\n    /**\n     * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n     * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n     * framerate.\n     * @property framerate\n     * @type Number\n     * @default 0\n     */\n    this.framerate = framerate || 0;\n\n    // private properties:\n    /**\n     * @property _frames\n     * @protected\n     * @type Array\n     **/\n    this._frames = [];\n\n    /**\n     * @property _animations\n     * @protected\n     * @type Array\n     **/\n    this._animations = {};\n\n    /**\n     * @property _data\n     * @protected\n     * @type Array\n     **/\n    this._data = null;\n\n    /**\n     * @property _nextFrameIndex\n     * @protected\n     * @type Number\n     **/\n    this._nextFrameIndex = 0;\n\n    /**\n     * @property _index\n     * @protected\n     * @type Number\n     **/\n    this._index = 0;\n\n    /**\n     * @property _timerID\n     * @protected\n     * @type Number\n     **/\n    this._timerID = null;\n\n    /**\n     * @property _scale\n     * @protected\n     * @type Number\n     **/\n    this._scale = 1;\n  }\n  var p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);\n\n  // constants:\n  SpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n  SpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n  // events:\n  /**\n   * Dispatched when a build completes.\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.6.0\n   */\n\n  /**\n   * Dispatched when an asynchronous build has progress.\n   * @event progress\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {Number} progress The current progress value (0-1).\n   * @since 0.6.0\n   */\n\n  // public methods:\n  /**\n   * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n   * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n   * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n   * times, but manipulate it or its children to change it to generate different frames.\n   *\n   * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n   * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n   * and pass in the Container as the source.\n   * @method addFrame\n   * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n   * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n   * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n   * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n   * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n   * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n   * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n   **/\n  p.addFrame = function (source, sourceRect, scale, setupFunction, setupData) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n    var rect = sourceRect || source.bounds || source.nominalBounds;\n    if (!rect && source.getBounds) {\n      rect = source.getBounds();\n    }\n    if (!rect) {\n      return null;\n    }\n    scale = scale || 1;\n    return this._frames.push({\n      source: source,\n      sourceRect: rect,\n      scale: scale,\n      funct: setupFunction,\n      data: setupData,\n      index: this._frames.length,\n      height: rect.height * scale\n    }) - 1;\n  };\n\n  /**\n   * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n   * @method addAnimation\n   * @param {String} name The name for the animation.\n   * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n   * that played frame indexes 3, 6, and 5 in that order.\n   * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n   * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n   * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n   * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n   * the opposite effect.\n   **/\n  p.addAnimation = function (name, frames, next, speed) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n    this._animations[name] = {\n      frames: frames,\n      next: next,\n      speed: speed\n    };\n  };\n\n  /**\n   * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n   * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n   * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n   * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n   * frame index 10 to 14.\n   *\n   * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n   * set to `false`, ending on the last frame.\n   * @method addMovieClip\n   * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n   * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n   * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n   * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n   * found, the MovieClip will be skipped.\n   * @param {Number} [scale=1] The scale to draw the movie clip at.\n   * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n   * with three parameters: the source, setupData, and the frame index.\n   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n   * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n   * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n   * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n   **/\n  p.addMovieClip = function (source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n    var rects = source.frameBounds;\n    var rect = sourceRect || source.bounds || source.nominalBounds;\n    if (!rect && source.getBounds) {\n      rect = source.getBounds();\n    }\n    if (!rect && !rects) {\n      return;\n    }\n    var i,\n      l,\n      baseFrameIndex = this._frames.length;\n    var duration = source.timeline.duration;\n    for (i = 0; i < duration; i++) {\n      var r = rects && rects[i] ? rects[i] : rect;\n      this.addFrame(source, r, scale, this._setupMovieClipFrame, {\n        i: i,\n        f: setupFunction,\n        d: setupData\n      });\n    }\n    var labels = source.timeline._labels;\n    var lbls = [];\n    for (var n in labels) {\n      lbls.push({\n        index: labels[n],\n        label: n\n      });\n    }\n    if (lbls.length) {\n      lbls.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      for (i = 0, l = lbls.length; i < l; i++) {\n        var label = lbls[i].label;\n        var start = baseFrameIndex + lbls[i].index;\n        var end = baseFrameIndex + (i == l - 1 ? duration : lbls[i + 1].index);\n        var frames = [];\n        for (var j = start; j < end; j++) {\n          frames.push(j);\n        }\n        if (labelFunction) {\n          label = labelFunction(label, source, start, end);\n          if (!label) {\n            continue;\n          }\n        }\n        this.addAnimation(label, frames, true); // for now, this loops all animations.\n      }\n    }\n  };\n\n  /**\n   * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n   * @method build\n   * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n   * occurred.\n   **/\n  p.build = function () {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n    this._startBuild();\n    while (this._drawNext()) {}\n    this._endBuild();\n    return this.spriteSheet;\n  };\n\n  /**\n   * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n   * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n   * specified callback.\n   * @method buildAsync\n   * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n   **/\n  p.buildAsync = function (timeSlice) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n    this.timeSlice = timeSlice;\n    this._startBuild();\n    var _this = this;\n    this._timerID = setTimeout(function () {\n      _this._run();\n    }, 50 - Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50);\n  };\n\n  /**\n   * Stops the current asynchronous build.\n   * @method stopAsync\n   **/\n  p.stopAsync = function () {\n    clearTimeout(this._timerID);\n    this._data = null;\n  };\n\n  /**\n   * SpriteSheetBuilder instances cannot be cloned.\n   * @method clone\n   **/\n  p.clone = function () {\n    throw \"SpriteSheetBuilder cannot be cloned.\";\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[SpriteSheetBuilder]\";\n  };\n\n  // private methods:\n  /**\n   * @method _startBuild\n   * @protected\n   **/\n  p._startBuild = function () {\n    var pad = this.padding || 0;\n    this.progress = 0;\n    this.spriteSheet = null;\n    this._index = 0;\n    this._scale = this.scale;\n    var dataFrames = [];\n    this._data = {\n      images: [],\n      frames: dataFrames,\n      framerate: this.framerate,\n      animations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n    };\n\n    var frames = this._frames.slice();\n    frames.sort(function (a, b) {\n      return a.height <= b.height ? -1 : 1;\n    });\n    if (frames[frames.length - 1].height + pad * 2 > this.maxHeight) {\n      throw SpriteSheetBuilder.ERR_DIMENSIONS;\n    }\n    var y = 0,\n      x = 0;\n    var img = 0;\n    while (frames.length) {\n      var o = this._fillRow(frames, y, img, dataFrames, pad);\n      if (o.w > x) {\n        x = o.w;\n      }\n      y += o.h;\n      if (!o.h || !frames.length) {\n        var canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n        canvas.width = this._getSize(x, this.maxWidth);\n        canvas.height = this._getSize(y, this.maxHeight);\n        this._data.images[img] = canvas;\n        if (!o.h) {\n          x = y = 0;\n          img++;\n        }\n      }\n    }\n  };\n\n  /**\n   * @method _setupMovieClipFrame\n   * @protected\n   * @return {Number} The width & height of the row.\n   **/\n  p._setupMovieClipFrame = function (source, data) {\n    var ae = source.actionsEnabled;\n    source.actionsEnabled = false;\n    source.gotoAndStop(data.i);\n    source.actionsEnabled = ae;\n    data.f && data.f(source, data.d, data.i);\n  };\n\n  /**\n   * @method _getSize\n   * @protected\n   * @return {Number} The width & height of the row.\n   **/\n  p._getSize = function (size, max) {\n    var pow = 4;\n    while (Math.pow(2, ++pow) < size) {}\n    return Math.min(max, Math.pow(2, pow));\n  };\n\n  /**\n   * @method _fillRow\n   * @param {Array} frames\n   * @param {Number} y\n   * @param {HTMLImageElement} img\n   * @param {Object} dataFrames\n   * @param {Number} pad\n   * @protected\n   * @return {Number} The width & height of the row.\n   **/\n  p._fillRow = function (frames, y, img, dataFrames, pad) {\n    var w = this.maxWidth;\n    var maxH = this.maxHeight;\n    y += pad;\n    var h = maxH - y;\n    var x = pad;\n    var height = 0;\n    for (var i = frames.length - 1; i >= 0; i--) {\n      var frame = frames[i];\n      var sc = this._scale * frame.scale;\n      var rect = frame.sourceRect;\n      var source = frame.source;\n      var rx = Math.floor(sc * rect.x - pad);\n      var ry = Math.floor(sc * rect.y - pad);\n      var rh = Math.ceil(sc * rect.height + pad * 2);\n      var rw = Math.ceil(sc * rect.width + pad * 2);\n      if (rw > w) {\n        throw SpriteSheetBuilder.ERR_DIMENSIONS;\n      }\n      if (rh > h || x + rw > w) {\n        continue;\n      }\n      frame.img = img;\n      frame.rect = new createjs.Rectangle(x, y, rw, rh);\n      height = height || rh;\n      frames.splice(i, 1);\n      dataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)];\n      x += rw;\n    }\n    return {\n      w: x,\n      h: height\n    };\n  };\n\n  /**\n   * @method _endBuild\n   * @protected\n   **/\n  p._endBuild = function () {\n    this.spriteSheet = new createjs.SpriteSheet(this._data);\n    this._data = null;\n    this.progress = 1;\n    this.dispatchEvent(\"complete\");\n  };\n\n  /**\n   * @method _run\n   * @protected\n   **/\n  p._run = function () {\n    var ts = Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50;\n    var t = new Date().getTime() + ts;\n    var complete = false;\n    while (t > new Date().getTime()) {\n      if (!this._drawNext()) {\n        complete = true;\n        break;\n      }\n    }\n    if (complete) {\n      this._endBuild();\n    } else {\n      var _this = this;\n      this._timerID = setTimeout(function () {\n        _this._run();\n      }, 50 - ts);\n    }\n    var p = this.progress = this._index / this._frames.length;\n    if (this.hasEventListener(\"progress\")) {\n      var evt = new createjs.Event(\"progress\");\n      evt.progress = p;\n      this.dispatchEvent(evt);\n    }\n  };\n\n  /**\n   * @method _drawNext\n   * @protected\n   * @return Boolean Returns false if this is the last draw.\n   **/\n  p._drawNext = function () {\n    var frame = this._frames[this._index];\n    var sc = frame.scale * this._scale;\n    var rect = frame.rect;\n    var sourceRect = frame.sourceRect;\n    var canvas = this._data.images[frame.img];\n    var ctx = canvas.getContext(\"2d\");\n    frame.funct && frame.funct(frame.source, frame.data);\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.clip();\n    ctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc));\n    ctx.scale(sc, sc);\n    frame.source.draw(ctx); // display object will draw itself.\n    ctx.restore();\n    return ++this._index < this._frames.length;\n  };\n  createjs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n})();\n\n//##############################################################################\n// DOMElement.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n   *\n   * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n   * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n   * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n   * drawn in front of or behind the canvas).\n   *\n   * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n   * the DOM Object be added to a div that also contains the canvas so that they share the same position\n   * on the page.\n   *\n   * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n   * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n   * content.\n   *\n   * <h4>Mouse Interaction</h4>\n   *\n   * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n   * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n   * the htmlElement (note, this does not support EventDispatcher)\n   *\n   *      var domElement = new createjs.DOMElement(htmlElement);\n   *      domElement.htmlElement.onclick = function() {\n   *          console.log(\"clicked\");\n   *      }\n   *\n   * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n   * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n   * stale information.\n   *\n   * @class DOMElement\n   * @extends DisplayObject\n   * @constructor\n   * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n   */\n  function DOMElement(htmlElement) {\n    this.DisplayObject_constructor();\n    if (typeof htmlElement == \"string\") {\n      htmlElement = document.getElementById(htmlElement);\n    }\n    this.mouseEnabled = false;\n    var style = htmlElement.style;\n    style.position = \"absolute\";\n    style.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n    // public properties:\n    /**\n     * The DOM object to manage.\n     * @property htmlElement\n     * @type HTMLElement\n     */\n    this.htmlElement = htmlElement;\n\n    // private properties:\n    /**\n     * @property _oldMtx\n     * @type Matrix2D\n     * @protected\n     */\n    this._oldProps = null;\n\n    /**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @property _oldStage\n     * @type Stage\n     * @protected\n     */\n    this._oldStage = null;\n    /**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @property _drawAction\n     * @type function\n     * @protected\n     */\n    this._drawAction = null;\n  }\n  var p = createjs.extend(DOMElement, createjs.DisplayObject);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  // public methods:\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method isVisible\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   */\n  p.isVisible = function () {\n    return this.htmlElement != null;\n  };\n\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n   * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n   * into itself).\n   * @return {Boolean}\n   */\n  p.draw = function (ctx, ignoreCache) {\n    // this relies on the _tick method because draw isn't called if the parent is not visible.\n    // the actual update happens in _handleDrawEnd\n    return true;\n  };\n\n  /**\n   * Not applicable to DOMElement.\n   * @method cache\n   */\n  p.cache = function () {};\n\n  /**\n   * Not applicable to DOMElement.\n   * @method uncache\n   */\n  p.uncache = function () {};\n\n  /**\n   * Not applicable to DOMElement.\n   * @method updateCache\n   */\n  p.updateCache = function () {};\n\n  /**\n   * Not applicable to DOMElement.\n   * @method hitTest\n   */\n  p.hitTest = function () {};\n\n  /**\n   * Not applicable to DOMElement.\n   * @method localToGlobal\n   */\n  p.localToGlobal = function () {};\n\n  /**\n   * Not applicable to DOMElement.\n   * @method globalToLocal\n   */\n  p.globalToLocal = function () {};\n\n  /**\n   * Not applicable to DOMElement.\n   * @method localToLocal\n   */\n  p.localToLocal = function () {};\n\n  /**\n   * DOMElement cannot be cloned. Throws an error.\n   * @method clone\n   */\n  p.clone = function () {\n    throw \"DOMElement cannot be cloned.\";\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   */\n  p.toString = function () {\n    return \"[DOMElement (name=\" + this.name + \")]\";\n  };\n\n  /**\n      * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n   * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n   * @event click\n   */\n\n  /**\n  * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n  * @event dblClick\n  */\n\n  /**\n   * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n  * @event mousedown\n  */\n\n  /**\n   * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n   * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n   * @event mouseover\n  */\n\n  /**\n   * Not applicable to DOMElement.\n  * @event tick\n  */\n\n  // private methods:\n  /**\n   * @method _tick\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   * function.\n   * @protected\n   */\n  p._tick = function (evtObj) {\n    var stage = this.stage;\n    if (stage && stage !== this._oldStage) {\n      this._drawAction && stage.off(\"drawend\", this._drawAction);\n      this._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n      this._oldStage = stage;\n    }\n    this.DisplayObject__tick(evtObj);\n  };\n\n  /**\n   * @method _handleDrawEnd\n   * @param {Event} evt\n   * @protected\n   */\n  p._handleDrawEnd = function (evt) {\n    var o = this.htmlElement;\n    if (!o) {\n      return;\n    }\n    var style = o.style;\n    var props = this.getConcatenatedDisplayProps(this._props),\n      mtx = props.matrix;\n    var visibility = props.visible ? \"visible\" : \"hidden\";\n    if (visibility != style.visibility) {\n      style.visibility = visibility;\n    }\n    if (!props.visible) {\n      return;\n    }\n    var oldProps = this._oldProps,\n      oldMtx = oldProps && oldProps.matrix;\n    var n = 10000; // precision\n\n    if (!oldMtx || !oldMtx.equals(mtx)) {\n      var str = \"matrix(\" + (mtx.a * n | 0) / n + \",\" + (mtx.b * n | 0) / n + \",\" + (mtx.c * n | 0) / n + \",\" + (mtx.d * n | 0) / n + \",\" + (mtx.tx + 0.5 | 0);\n      style.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + \",\" + (mtx.ty + 0.5 | 0) + \")\";\n      style.MozTransform = str + \"px,\" + (mtx.ty + 0.5 | 0) + \"px)\";\n      if (!oldProps) {\n        oldProps = this._oldProps = new createjs.DisplayProps(true, null);\n      }\n      oldProps.matrix.copy(mtx);\n    }\n    if (oldProps.alpha != props.alpha) {\n      style.opacity = \"\" + (props.alpha * n | 0) / n;\n      oldProps.alpha = props.alpha;\n    }\n  };\n  createjs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n})();\n\n//##############################################################################\n// Filter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n   * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n   * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n   *\n   * <h4>Example</h4>\n   *\n   *      myInstance.filters = [\n   *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n   *          new createjs.BlurFilter(5, 5, 10)\n   *      ];\n   *      myInstance.cache(0,0, 100, 100);\n   *\n   * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n   * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n   * will cause an object to feather outwards, resulting in a margin around the shape.\n   *\n   * <h4>EaselJS Filters</h4>\n   * EaselJS comes with a number of pre-built filters:\n   * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n   *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n   *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n   *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n   *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n   * </ul>\n   *\n   * @class Filter\n   * @constructor\n   **/\n  function Filter() {\n    /**\n     * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n     * @property usesContext\n     * @type {boolean}\n     * @default false\n     */\n    this.usesContext = false;\n\n    /**\n     * Another filter that is required to act as part of this filter and created and managed under the hood.\n     * @private\n     * @property _multiPass\n     * @type {Filter}\n     * @default null\n     */\n    this._multiPass = null;\n\n    /**\n     * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n     * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n     * @property VTX_SHADER\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n    this.VTX_SHADER_BODY = null;\n\n    /**\n     * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n     * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n     * @property FRAG_SHADER\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n    this.FRAG_SHADER_BODY = null;\n  }\n  var p = Filter.prototype;\n\n  // public methods:\n  /**\n   * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n   * @method getBounds\n   * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n   * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n   **/\n  p.getBounds = function (rect) {\n    return rect;\n  };\n\n  /**\n   * Assign any unique uniforms or other setup functionality here.\n   * @method shaderParamSetup\n   * @virtual\n   * @param {WebGLContext} gl The context associated with the stage performing the render.\n   * @param {StageGL} stage The stage instance that will be rendering.\n   * @param {ShaderProgram} shaderProgram The compiled shader that is going to be used to perform the render.\n   */\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {};\n\n  /**\n   * Applies the filter to the specified context.\n   * @method applyFilter\n   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n   * @param {Number} x The x position to use for the source rect.\n   * @param {Number} y The y position to use for the source rect.\n   * @param {Number} width The width to use for the source rect.\n   * @param {Number} height The height to use for the source rect.\n   * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n   * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n   * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n   * @return {Boolean} If the filter was applied successfully.\n   **/\n  p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    // this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n    targetCtx = targetCtx || ctx;\n    if (targetX == null) {\n      targetX = x;\n    }\n    if (targetY == null) {\n      targetY = y;\n    }\n    try {\n      var imageData = ctx.getImageData(x, y, width, height);\n    } catch (e) {\n      return false;\n    }\n    if (this._applyFilter(imageData)) {\n      targetCtx.putImageData(imageData, targetX, targetY);\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Filter]\";\n  };\n\n  /**\n   * Returns a clone of this Filter instance.\n   * @method clone\n   * @return {Filter} A clone of the current Filter instance.\n   **/\n  p.clone = function () {\n    return new Filter();\n  };\n\n  // private methods:\n  /**\n   * @method _applyFilter\n   * @param {ImageData} imageData Target ImageData instance.\n   * @return {Boolean}\n   **/\n  p._applyFilter = function (imageData) {\n    return true;\n  };\n  createjs.Filter = Filter;\n})();\n\n//##############################################################################\n// BitmapCache.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n   * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n   * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n   *\n   * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n   * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n   * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}} there is little benefit to performing \n   * a cache as it is already a single image. Caching is best done on containers containing multiple complex parts that \n   * do not move often, so that rendering the image instead will improve overall rendering speed. A cached object will \n   * not visually update until explicitly told to do so with a call to update, much like a Stage. If a cache is being \n   * updated every frame it is likely not improving rendering performance. Cache are best used when updates will be sparse.\n   *\n   * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need, \n   * and to physically enable some effects. The BitmapCache is also responsible for applying filters to objects and \n   * reads each {{#crossLink \"Filter\"}}{{/crossLink}} due to this relationship. Real-time Filters are not recommended \n   * performance wise when dealing with a Context2D canvas. For best performance and to still allow for some visual \n   * effects use a compositeOperation when possible.\n   * @class BitmapCache\n   * @constructor\n   **/\n  function BitmapCache() {\n    // public:\n    /**\n     * Width of the cache relative to the target object.\n     * @property width\n     * @protected\n     * @type {Number}\n     * @default undefined\n     **/\n    this.width = undefined;\n\n    /**\n     * Height of the cache relative to the target object.\n     * @property height\n     * @protected\n     * @type {Number}\n     * @default undefined\n     * @todo Should the width and height be protected?\n     **/\n    this.height = undefined;\n\n    /**\n     * Horizontal position of the cache relative to the target's origin.\n     * @property x\n     * @protected\n     * @type {Number}\n     * @default undefined\n     **/\n    this.x = undefined;\n\n    /**\n     * Vertical position of the cache relative to target's origin.\n     * @property y\n     * @protected\n     * @type {Number}\n     * @default undefined\n     **/\n    this.y = undefined;\n\n    /**\n     * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n     * decrease render quality. Objects with increased scales are more likely to look good when scaled up or rotated.\n     * Objects with decreased scales can save on rendering performance.\n     * @property scale\n     * @protected\n     * @type {Number}\n     * @default 1\n     **/\n    this.scale = 1;\n\n    /**\n     * The x offset used for drawing into the cache itself, accounts for both transforms applied.\n     * @property offX\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this.offX = 0;\n\n    /**\n     * The y offset used for drawing into the cache itself, accounts for both transforms applied.\n     * @property offY\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this.offY = 0;\n\n    /**\n     * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs.\n     * This can be useful to see if a cache has been updated.\n     * @property cacheID\n     * @type {Number}\n     * @default 0\n     **/\n    this.cacheID = 0;\n\n    // protected:\n    /**\n     * The relative offset of the filter's x position, used for drawing the cache onto its container.\n     * Re-calculated every update call before drawing.\n     * @property _filterOffY\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this._filterOffX = 0;\n\n    /**\n     * The relative offset of the filter's y position, used for drawing the cache onto its container.\n     * Re-calculated every update call before drawing.\n     * @property _filterOffY\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this._filterOffY = 0;\n\n    /**\n     * The cacheID when a DataURL was requested.\n     * @property _cacheDataURLID\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this._cacheDataURLID = 0;\n\n    /**\n     * The cache's DataURL, generated on-demand using the getter.\n     * @property _cacheDataURL\n     * @protected\n     * @type {String}\n     * @default null\n     **/\n    this._cacheDataURL = null;\n\n    /**\n     * Internal tracking of final bounding width, approximately width*scale; however, filters can complicate the actual value.\n     * @property _drawWidth\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this._drawWidth = 0;\n\n    /**\n     * Internal tracking of final bounding height, approximately height*scale; however, filters can complicate the actual value.\n     * @property _drawHeight\n     * @protected\n     * @type {Number}\n     * @default 0\n     **/\n    this._drawHeight = 0;\n  }\n  var p = BitmapCache.prototype;\n\n  /**\n   * Returns the bounds that surround all applied filters, relies on each filter to describe how it changes bounds.\n   * @method getFilterBounds\n   * @param {DisplayObject} target The object to check the filter bounds for.\n   * @param {Rectangle} [output=null] Optional parameter, if provided then calculated bounds will be applied to that object.\n   * @return {Rectangle} bounds object representing the bounds with filters.\n   * @static\n   **/\n  BitmapCache.getFilterBounds = function (target, output) {\n    if (!output) {\n      output = new createjs.Rectangle();\n    }\n    var filters = target.filters;\n    var filterCount = filters && filters.length;\n    if (!!filterCount <= 0) {\n      return output;\n    }\n    for (var i = 0; i < filterCount; i++) {\n      var f = filters[i];\n      if (!f || !f.getBounds) {\n        continue;\n      }\n      var test = f.getBounds();\n      if (!test) {\n        continue;\n      }\n      if (i == 0) {\n        output.setValues(test.x, test.y, test.width, test.height);\n      } else {\n        output.extend(test.x, test.y, test.width, test.height);\n      }\n    }\n    return output;\n  };\n\n  // public methods:\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[BitmapCache]\";\n  };\n\n  /**\n   * Actually create the correct cache surface and properties associated with it. Caching and it's benefits are discussed\n   * by the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} function and this class description. Here are the detailed\n   * specifics of how to use the options object.\n   *\n   * - If options.useGL is set to \"new\" a StageGL is created and contained on this for use when rendering the cache.\n   * - If options.useGL is set to \"stage\" if the current stage is a StageGL it will be used. If not then it will default to \"new\".\n   * - If options.useGL is a StageGL instance it will not create one but use the one provided.\n   * - If options.useGL is undefined a Context 2D cache will be performed.\n   *\n   * This means you can use any combination of StageGL and 2D with either, neither, or both the stage and cache being\n   * WebGL. Using \"new\" with a StageGL display list is highly unrecommended, but still an option. It should be avoided\n   * due to negative performance reasons and the Image loading limitation noted in the class complications above.\n   *\n   * When \"options.useGL\" is set to the parent stage of the target and WebGL, performance is increased by using\n   * \"RenderTextures\" instead of canvas elements. These are internal Textures on the graphics card stored in the GPU.\n   * Because they are no longer canvases you cannot perform operations you could with a regular canvas. The benefit\n   * is that this avoids the slowdown of copying the texture back and forth from the GPU to a Canvas element.\n   * This means \"stage\" is the recommended option when available.\n   *\n   * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw, i.e. do not use a\n   * WebGL context cache when caching a Shape, Text, etc.\n   * <h4>WebGL cache with a 2D context</h4>\n   *\n   *     var stage = new createjs.Stage();\n   *     var bmp = new createjs.Bitmap(src);\n   *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"new\"});          // no StageGL to use, so make one\n   *\n   *     var shape = new createjs.Shape();\n   *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n   *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n   *\n   * <h4>WebGL cache with a WebGL context</h4>\n   *\n   *     var stageGL = new createjs.StageGL();\n   *     var bmp = new createjs.Bitmap(src);\n   *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"stage\"});       // use our StageGL to cache\n   *\n   *     var shape = new createjs.Shape();\n   *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n   *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n   *\n   * You may wish to create your own StageGL instance to control factors like clear color, transparency, AA, and\n   * others. If you do, pass a new instance in instead of \"true\", the library will automatically set the\n   * {{#crossLink \"StageGL/isCacheControlled\"}}{{/crossLink}} to true on your instance. This will trigger it to behave\n   * correctly, and not assume your main context is WebGL.\n   *\n   * @public\n   * @method BitmapCache.cache\n   * @param {Number} x The x coordinate origin for the cache region.\n   * @param {Number} y The y coordinate origin for the cache region.\n   * @param {Number} width The width of the cache region.\n   * @param {Number} height The height of the cache region.\n   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n   * using myShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and\n   * rotate cached elements with greater fidelity. Default is 1.\n   * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n   * @param {undefined|\"new\"|\"stage\"|StageGL} [options.useGL=undefined] Select whether to use context 2D, or WebGL rendering, and\n   * whether to make a new stage instance or use an existing one. See above for extensive details on use.\n   * @for BitmapCache\n   */\n  p.define = function (target, x, y, width, height, scale, options) {\n    if (!target) {\n      throw \"No symbol to cache\";\n    }\n    this._options = options;\n    this.target = target;\n    this.width = width >= 1 ? width : 1;\n    this.height = height >= 1 ? height : 1;\n    this.x = x || 0;\n    this.y = y || 0;\n    this.scale = scale || 1;\n    this.update();\n  };\n\n  /**\n   * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n   * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n   * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n   * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n   * @method update\n   * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n   **/\n  p.update = function (compositeOperation) {\n    if (!this.target) {\n      throw \"define() must be called before update()\";\n    }\n    var filterBounds = BitmapCache.getFilterBounds(this.target);\n    var surface = this.target.cacheCanvas;\n    this._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width;\n    this._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height;\n    if (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n      this._updateSurface();\n    }\n    this._filterOffX = filterBounds.x;\n    this._filterOffY = filterBounds.y;\n    this.offX = this.x * this.scale + this._filterOffX;\n    this.offY = this.y * this.scale + this._filterOffY;\n    this._drawToCache(compositeOperation);\n    this.cacheID = this.cacheID ? this.cacheID + 1 : 1;\n  };\n\n  /**\n   * Reset and release all the properties and memory associated with this cache.\n   * @method release\n   **/\n  p.release = function () {\n    if (this._webGLCache) {\n      // if it isn't cache controlled clean up after yourself\n      if (!this._webGLCache.isCacheControlled) {\n        if (this.__lastRT) {\n          this.__lastRT = undefined;\n        }\n        if (this.__rtA) {\n          this._webGLCache._killTextureObject(this.__rtA);\n        }\n        if (this.__rtB) {\n          this._webGLCache._killTextureObject(this.__rtB);\n        }\n        if (this.target && this.target.cacheCanvas) {\n          this._webGLCache._killTextureObject(this.target.cacheCanvas);\n        }\n      }\n      // set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n      this._webGLCache = false;\n    } else {\n      var stage = this.target.stage;\n      if (stage instanceof createjs.StageGL) {\n        stage.releaseTexture(this.target.cacheCanvas);\n      }\n    }\n    this.target = this.target.cacheCanvas = null;\n    this.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n    this.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n    this.scale = 1;\n  };\n\n  /**\n   * Returns a data URL for the cache, or `null` if this display object is not cached.\n   * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n   * cache has not changed.\n   * @method getCacheDataURL\n   * @return {String} The image data url for the cache.\n   **/\n  p.getCacheDataURL = function () {\n    var cacheCanvas = this.target && this.target.cacheCanvas;\n    if (!cacheCanvas) {\n      return null;\n    }\n    if (this.cacheID != this._cacheDataURLID) {\n      this._cacheDataURLID = this.cacheID;\n      this._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null; // incase function is\n    }\n\n    return this._cacheDataURL;\n  };\n\n  /**\n   * Use context2D drawing commands to display the cache canvas being used.\n   * @method draw\n   * @param {CanvasRenderingContext2D} ctx The context to draw into.\n   * @return {Boolean} Whether the draw was handled successfully.\n   **/\n  p.draw = function (ctx) {\n    if (!this.target) {\n      return false;\n    }\n    ctx.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale);\n    return true;\n  };\n\n  // private methods:\n  /**\n   * Create or resize the invisible canvas/surface that is needed for the display object(s) to draw to,\n   * and in turn be used in their stead when drawing. The surface is resized to the size defined\n   * by the width and height, factoring in scaling and filters. Adjust them to adjust the output size.\n   * @method _updateSurface\n   * @protected\n   **/\n  p._updateSurface = function () {\n    if (!this._options || !this._options.useGL) {\n      var surface = this.target.cacheCanvas;\n\n      // create it if it's missing\n      if (!surface) {\n        surface = this.target.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      }\n\n      // now size it\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      return;\n    }\n\n    // create it if it's missing\n    if (!this._webGLCache) {\n      if (this._options.useGL === \"stage\") {\n        if (!(this.target.stage && this.target.stage.isWebGL)) {\n          var error = \"Cannot use 'stage' for cache because the object's parent stage is \";\n          error += this.target.stage ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\";\n          throw error;\n        }\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n        this._webGLCache = this.target.stage;\n      } else if (this._options.useGL === \"new\") {\n        this.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n        this._webGLCache = new createjs.StageGL(this.target.cacheCanvas, {\n          antialias: true,\n          transparent: true,\n          autoPurge: -1\n        });\n        this._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n      } else if (this._options.useGL instanceof createjs.StageGL) {\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n        this._webGLCache = this._options.useGL;\n        this._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n      } else {\n        throw \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \" + this._options.useGL;\n      }\n    }\n\n    // now size render surfaces\n    var surface = this.target.cacheCanvas;\n    var stageGL = this._webGLCache;\n\n    // if we have a dedicated stage we've gotta size it\n    if (stageGL.isCacheControlled) {\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      stageGL.updateViewport(this._drawWidth, this._drawHeight);\n    }\n    if (this.target.filters) {\n      // with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n    } else {\n      // without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n      if (!stageGL.isCacheControlled) {\n        stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      }\n    }\n  };\n\n  /**\n   * Perform the cache draw out for context 2D now that the setup properties have been performed.\n   * @method _drawToCache\n   * @protected\n   **/\n  p._drawToCache = function (compositeOperation) {\n    var surface = this.target.cacheCanvas;\n    var target = this.target;\n    var webGL = this._webGLCache;\n    if (webGL) {\n      //TODO: auto split blur into an x/y pass\n      webGL.cacheDraw(target, target.filters, this);\n\n      // we may of swapped around which element the surface is, so we re-fetch it\n      surface = this.target.cacheCanvas;\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n    } else {\n      var ctx = surface.getContext(\"2d\");\n      if (!compositeOperation) {\n        ctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1);\n      }\n      ctx.save();\n      ctx.globalCompositeOperation = compositeOperation;\n      ctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY);\n      ctx.translate(-this.x, -this.y);\n      target.draw(ctx, true);\n      ctx.restore();\n      if (target.filters && target.filters.length) {\n        this._applyFilters(ctx);\n      }\n    }\n    surface._invalid = true;\n  };\n\n  /**\n   * Work through every filter and apply its individual visual transformation.\n   * @method _applyFilters\n   * @protected\n   **/\n  p._applyFilters = function (ctx) {\n    var filters = this.target.filters;\n    var w = this._drawWidth;\n    var h = this._drawHeight;\n    var data;\n    var i = 0,\n      filter = filters[i];\n    do {\n      // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n      if (filter.usesContext) {\n        if (data) {\n          ctx.putImageData(data, 0, 0);\n          data = null;\n        }\n        filter.applyFilter(ctx, 0, 0, w, h);\n      } else {\n        if (!data) {\n          data = ctx.getImageData(0, 0, w, h);\n        }\n        filter._applyFilter(data);\n      }\n\n      // work through the multipass if it's there, otherwise move on\n      filter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n    } while (filter);\n\n    //done\n    if (data) {\n      ctx.putImageData(data, 0, 0);\n    }\n  };\n  createjs.BitmapCache = BitmapCache;\n})();\n\n//##############################################################################\n// BlurFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Applies a box blur to DisplayObjects in context 2D and a Gaussian blur in webgl. Note that this filter is fairly\n   * intensive, particularly if the quality is set higher than 1.\n   *\n   * <h4>Example</h4>\n   * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n   * method to account for the spread that the blur causes.\n   *\n   *      var shape = new createjs.Shape().set({x:100,y:100});\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   *\n   *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n   *      shape.filters = [blurFilter];\n   *      var bounds = blurFilter.getBounds();\n   *\n   *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n   * @class BlurFilter\n   * @extends Filter\n   * @constructor\n   * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n   * @param {Number} [blurY=0] The vertical blur radius in pixels.\n   * @param {Number} [quality=1] The number of blur iterations.\n   **/\n  function BlurFilter(blurX, blurY, quality) {\n    this.Filter_constructor();\n\n    // public properties:\n    /**\n     * Horizontal blur radius in pixels\n     * @property blurX\n     * @default 0\n     * @type Number\n     **/\n    this._blurX = blurX;\n    this._blurXTable = [];\n    this._lastBlurX = null;\n\n    /**\n     * Vertical blur radius in pixels\n     * @property blurY\n     * @default 0\n     * @type Number\n     **/\n    this._blurY = blurY;\n    this._blurYTable = [];\n    this._lastBlurY = null;\n\n    /**\n     * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n     * smoother blur, but take twice as long to run.\n     * @property quality\n     * @default 1\n     * @type Number\n     **/\n    this._quality;\n    this._lastQuality = null;\n\n    /**\n     * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n     */\n    this.FRAG_SHADER_TEMPLATE = \"uniform float xWeight[{{blurX}}];\" + \"uniform float yWeight[{{blurY}}];\" + \"uniform vec2 textureOffset;\" + \"void main(void) {\" + \"vec4 color = vec4(0.0);\" + \"float xAdj = ({{blurX}}.0-1.0)/2.0;\" + \"float yAdj = ({{blurY}}.0-1.0)/2.0;\" + \"vec2 sampleOffset;\" + \"for(int i=0; i<{{blurX}}; i++) {\" + \"for(int j=0; j<{{blurY}}; j++) {\" + \"sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\" + \"color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\" + \"}\" + \"}\" + \"gl_FragColor = color.rgba;\" + \"}\";\n\n    // update the filter using the setters\n    if (isNaN(quality) || quality < 1) {\n      quality = 1;\n    }\n    this.setQuality(quality | 0);\n  }\n  var p = createjs.extend(BlurFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  p.getBlurX = function () {\n    return this._blurX;\n  };\n  p.getBlurY = function () {\n    return this._blurY;\n  };\n  p.setBlurX = function (value) {\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n    this._blurX = value;\n  };\n  p.setBlurY = function (value) {\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n    this._blurY = value;\n  };\n  p.getQuality = function () {\n    return this._quality;\n  };\n  p.setQuality = function (value) {\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n    this._quality = value | 0;\n  };\n  p._getShader = function () {\n    var xChange = this._lastBlurX !== this._blurX;\n    var yChange = this._lastBlurY !== this._blurY;\n    var qChange = this._lastQuality !== this._quality;\n    if (xChange || yChange || qChange) {\n      if (xChange || qChange) {\n        this._blurXTable = this._getTable(this._blurX * this._quality);\n      }\n      if (yChange || qChange) {\n        this._blurYTable = this._getTable(this._blurY * this._quality);\n      }\n      this._updateShader();\n      this._lastBlurX = this._blurX;\n      this._lastBlurY = this._blurY;\n      this._lastQuality = this._quality;\n      return undefined; // force a rebuild\n    }\n\n    return this._compiledShader;\n  };\n  p._setShader = function () {\n    this._compiledShader;\n  };\n  try {\n    Object.defineProperties(p, {\n      blurX: {\n        get: p.getBlurX,\n        set: p.setBlurX\n      },\n      blurY: {\n        get: p.getBlurY,\n        set: p.setBlurY\n      },\n      quality: {\n        get: p.getQuality,\n        set: p.setQuality\n      },\n      _builtShader: {\n        get: p._getShader,\n        set: p._setShader\n      }\n    });\n  } catch (e) {\n    console.log(e);\n  }\n\n  /**\n   * Internal lookup function to create gaussian distribution.\n   * @method _getTable\n   * @param {Number} spread How many steps in the curve.\n   * @return {Array<Number>} An array with Math.ceil(spread*2) entries with appropriately distributed weights.\n   */\n  p._getTable = function (spread) {\n    var EDGE = 4.2;\n    if (spread <= 1) {\n      return [1];\n    }\n    var result = [];\n    var count = Math.ceil(spread * 2);\n    count += count % 2 ? 0 : 1;\n    var adjust = count / 2 | 0;\n    for (var i = -adjust; i <= adjust; i++) {\n      var x = i / adjust * EDGE;\n      result.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -(Math.pow(x, 2) / 4)));\n    }\n    var factor = result.reduce(function (a, b) {\n      return a + b;\n    });\n    return result.map(function (currentValue, index, array) {\n      return currentValue / factor;\n    });\n  };\n\n  /**\n   * Internal update function to create shader properties.\n   * @method _updateShader\n   */\n  p._updateShader = function () {\n    if (this._blurX === undefined || this._blurY === undefined) {\n      return;\n    }\n    var result = this.FRAG_SHADER_TEMPLATE;\n    result = result.replace(/\\{\\{blurX\\}\\}/g, this._blurXTable.length.toFixed(0));\n    result = result.replace(/\\{\\{blurY\\}\\}/g, this._blurYTable.length.toFixed(0));\n    this.FRAG_SHADER_BODY = result;\n  };\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    // load the normalized gaussian weight tables\n    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"xWeight\"), this._blurXTable);\n    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"yWeight\"), this._blurYTable);\n\n    // what is the size of a single pixel in -1, 1 (webGL) space\n    gl.uniform2f(gl.getUniformLocation(shaderProgram, \"textureOffset\"), 2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality));\n  };\n\n  // constants:\n  /**\n   * Array of multiply values for blur calculations.\n   * @property MUL_TABLE\n   * @type Array\n   * @protected\n   * @static\n   **/\n  BlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\n  /**\n   * Array of shift values for blur calculations.\n   * @property SHG_TABLE\n   * @type Array\n   * @protected\n   * @static\n   **/\n  BlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n  // public methods:\n  /** docced in super class **/\n  p.getBounds = function (rect) {\n    var x = this.blurX | 0,\n      y = this.blurY | 0;\n    if (x <= 0 && y <= 0) {\n      return rect;\n    }\n    var q = Math.pow(this.quality, 0.2);\n    return (rect || new createjs.Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new BlurFilter(this.blurX, this.blurY, this.quality);\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[BlurFilter]\";\n  };\n\n  // private methods:\n\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    var radiusX = this._blurX >> 1;\n    if (isNaN(radiusX) || radiusX < 0) return false;\n    var radiusY = this._blurY >> 1;\n    if (isNaN(radiusY) || radiusY < 0) return false;\n    if (radiusX == 0 && radiusY == 0) return false;\n    var iterations = this.quality;\n    if (isNaN(iterations) || iterations < 1) iterations = 1;\n    iterations |= 0;\n    if (iterations > 3) iterations = 3;\n    if (iterations < 1) iterations = 1;\n    var px = imageData.data;\n    var x = 0,\n      y = 0,\n      i = 0,\n      p = 0,\n      yp = 0,\n      yi = 0,\n      yw = 0,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0,\n      pr = 0,\n      pg = 0,\n      pb = 0,\n      pa = 0;\n    var divx = radiusX + radiusX + 1 | 0;\n    var divy = radiusY + radiusY + 1 | 0;\n    var w = imageData.width | 0;\n    var h = imageData.height | 0;\n    var w1 = w - 1 | 0;\n    var h1 = h - 1 | 0;\n    var rxp1 = radiusX + 1 | 0;\n    var ryp1 = radiusY + 1 | 0;\n    var ssx = {\n      r: 0,\n      b: 0,\n      g: 0,\n      a: 0\n    };\n    var sx = ssx;\n    for (i = 1; i < divx; i++) {\n      sx = sx.n = {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 0\n      };\n    }\n    sx.n = ssx;\n    var ssy = {\n      r: 0,\n      b: 0,\n      g: 0,\n      a: 0\n    };\n    var sy = ssy;\n    for (i = 1; i < divy; i++) {\n      sy = sy.n = {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 0\n      };\n    }\n    sy.n = ssy;\n    var si = null;\n    var mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n    var stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n    var mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n    var sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n    while (iterations-- > 0) {\n      yw = yi = 0;\n      var ms = mtx;\n      var ss = stx;\n      for (y = h; --y > -1;) {\n        r = rxp1 * (pr = px[yi | 0]);\n        g = rxp1 * (pg = px[yi + 1 | 0]);\n        b = rxp1 * (pb = px[yi + 2 | 0]);\n        a = rxp1 * (pa = px[yi + 3 | 0]);\n        sx = ssx;\n        for (i = rxp1; --i > -1;) {\n          sx.r = pr;\n          sx.g = pg;\n          sx.b = pb;\n          sx.a = pa;\n          sx = sx.n;\n        }\n        for (i = 1; i < rxp1; i++) {\n          p = yi + ((w1 < i ? w1 : i) << 2) | 0;\n          r += sx.r = px[p];\n          g += sx.g = px[p + 1];\n          b += sx.b = px[p + 2];\n          a += sx.a = px[p + 3];\n          sx = sx.n;\n        }\n        si = ssx;\n        for (x = 0; x < w; x++) {\n          px[yi++] = r * ms >>> ss;\n          px[yi++] = g * ms >>> ss;\n          px[yi++] = b * ms >>> ss;\n          px[yi++] = a * ms >>> ss;\n          p = yw + ((p = x + radiusX + 1) < w1 ? p : w1) << 2;\n          r -= si.r - (si.r = px[p]);\n          g -= si.g - (si.g = px[p + 1]);\n          b -= si.b - (si.b = px[p + 2]);\n          a -= si.a - (si.a = px[p + 3]);\n          si = si.n;\n        }\n        yw += w;\n      }\n      ms = mty;\n      ss = sty;\n      for (x = 0; x < w; x++) {\n        yi = x << 2 | 0;\n        r = ryp1 * (pr = px[yi]) | 0;\n        g = ryp1 * (pg = px[yi + 1 | 0]) | 0;\n        b = ryp1 * (pb = px[yi + 2 | 0]) | 0;\n        a = ryp1 * (pa = px[yi + 3 | 0]) | 0;\n        sy = ssy;\n        for (i = 0; i < ryp1; i++) {\n          sy.r = pr;\n          sy.g = pg;\n          sy.b = pb;\n          sy.a = pa;\n          sy = sy.n;\n        }\n        yp = w;\n        for (i = 1; i <= radiusY; i++) {\n          yi = yp + x << 2;\n          r += sy.r = px[yi];\n          g += sy.g = px[yi + 1];\n          b += sy.b = px[yi + 2];\n          a += sy.a = px[yi + 3];\n          sy = sy.n;\n          if (i < h1) {\n            yp += w;\n          }\n        }\n        yi = x;\n        si = ssy;\n        if (iterations > 0) {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = a * ms >>> ss;\n            if (pa > 0) {\n              px[p] = r * ms >>> ss;\n              px[p + 1] = g * ms >>> ss;\n              px[p + 2] = b * ms >>> ss;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0;\n            }\n            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n            si = si.n;\n            yi += w;\n          }\n        } else {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = a * ms >>> ss;\n            if (pa > 0) {\n              pa = 255 / pa;\n              px[p] = (r * ms >>> ss) * pa;\n              px[p + 1] = (g * ms >>> ss) * pa;\n              px[p + 2] = (b * ms >>> ss) * pa;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0;\n            }\n            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n            si = si.n;\n            yi += w;\n          }\n        }\n      }\n    }\n    return true;\n  };\n  createjs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n})();\n\n//##############################################################################\n// AlphaMapFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n   * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n   *\n   * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n   * better performance.\n   *\n   * <h4>Example</h4>\n   * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n   *\n   *       var box = new createjs.Shape();\n   *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n   *       box.graphics.drawRect(0, 0, 100, 100);\n   *       box.cache(0, 0, 100, 100);\n   *\n   *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n   *       bmp.filters = [\n   *           new createjs.AlphaMapFilter(box.cacheCanvas)\n   *       ];\n   *       bmp.cache(0, 0, 100, 100);\n   *       stage.addChild(bmp);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n   * @class AlphaMapFilter\n   * @extends Filter\n   * @constructor\n   * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n   * result. This should be exactly the same dimensions as the target.\n   **/\n  function AlphaMapFilter(alphaMap) {\n    this.Filter_constructor();\n\n    // public properties:\n    /**\n     * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n     * dimensions as the target.\n     * @property alphaMap\n     * @type HTMLImageElement|HTMLCanvasElement\n     **/\n    this.alphaMap = alphaMap;\n\n    // private properties:\n    /**\n     * @property _alphaMap\n     * @protected\n     * @type HTMLImageElement|HTMLCanvasElement\n     **/\n    this._alphaMap = null;\n\n    /**\n     * @property _mapData\n     * @protected\n     * @type Uint8ClampedArray\n     **/\n    this._mapData = null;\n    this._mapTexture = null;\n    this.FRAG_SHADER_BODY = \"uniform sampler2D uAlphaSampler;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n    // some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n    // using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n    \"gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\" + \"}\";\n  }\n  var p = createjs.extend(AlphaMapFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    if (!this._mapTexture) {\n      this._mapTexture = gl.createTexture();\n    }\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  };\n\n  // public methods:\n  /** docced in super class **/\n  p.clone = function () {\n    var o = new AlphaMapFilter(this.alphaMap);\n    o._alphaMap = this._alphaMap;\n    o._mapData = this._mapData;\n    return o;\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[AlphaMapFilter]\";\n  };\n\n  // private methods:\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    if (!this.alphaMap) {\n      return true;\n    }\n    if (!this._prepAlphaMap()) {\n      return false;\n    }\n\n    // TODO: update to support scenarios where the target has different dimensions.\n    var data = imageData.data;\n    var map = this._mapData;\n    for (var i = 0, l = data.length; i < l; i += 4) {\n      data[i + 3] = map[i] || 0;\n    }\n    return true;\n  };\n\n  /**\n   * @method _prepAlphaMap\n   * @protected\n   **/\n  p._prepAlphaMap = function () {\n    if (!this.alphaMap) {\n      return false;\n    }\n    if (this.alphaMap == this._alphaMap && this._mapData) {\n      return true;\n    }\n    this._mapData = null;\n    var map = this._alphaMap = this.alphaMap;\n    var canvas = map;\n    var ctx;\n    if (map instanceof HTMLCanvasElement) {\n      ctx = canvas.getContext(\"2d\");\n    } else {\n      canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = map.width;\n      canvas.height = map.height;\n      ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(map, 0, 0);\n    }\n    try {\n      var imgData = ctx.getImageData(0, 0, map.width, map.height);\n    } catch (e) {\n      //if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n      return false;\n    }\n    this._mapData = imgData.data;\n    return true;\n  };\n  createjs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n})();\n\n//##############################################################################\n// AlphaMaskFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n   * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n   * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n   * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n   *\n   * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n   *\n   * <h4>Example</h4>\n   * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n   *\n   *      var box = new createjs.Shape();\n   *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n   *      box.graphics.drawRect(0, 0, 100, 100);\n   *      box.cache(0, 0, 100, 100);\n   *\n   *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n   *      bmp.filters = [\n   *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n   *      ];\n   *      bmp.cache(0, 0, 100, 100);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n   * @class AlphaMaskFilter\n   * @extends Filter\n   * @constructor\n   * @param {HTMLImageElement|HTMLCanvasElement} mask\n   **/\n  function AlphaMaskFilter(mask) {\n    this.Filter_constructor();\n\n    // public properties:\n    /**\n     * The image (or canvas) to use as the mask.\n     * @property mask\n     * @type HTMLImageElement|HTMLCanvasElement\n     **/\n    this.mask = mask;\n\n    /** docced in super class **/\n    this.usesContext = true;\n    this.FRAG_SHADER_BODY = \"uniform sampler2D uAlphaSampler;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" + \"gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\" + \"}\";\n  }\n  var p = createjs.extend(AlphaMaskFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    if (!this._mapTexture) {\n      this._mapTexture = gl.createTexture();\n    }\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  };\n\n  // public methods:\n  /**\n   * Applies the filter to the specified context.\n   *\n   * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n   * correctly.</strong>\n   * @method applyFilter\n   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n   * @param {Number} x The x position to use for the source rect.\n   * @param {Number} y The y position to use for the source rect.\n   * @param {Number} width The width to use for the source rect.\n   * @param {Number} height The height to use for the source rect.\n   * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n   * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n   * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n   * @return {Boolean} If the filter was applied successfully.\n   **/\n  p.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    if (!this.mask) {\n      return true;\n    }\n    targetCtx = targetCtx || ctx;\n    if (targetX == null) {\n      targetX = x;\n    }\n    if (targetY == null) {\n      targetY = y;\n    }\n    targetCtx.save();\n    if (ctx != targetCtx) {\n      // TODO: support targetCtx and targetX/Y\n      // clearRect, then draw the ctx in?\n      return false;\n    }\n    targetCtx.globalCompositeOperation = \"destination-in\";\n    targetCtx.drawImage(this.mask, targetX, targetY);\n    targetCtx.restore();\n    return true;\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new AlphaMaskFilter(this.mask);\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[AlphaMaskFilter]\";\n  };\n  createjs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n})();\n\n//##############################################################################\n// ColorFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Applies a color transform to DisplayObjects.\n   *\n   * <h4>Example</h4>\n   * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n   * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n   *\n   *      var shape = new createjs.Shape().set({x:100,y:100});\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   *\n   *      shape.filters = [\n   *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n   *      ];\n   *      shape.cache(-50, -50, 100, 100);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n   * @class ColorFilter\n   * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n   * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n   * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n   * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n   * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n   * between -255 and 255.\n   * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n    * between -255 and 255.\n   * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n    * between -255 and 255.\n   * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n    * between -255 and 255.\n   * @constructor\n   * @extends Filter\n   **/\n  function ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n    this.Filter_constructor();\n\n    // public properties:\n    /**\n     * Red channel multiplier.\n     * @property redMultiplier\n     * @type Number\n     **/\n    this.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n\n    /**\n     * Green channel multiplier.\n     * @property greenMultiplier\n     * @type Number\n     **/\n    this.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n\n    /**\n     * Blue channel multiplier.\n     * @property blueMultiplier\n     * @type Number\n     **/\n    this.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n\n    /**\n     * Alpha channel multiplier.\n     * @property alphaMultiplier\n     * @type Number\n     **/\n    this.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n\n    /**\n     * Red channel offset (added to value).\n     * @property redOffset\n     * @type Number\n     **/\n    this.redOffset = redOffset || 0;\n\n    /**\n     * Green channel offset (added to value).\n     * @property greenOffset\n     * @type Number\n     **/\n    this.greenOffset = greenOffset || 0;\n\n    /**\n     * Blue channel offset (added to value).\n     * @property blueOffset\n     * @type Number\n     **/\n    this.blueOffset = blueOffset || 0;\n\n    /**\n     * Alpha channel offset (added to value).\n     * @property alphaOffset\n     * @type Number\n     **/\n    this.alphaOffset = alphaOffset || 0;\n    this.FRAG_SHADER_BODY = \"uniform vec4 uColorMultiplier;\" + \"uniform vec4 uColorOffset;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"gl_FragColor = (color * uColorMultiplier) + uColorOffset;\" + \"}\";\n  }\n  var p = createjs.extend(ColorFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  // public methods:\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMultiplier\"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier);\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorOffset\"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);\n  };\n\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[ColorFilter]\";\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n  };\n\n  // private methods:\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    var data = imageData.data;\n    var l = data.length;\n    for (var i = 0; i < l; i += 4) {\n      data[i] = data[i] * this.redMultiplier + this.redOffset;\n      data[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset;\n      data[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset;\n      data[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset;\n    }\n    return true;\n  };\n  createjs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n})();\n\n//##############################################################################\n// ColorMatrix.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n   * Most methods return the instance to facilitate chained calls.\n   *\n   * <h4>Example</h4>\n   *\n   *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n   * for an example of how to use ColorMatrix to change a DisplayObject's color.\n   * @class ColorMatrix\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @constructor\n   **/\n  function ColorMatrix(brightness, contrast, saturation, hue) {\n    this.setColor(brightness, contrast, saturation, hue);\n  }\n  var p = ColorMatrix.prototype;\n\n  // constants:\n  /**\n   * Array of delta values for contrast calculations.\n   * @property DELTA_INDEX\n   * @type Array\n   * @protected\n   * @static\n   **/\n  ColorMatrix.DELTA_INDEX = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\n\n  /**\n   * Identity matrix values.\n   * @property IDENTITY_MATRIX\n   * @type Array\n   * @protected\n   * @static\n   **/\n  ColorMatrix.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n\n  /**\n   * The constant length of a color matrix.\n   * @property LENGTH\n   * @type Number\n   * @protected\n   * @static\n   **/\n  ColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length;\n\n  // public methods:\n  /**\n   * Resets the instance with the specified values.\n   * @method setColor\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n  p.setColor = function (brightness, contrast, saturation, hue) {\n    return this.reset().adjustColor(brightness, contrast, saturation, hue);\n  };\n\n  /**\n   * Resets the matrix to identity values.\n   * @method reset\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n  p.reset = function () {\n    return this.copy(ColorMatrix.IDENTITY_MATRIX);\n  };\n\n  /**\n   * Shortcut method to adjust brightness, contrast, saturation and hue.\n   * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n   * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n   * @method adjustColor\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.adjustColor = function (brightness, contrast, saturation, hue) {\n    this.adjustHue(hue);\n    this.adjustContrast(contrast);\n    this.adjustBrightness(brightness);\n    return this.adjustSaturation(saturation);\n  };\n\n  /**\n   * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n   * Positive values will make the image brighter, negative values will make it darker.\n   * @method adjustBrightness\n   * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.adjustBrightness = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n    value = this._cleanValue(value, 255);\n    this._multiplyMatrix([1, 0, 0, 0, value, 0, 1, 0, 0, value, 0, 0, 1, 0, value, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    return this;\n  };\n\n  /**\n   * Adjusts the contrast of pixel color.\n   * Positive values will increase contrast, negative values will decrease contrast.\n   * @method adjustContrast\n   * @param {Number} value A value between -100 & 100.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.adjustContrast = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n    value = this._cleanValue(value, 100);\n    var x;\n    if (value < 0) {\n      x = 127 + value / 100 * 127;\n    } else {\n      x = value % 1;\n      if (x == 0) {\n        x = ColorMatrix.DELTA_INDEX[value];\n      } else {\n        x = ColorMatrix.DELTA_INDEX[value << 0] * (1 - x) + ColorMatrix.DELTA_INDEX[(value << 0) + 1] * x; // use linear interpolation for more granularity.\n      }\n\n      x = x * 127 + 127;\n    }\n    this._multiplyMatrix([x / 127, 0, 0, 0, 0.5 * (127 - x), 0, x / 127, 0, 0, 0.5 * (127 - x), 0, 0, x / 127, 0, 0.5 * (127 - x), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    return this;\n  };\n\n  /**\n   * Adjusts the color saturation of the pixel.\n   * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n   * @method adjustSaturation\n   * @param {Number} value A value between -100 & 100.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.adjustSaturation = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n    value = this._cleanValue(value, 100);\n    var x = 1 + (value > 0 ? 3 * value / 100 : value / 100);\n    var lumR = 0.3086;\n    var lumG = 0.6094;\n    var lumB = 0.0820;\n    this._multiplyMatrix([lumR * (1 - x) + x, lumG * (1 - x), lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x) + x, lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x), lumB * (1 - x) + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    return this;\n  };\n\n  /**\n   * Adjusts the hue of the pixel color.\n   * @method adjustHue\n   * @param {Number} value A value between -180 & 180.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.adjustHue = function (value) {\n    if (value == 0 || isNaN(value)) {\n      return this;\n    }\n    value = this._cleanValue(value, 180) / 180 * Math.PI;\n    var cosVal = Math.cos(value);\n    var sinVal = Math.sin(value);\n    var lumR = 0.213;\n    var lumG = 0.715;\n    var lumB = 0.072;\n    this._multiplyMatrix([lumR + cosVal * (1 - lumR) + sinVal * -lumR, lumG + cosVal * -lumG + sinVal * -lumG, lumB + cosVal * -lumB + sinVal * (1 - lumB), 0, 0, lumR + cosVal * -lumR + sinVal * 0.143, lumG + cosVal * (1 - lumG) + sinVal * 0.140, lumB + cosVal * -lumB + sinVal * -0.283, 0, 0, lumR + cosVal * -lumR + sinVal * -(1 - lumR), lumG + cosVal * -lumG + sinVal * lumG, lumB + cosVal * (1 - lumB) + sinVal * lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    return this;\n  };\n\n  /**\n   * Concatenates (multiplies) the specified matrix with this one.\n   * @method concat\n   * @param {Array} matrix An array or ColorMatrix instance.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.concat = function (matrix) {\n    matrix = this._fixMatrix(matrix);\n    if (matrix.length != ColorMatrix.LENGTH) {\n      return this;\n    }\n    this._multiplyMatrix(matrix);\n    return this;\n  };\n\n  /**\n   * Returns a clone of this ColorMatrix.\n   * @method clone\n   * @return {ColorMatrix} A clone of this ColorMatrix.\n   **/\n  p.clone = function () {\n    return new ColorMatrix().copy(this);\n  };\n\n  /**\n   * Return a length 25 (5x5) array instance containing this matrix's values.\n   * @method toArray\n   * @return {Array} An array holding this matrix's values.\n   **/\n  p.toArray = function () {\n    var arr = [];\n    for (var i = 0, l = ColorMatrix.LENGTH; i < l; i++) {\n      arr[i] = this[i];\n    }\n    return arr;\n  };\n\n  /**\n   * Copy the specified matrix's values to this matrix.\n   * @method copy\n   * @param {Array} matrix An array or ColorMatrix instance.\n   * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   **/\n  p.copy = function (matrix) {\n    var l = ColorMatrix.LENGTH;\n    for (var i = 0; i < l; i++) {\n      this[i] = matrix[i];\n    }\n    return this;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[ColorMatrix]\";\n  };\n\n  // private methods:\n  /**\n   * @method _multiplyMatrix\n   * @param {Array} matrix\n   * @protected\n   **/\n  p._multiplyMatrix = function (matrix) {\n    var i,\n      j,\n      k,\n      col = [];\n    for (i = 0; i < 5; i++) {\n      for (j = 0; j < 5; j++) {\n        col[j] = this[j + i * 5];\n      }\n      for (j = 0; j < 5; j++) {\n        var val = 0;\n        for (k = 0; k < 5; k++) {\n          val += matrix[j + k * 5] * col[k];\n        }\n        this[j + i * 5] = val;\n      }\n    }\n  };\n\n  /**\n   * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n   * @method _cleanValue\n   * @param {Number} value The raw number\n   * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n   * @protected\n   **/\n  p._cleanValue = function (value, limit) {\n    return Math.min(limit, Math.max(-limit, value));\n  };\n\n  /**\n   * Makes sure matrixes are 5x5 (25 long).\n   * @method _fixMatrix\n   * @param {Array} matrix\n   * @protected\n   **/\n  p._fixMatrix = function (matrix) {\n    if (matrix instanceof ColorMatrix) {\n      matrix = matrix.toArray();\n    }\n    if (matrix.length < ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n    } else if (matrix.length > ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, ColorMatrix.LENGTH);\n    }\n    return matrix;\n  };\n  createjs.ColorMatrix = ColorMatrix;\n})();\n\n//##############################################################################\n// ColorMatrixFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n   * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n   * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n   *\n   *      var shape = new createjs.Shape().set({x:100,y:100});\n   *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   *\n   *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n   *      shape.filters = [\n   *          new createjs.ColorMatrixFilter(matrix)\n   *      ];\n   *\n   *      shape.cache(-50, -50, 100, 100);\n   *\n   * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n   * @class ColorMatrixFilter\n   * @constructor\n   * @extends Filter\n   * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n   * class.\n   **/\n  function ColorMatrixFilter(matrix) {\n    this.Filter_constructor();\n\n    // public properties:\n    /**\n     * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n     * @property matrix\n     * @type Array | ColorMatrix\n     **/\n    this.matrix = matrix;\n    this.FRAG_SHADER_BODY = \"uniform mat4 uColorMatrix;\" + \"uniform vec4 uColorMatrixOffset;\" + \"void main(void) {\" + \"vec4 color = texture2D(uSampler, vRenderCoord);\" + \"mat4 m = uColorMatrix;\" + \"vec4 newColor = vec4(0,0,0,0);\" + \"newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\" + \"newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\" + \"newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\" + \"newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\" + \"gl_FragColor = newColor + uColorMatrixOffset;\" + \"}\";\n  }\n  var p = createjs.extend(ColorMatrixFilter, createjs.Filter);\n\n  // TODO: deprecated\n  // p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n  /** docced in super class **/\n  p.shaderParamSetup = function (gl, stage, shaderProgram) {\n    var mat = this.matrix;\n    var colorMatrix = new Float32Array([mat[0], mat[1], mat[2], mat[3], mat[5], mat[6], mat[7], mat[8], mat[10], mat[11], mat[12], mat[13], mat[15], mat[16], mat[17], mat[18]]);\n    gl.uniformMatrix4fv(gl.getUniformLocation(shaderProgram, \"uColorMatrix\"), false, colorMatrix);\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"), mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255);\n  };\n\n  // public methods:\n  /** docced in super class **/\n  p.toString = function () {\n    return \"[ColorMatrixFilter]\";\n  };\n\n  /** docced in super class **/\n  p.clone = function () {\n    return new ColorMatrixFilter(this.matrix);\n  };\n\n  // private methods:\n  /** docced in super class **/\n  p._applyFilter = function (imageData) {\n    var data = imageData.data;\n    var l = data.length;\n    var r, g, b, a;\n    var mtx = this.matrix;\n    var m0 = mtx[0],\n      m1 = mtx[1],\n      m2 = mtx[2],\n      m3 = mtx[3],\n      m4 = mtx[4];\n    var m5 = mtx[5],\n      m6 = mtx[6],\n      m7 = mtx[7],\n      m8 = mtx[8],\n      m9 = mtx[9];\n    var m10 = mtx[10],\n      m11 = mtx[11],\n      m12 = mtx[12],\n      m13 = mtx[13],\n      m14 = mtx[14];\n    var m15 = mtx[15],\n      m16 = mtx[16],\n      m17 = mtx[17],\n      m18 = mtx[18],\n      m19 = mtx[19];\n    for (var i = 0; i < l; i += 4) {\n      r = data[i];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n      data[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4; // red\n      data[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9; // green\n      data[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14; // blue\n      data[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19; // alpha\n    }\n\n    return true;\n  };\n  createjs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n})();\n\n//##############################################################################\n// Touch.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n  * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n  * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n  *\n  * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n  * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n  *\n  * <h4>Example</h4>\n  *\n  *      var stage = new createjs.Stage(\"canvasId\");\n  *      createjs.Touch.enable(stage);\n  *\n  * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n  *\n  *      createjs.Touch.disable(stage);\n  *\n  * @class Touch\n  * @static\n  **/\n  function Touch() {\n    throw \"Touch cannot be instantiated\";\n  }\n\n  // public static methods:\n  /**\n   * Returns `true` if touch is supported in the current browser.\n   * @method isSupported\n   * @return {Boolean} Indicates whether touch is supported in the current browser.\n   * @static\n   **/\n  Touch.isSupported = function () {\n    return !!('ontouchstart' in window // iOS & Android\n    || window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0 // IE10\n    || window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0); // IE11+\n  };\n\n  /**\n   * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n   * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n   * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n   * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n   * for more information.\n   * @method enable\n   * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n   * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n   * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n   * allowed when the user is interacting with the target canvas.\n   * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n   * @static\n   **/\n  Touch.enable = function (stage, singleTouch, allowDefault) {\n    if (!stage || !stage.canvas || !Touch.isSupported()) {\n      return false;\n    }\n    if (stage.__touch) {\n      return true;\n    }\n\n    // inject required properties on stage:\n    stage.__touch = {\n      pointers: {},\n      multitouch: !singleTouch,\n      preventDefault: !allowDefault,\n      count: 0\n    };\n\n    // note that in the future we may need to disable the standard mouse event model before adding\n    // these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n    if ('ontouchstart' in window) {\n      Touch._IOS_enable(stage);\n    } else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) {\n      Touch._IE_enable(stage);\n    }\n    return true;\n  };\n\n  /**\n   * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n   * @method disable\n   * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n   * @static\n   **/\n  Touch.disable = function (stage) {\n    if (!stage) {\n      return;\n    }\n    if ('ontouchstart' in window) {\n      Touch._IOS_disable(stage);\n    } else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) {\n      Touch._IE_disable(stage);\n    }\n    delete stage.__touch;\n  };\n\n  // Private static methods:\n  /**\n   * @method _IOS_enable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n  Touch._IOS_enable = function (stage) {\n    var canvas = stage.canvas;\n    var f = stage.__touch.f = function (e) {\n      Touch._IOS_handleEvent(stage, e);\n    };\n    canvas.addEventListener(\"touchstart\", f, false);\n    canvas.addEventListener(\"touchmove\", f, false);\n    canvas.addEventListener(\"touchend\", f, false);\n    canvas.addEventListener(\"touchcancel\", f, false);\n  };\n\n  /**\n   * @method _IOS_disable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n  Touch._IOS_disable = function (stage) {\n    var canvas = stage.canvas;\n    if (!canvas) {\n      return;\n    }\n    var f = stage.__touch.f;\n    canvas.removeEventListener(\"touchstart\", f, false);\n    canvas.removeEventListener(\"touchmove\", f, false);\n    canvas.removeEventListener(\"touchend\", f, false);\n    canvas.removeEventListener(\"touchcancel\", f, false);\n  };\n\n  /**\n   * @method _IOS_handleEvent\n   * @param {Stage} stage\n   * @param {Object} e The event to handle\n   * @protected\n   * @static\n   **/\n  Touch._IOS_handleEvent = function (stage, e) {\n    if (!stage) {\n      return;\n    }\n    if (stage.__touch.preventDefault) {\n      e.preventDefault && e.preventDefault();\n    }\n    var touches = e.changedTouches;\n    var type = e.type;\n    for (var i = 0, l = touches.length; i < l; i++) {\n      var touch = touches[i];\n      var id = touch.identifier;\n      if (touch.target != stage.canvas) {\n        continue;\n      }\n      if (type == \"touchstart\") {\n        this._handleStart(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type == \"touchmove\") {\n        this._handleMove(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type == \"touchend\" || type == \"touchcancel\") {\n        this._handleEnd(stage, id, e);\n      }\n    }\n  };\n\n  /**\n   * @method _IE_enable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n  Touch._IE_enable = function (stage) {\n    var canvas = stage.canvas;\n    var f = stage.__touch.f = function (e) {\n      Touch._IE_handleEvent(stage, e);\n    };\n    if (window.navigator[\"pointerEnabled\"] === undefined) {\n      canvas.addEventListener(\"MSPointerDown\", f, false);\n      window.addEventListener(\"MSPointerMove\", f, false);\n      window.addEventListener(\"MSPointerUp\", f, false);\n      window.addEventListener(\"MSPointerCancel\", f, false);\n      if (stage.__touch.preventDefault) {\n        canvas.style.msTouchAction = \"none\";\n      }\n    } else {\n      canvas.addEventListener(\"pointerdown\", f, false);\n      window.addEventListener(\"pointermove\", f, false);\n      window.addEventListener(\"pointerup\", f, false);\n      window.addEventListener(\"pointercancel\", f, false);\n      if (stage.__touch.preventDefault) {\n        canvas.style.touchAction = \"none\";\n      }\n    }\n    stage.__touch.activeIDs = {};\n  };\n\n  /**\n   * @method _IE_disable\n   * @protected\n   * @param {Stage} stage\n   * @static\n   **/\n  Touch._IE_disable = function (stage) {\n    var f = stage.__touch.f;\n    if (window.navigator[\"pointerEnabled\"] === undefined) {\n      window.removeEventListener(\"MSPointerMove\", f, false);\n      window.removeEventListener(\"MSPointerUp\", f, false);\n      window.removeEventListener(\"MSPointerCancel\", f, false);\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n      }\n    } else {\n      window.removeEventListener(\"pointermove\", f, false);\n      window.removeEventListener(\"pointerup\", f, false);\n      window.removeEventListener(\"pointercancel\", f, false);\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"pointerdown\", f, false);\n      }\n    }\n  };\n\n  /**\n   * @method _IE_handleEvent\n   * @param {Stage} stage\n   * @param {Object} e The event to handle.\n   * @protected\n   * @static\n   **/\n  Touch._IE_handleEvent = function (stage, e) {\n    if (!stage) {\n      return;\n    }\n    if (stage.__touch.preventDefault) {\n      e.preventDefault && e.preventDefault();\n    }\n    var type = e.type;\n    var id = e.pointerId;\n    var ids = stage.__touch.activeIDs;\n    if (type == \"MSPointerDown\" || type == \"pointerdown\") {\n      if (e.srcElement != stage.canvas) {\n        return;\n      }\n      ids[id] = true;\n      this._handleStart(stage, id, e, e.pageX, e.pageY);\n    } else if (ids[id]) {\n      // it's an id we're watching\n      if (type == \"MSPointerMove\" || type == \"pointermove\") {\n        this._handleMove(stage, id, e, e.pageX, e.pageY);\n      } else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\" || type == \"pointerup\" || type == \"pointercancel\") {\n        delete ids[id];\n        this._handleEnd(stage, id, e);\n      }\n    }\n  };\n\n  /**\n   * @method _handleStart\n   * @param {Stage} stage\n   * @param {String|Number} id\n   * @param {Object} e\n   * @param {Number} x\n   * @param {Number} y\n   * @protected\n   **/\n  Touch._handleStart = function (stage, id, e, x, y) {\n    var props = stage.__touch;\n    if (!props.multitouch && props.count) {\n      return;\n    }\n    var ids = props.pointers;\n    if (ids[id]) {\n      return;\n    }\n    ids[id] = true;\n    props.count++;\n    stage._handlePointerDown(id, e, x, y);\n  };\n\n  /**\n   * @method _handleMove\n   * @param {Stage} stage\n   * @param {String|Number} id\n   * @param {Object} e\n   * @param {Number} x\n   * @param {Number} y\n   * @protected\n   **/\n  Touch._handleMove = function (stage, id, e, x, y) {\n    if (!stage.__touch.pointers[id]) {\n      return;\n    }\n    stage._handlePointerMove(id, e, x, y);\n  };\n\n  /**\n   * @method _handleEnd\n   * @param {Stage} stage\n   * @param {String|Number} id\n   * @param {Object} e\n   * @protected\n   **/\n  Touch._handleEnd = function (stage, id, e) {\n    // TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n    var props = stage.__touch;\n    var ids = props.pointers;\n    if (!ids[id]) {\n      return;\n    }\n    props.count--;\n    stage._handlePointerUp(id, e, true);\n    delete ids[id];\n  };\n  createjs.Touch = Touch;\n})();\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * Static class holding library specific information such as the version and buildDate of\n   * the library.\n   * @class EaselJS\n   **/\n  var s = createjs.EaselJS = createjs.EaselJS || {};\n\n  /**\n   * The version string for this release.\n   * @property version\n   * @type String\n   * @static\n   **/\n  s.version = /*=version*/\"1.0.0\"; // injected by build process\n\n  /**\n   * The build date for this release in UTC format.\n   * @property buildDate\n   * @type String\n   * @static\n   **/\n  s.buildDate = /*=date*/\"Thu, 14 Sep 2017 19:47:53 GMT\"; // injected by build process\n})();","map":{"version":3,"names":["window","createjs","extend","subclass","superclass","o","constructor","prototype","promote","prefix","subP","supP","Object","getPrototypeOf","__proto__","n","hasOwnProperty","indexOf","array","searchElement","i","l","length","UID","_nextID","get","deprecate","fallbackMethod","name","msg","console","warn","log","apply","arguments","Event","type","bubbles","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","p","preventDefault","stopPropagation","stopImmediatePropagation","remove","clone","set","props","toString","EventDispatcher","_listeners","_captureListeners","initialize","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","splice","eventObj","e","parent","top","list","captureListeners","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","timingMode","maxDelta","paused","_addEventListener","_inited","init","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","_setInterval","interval","_setupTick","setInterval","_getInterval","getInterval","_setFPS","value","setFPS","_getFPS","getFPS","defineProperties","framerate","_getTime","reset","f","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","getMeasuredTickTime","ticks","ttl","times","Math","min","getMeasuredFPS","runTime","getEventTime","getTicks","pauseable","_handleSynch","_tick","_handleRAF","_handleTimeout","mode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","time","elapsedTime","event","delta","unshift","pop","w","now","performance","mozNow","msNow","oNow","webkitNow","VideoBuffer","video","readyState","_video","_canvas","_videoReady","bind","getImage","canvas","createCanvas","document","createElement","width","videoWidth","height","videoHeight","currentTime","ctx","getContext","clearRect","drawImage","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","Event_constructor","_get_localX","globalToLocal","x","_get_localY","y","_get_isTouch","localX","localY","isTouch","Matrix2D","a","b","c","d","tx","ty","setValues","DEG_TO_RAD","PI","identity","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","prependTransform","rotate","angle","skew","scale","translate","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","abs","copy","DisplayProps","visible","alpha","shadow","compositeOperation","Point","point","Rectangle","pad","left","bottom","right","rectangle","contains","union","rect","intersection","x1","y1","x2","y2","intersects","isEmpty","ButtonHelper","outLabel","overLabel","downLabel","play","hitArea","hitLabel","_isPressed","_isOver","_enabled","mouseChildren","enabled","actionsEnabled","gotoAndStop","_setEnabled","cursor","_reset","__reset","setEnabled","_getEnabled","getEnabled","label","t","gotoAndPlay","Shadow","color","offsetX","offsetY","blur","SpriteSheet","EventDispatcher_constructor","complete","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","_getAnimations","getAnimations","animations","getNumFrames","animation","frames","getAnimation","getFrame","frameIndex","frame","getFrameBounds","images","img","src","naturalWidth","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","image","spacing","margin","count","_calculateFrames","anim","obj","speed","next","undefined","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","clear","G","getRGB","g","getHSL","hue","saturation","lightness","BASE_64","STROKE_CAPS_MAP","STROKE_JOINTS_MAP","_ctx","_getInstructions","_updateInstructions","getInstructions","instructions","draw","instr","exec","drawAsPath","instrs","path","moveTo","MoveTo","lineTo","LineTo","arcTo","radius","ArcTo","arc","startAngle","endAngle","anticlockwise","Arc","quadraticCurveTo","cpx","cpy","QuadraticCurveTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","h","Rect","closePath","ClosePath","beginFill","_setFill","Fill","beginLinearGradientFill","colors","ratios","x0","y0","linearGradient","beginRadialGradientFill","r0","r1","radialGradient","beginBitmapFill","repetition","bitmap","endFill","setStrokeStyle","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","setStrokeDash","segments","offset","StrokeDash","beginStroke","_setStroke","Stroke","beginLinearGradientStroke","beginRadialGradientStroke","beginBitmapStroke","endStroke","curveTo","drawRect","drawRoundRect","drawRoundRectComplex","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","drawCircle","Circle","drawEllipse","Ellipse","drawPolyStar","sides","pointSize","PolyStar","clean","decodePath","str","paramCount","params","base64","charAt","fi","pl","charCount","num","sign","store","unstore","mt","lt","at","bt","qt","cp","lf","rf","bf","ef","ss","sd","s","ls","rs","bs","es","dr","rr","rc","dc","de","dp","commit","active","commitIndex","beginCmd","ll","fill","stroke","BeginPath","beginPath","style","fillStyle","mtx","save","transform","restore","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","setTransform","lineWidth","lineCap","isNaN","lineJoin","setLineDash","EMPTY_SEGMENTS","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","DisplayObject","cacheCanvas","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","filters","mask","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","_MOUSE_EVENTS","suppressCrossDomainErrors","_snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","_hitTestCanvas","_hitTestContext","_getStage","_Stage","getStage","stage","cacheID","isVisible","ignoreCache","cache","updateContext","graphics","getMatrix","clip","globalAlpha","globalCompositeOperation","_applyShadow","options","BitmapCache","define","updateCache","update","uncache","release","getCacheDataURL","getDataURL","localToGlobal","getConcatenatedMatrix","localToLocal","getConcatenatedDisplayProps","hitTest","hit","_testHit","getBounds","_cacheScale","_cacheOffsetX","_cacheOffsetY","getTransformedBounds","_getBounds","setBounds","_cloneProps","_updateState","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","evtObj","getImageData","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","Container","DisplayObject_constructor","children","tickChildren","_getNumChildren","getNumChildren","numChildren","hasContent","DisplayObject_draw","child","addChild","par","silent","_removeChildAt","addChildAt","index","indx","removeChild","good","removeChildAt","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","DisplayObject__tick","mouse","activeListener","currentDepth","_testMask","result","DisplayObject_getBounds","Stage","Container_constructor","autoClear","getElementById","mouseX","mouseY","snapToPixelEnabled","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","_get_nextStage","_set_nextStage","nextStage","tick","toDataURL","backgroundColor","mimeType","fillRect","dataURL","putImageData","enableMouseOver","frequency","clearInterval","_testMouseOver","enable","_eventListeners","_this","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","offX","pageXOffset","scrollLeft","clientLeft","body","offY","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","pointerId","StageGL","Stage_constructor","premultiply","transparent","antialias","preserveBuffer","autoPurge","vocalDebug","_preserveBuffer","_antialias","_transparent","_premultiply","_autoPurge","_viewportWidth","_viewportHeight","_projectionMatrix","_webGLContext","_clearColor","_maxCardsPerBatch","DEFAULT_MAX_BATCH_SIZE","_activeShader","_vertices","_vertexPositionBuffer","_uvs","_uvPositionBuffer","_indices","_textureIndexBuffer","_alphas","_alphaBuffer","_textureDictionary","_textureIDs","_batchTextures","_baseTextures","_batchTextureCount","_lastTextureInsert","_batchID","_drawID","_slotBlacklist","_isDrawing","_lastTrackedCanvas","isCacheControlled","_cacheContainer","_initializeWebGL","buildUVRects","spritesheet","onlyTarget","start","end","uvRect","isWebGLActive","WebGLRenderingContext","VERTEX_PROPERTY_COUNT","INDICIES_PER_CARD","WEBGL_MAX_INDEX_NUM","pow","UV_RECT","COVER_VERT","Float32Array","COVER_UV","COVER_UV_FLIP","REGULAR_VARYING_HEADER","REGULAR_VERTEX_HEADER","REGULAR_FRAGMENT_HEADER","REGULAR_VERTEX_BODY","REGULAR_FRAGMENT_BODY","REGULAR_FRAG_COLOR_NORMAL","REGULAR_FRAG_COLOR_PREMULTIPLY","PARTICLE_VERTEX_BODY","PARTICLE_FRAGMENT_BODY","COVER_VARYING_HEADER","COVER_VERTEX_HEADER","COVER_FRAGMENT_HEADER","COVER_VERTEX_BODY","COVER_FRAGMENT_BODY","_get_isWebGL","_set_autoPurge","_get_autoPurge","Number","isWebGL","depth","stencil","premultipliedAlpha","preserveDrawingBuffer","gl","_fetchWebGLContext","updateSimultaneousTextureCount","getParameter","MAX_TEXTURE_IMAGE_UNITS","_maxTextureSlots","MAX_COMBINED_TEXTURE_IMAGE_UNITS","_createBuffers","_initTextures","disable","DEPTH_TEST","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","clearColor","updateViewport","_batchDraw","purgeTextures","cc","adjust","COLOR_BUFFER_BIT","Stage_clear","context","Stage_draw","cacheDraw","manager","_cacheDraw","protectTextureSlot","lock","getTargetRenderTexture","toggle","__lastRT","__rtA","getRenderBufferTexture","_width","_height","resizeTexture","setTextureParams","__rtB","releaseTexture","item","foundImage","_storeID","_killTextureObject","spriteSheet","dict","success","_fetchShaderProgram","viewport","_projectionMatrixFlip","getFilterShader","filter","targetShader","_builtShader","shaderParamSetup","useProgram","VTX_SHADER_BODY","FRAG_SHADER_BODY","_name","getBaseTexture","ceil","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","renderTexture","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","_renderTexture","_frameBuffer","isPOT","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","setClearColor","output","split","error","viewportWidth","viewportHeight","shaderName","customVTX","customFRAG","targetFrag","targetVtx","vertexShader","_createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","_type","getProgramParameter","LINK_STATUS","getProgramInfoLog","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uvPositionAttribute","samplerUniform","getUniformLocation","uniform1i","uprightUniform","uniform1f","textureIndexAttribute","alphaAttribute","samplers","samplerData","uniform1iv","pMatrixUniform","replace","insert","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","groupCount","groupSize","vertexPositionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","bufferData","DYNAMIC_DRAW","itemSize","numItems","uvPositionBuffer","uvs","textureIndexBuffer","indices","alphaBuffer","alphas","tex","_loadTextureImage","_isCanvas","storeID","_imageData","_insertTextureInBatch","_updateTextureImageData","isNPOT","activeTexture","TEXTURE0","_activeIndex","errString","_invalid","_w","_h","MAX_TEXTURE_SIZE","found","look","batchReason","_drawBuffers","batchCardCount","deleteFramebuffer","deleteTexture","_backupBatchTextures","_backupTextures","sceneGraph","_appendToBatchGroup","shaderBackup","blackListBackup","lastTextureSlot","wBackup","hBackup","container","_drawFilters","_drawWidth","_drawHeight","filterCount","flipY","_drawCover","_multiPass","concatMtx","concatAlpha","_glMtx","cMtx","subL","subT","subR","subB","iMtx","texIndex","useCache","currentFrame","texI","sourceRect","_uvRect","_filterOffX","_filterOffY","offV1","offV2","vertexAttribPointer","FLOAT","bufferSubData","uniformMatrix4fv","FALSE","drawArrays","TRIANGLES","Bitmap","imageOrUri","node","cloneNode","Sprite","frameOrAnimation","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","_normalizeFrame","stop","_goto","advance","fps","DisplayObject__cloneProps","frameDelta","animFrame","_dispatchAnimationEnd","changed","Shape","Text","text","font","textAlign","textBaseline","maxWidth","outline","lineHeight","_workingContext","H_OFFSETS","center","V_OFFSETS","hanging","middle","alphabetic","ideographic","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","getMetrics","lines","vOffset","substr","paint","maxW","hardLines","String","measureText","words","j","jl","wordW","_drawTextLine","strokeText","fillText","BitmapText","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","maxPoolSize","_spritePool","Container_draw","_updateText","Container_getBounds","Container__cloneProps","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","_getSpaceWidth","change","spaceW","lineH","pool","childIndex","numKids","sprite","hasSpace","MovieClip","inited","startPosition","loop","labels","INDEPENDENT","autoReset","frameBounds","useTicks","timeline","Timeline","_synchOffset","_rawPosition","_bound_resolveState","_resolveState","_t","_managed","SINGLE_FRAME","SYNCHED","MovieClipPlugin","install","_getLabels","getLabels","_getCurrentLabel","currentLabel","getCurrentLabel","_getDuration","duration","getDuration","totalFrames","positionOrLabel","independent","_framerate","_updateTimeline","Container__tick","pos","resolve","rawPosition","jump","synced","tl","setPosition","_renderFirstFrame","position","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","_off","Container__getBounds","priority","ID","Tween","_installPlugin","prop","_addPlugin","step","ratio","prev","SpriteSheetUtils","_workingCanvas","extractFrame","addFlippedFrames","mergeAlpha","_flip","v","il","__tmp","fl","sfx","names","al","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","ERR_DIMENSIONS","ERR_RUNNING","addFrame","source","setupFunction","setupData","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","_run","stopAsync","dataFrames","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","DOMElement","htmlElement","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Filter","usesContext","applyFilter","targetCtx","targetX","targetY","imageData","_applyFilter","_cacheDataURLID","_cacheDataURL","getFilterBounds","test","_options","filterBounds","surface","_updateSurface","_drawToCache","_webGLCache","useGL","stageGL","webGL","_applyFilters","BlurFilter","blurX","blurY","quality","Filter_constructor","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","setQuality","getBlurX","getBlurY","setBlurX","setBlurY","getQuality","_getShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_setShader","spread","EDGE","E","factor","reduce","map","currentValue","toFixed","uniform1fv","uniform2f","MUL_TABLE","SHG_TABLE","q","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","stx","mty","sty","ms","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","TEXTURE1","_prepAlphaMap","HTMLCanvasElement","imgData","AlphaMaskFilter","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","DELTA_INDEX","IDENTITY_MATRIX","LENGTH","adjustColor","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","lumR","lumG","lumB","cosVal","sinVal","concat","_fixMatrix","toArray","val","limit","ColorMatrixFilter","mat","colorMatrix","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","EaselJS","version","buildDate"],"sources":["/Users/canozdemir/Downloads/web-based-navigation-rosbridge/node_modules/latest-createjs/lib/easeljs/easeljs.js"],"sourcesContent":["/*!\n* EaselJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function(subclass, superclass) {\n\t\"use strict\";\n\n\tfunction o() { this.constructor = subclass; }\n\to.prototype = superclass.prototype;\n\treturn (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function(subclass, prefix) {\n\t\"use strict\";\n\n\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\tif (supP) {\n\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\tfor (var n in supP) {\n\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t}\n\t}\n\treturn subclass;\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// UID.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n\t * and should not be instantiated.\n\t * @class UID\n\t * @static\n\t **/\n\tfunction UID() {\n\t\tthrow \"UID cannot be instantiated\";\n\t}\n\n\n// private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t **/\n\tUID._nextID = 0;\n\n\n// public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t **/\n\tUID.get = function() {\n\t\treturn UID._nextID++;\n\t};\n\n\n\tcreatejs.UID = UID;\n}());\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function(fallbackMethod, name) {\n\t\"use strict\";\n\treturn function() {\n\t\tvar msg = \"Deprecated property or method '\"+name+\"'. See docs for info.\";\n\t\tconsole && (console.warn ? console.warn(msg) : console.log(msg));\n\t\treturn fallbackMethod && fallbackMethod.apply(this, arguments);\n\t}\n};\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n\tfunction Event(type, bubbles, cancelable) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n\t\tthis.type = type;\n\t\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.target = null;\n\t\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.currentTarget = null;\n\t\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.eventPhase = 0;\n\t\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.bubbles = !!bubbles;\n\t\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.cancelable = !!cancelable;\n\t\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.timeStamp = (new Date()).getTime();\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.defaultPrevented = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.propagationStopped = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.immediatePropagationStopped = false;\n\t\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.removed = false;\n\t}\n\tvar p = Event.prototype;\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n\tp.preventDefault = function() {\n\t\tthis.defaultPrevented = this.cancelable&&true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n\tp.stopPropagation = function() {\n\t\tthis.propagationStopped = true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n\tp.stopImmediatePropagation = function() {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t};\n\t\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n\tp.remove = function() {\n\t\tthis.removed = true;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t};\n\t\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t};\n\n\tcreatejs.Event = Event;\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n\t *\r\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n\t * \r\n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n\t * \r\n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n\t * \r\n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n\t *\r\n\t *      EventDispatcher.initialize(MyClass.prototype);\r\n\t *\r\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n\t *\r\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\r\n\t *      function handlerMethod(event) {\r\n\t *          console.log(event.target + \" Was Clicked\");\r\n\t *      }\r\n\t *\r\n\t * <b>Maintaining proper scope</b><br />\r\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n\t * method to subscribe to events simplifies this.\r\n\t *\r\n\t *      instance.addEventListener(\"click\", function(event) {\r\n\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t *      });\r\n\t *      \r\n\t *      instance.on(\"click\", function(event) {\r\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t *      });\r\n\t * \r\n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n\t * scope.\r\n\t *\r\n\t * <b>Browser support</b>\r\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n\t * requires modern browsers (IE9+).\r\n\t *      \r\n\t *\r\n\t * @class EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction EventDispatcher() {\r\n\t\r\n\t\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _listeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._listeners = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _captureListeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._captureListeners = null;\r\n\t}\r\n\tvar p = EventDispatcher.prototype;\r\n\r\n// static public methods:\r\n\t/**\r\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t * \r\n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t * \r\n\t * @method initialize\r\n\t * @static\r\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t * prototype.\r\n\t **/\r\n\tEventDispatcher.initialize = function(target) {\r\n\t\ttarget.addEventListener = p.addEventListener;\r\n\t\ttarget.on = p.on;\r\n\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\r\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\ttarget.willTrigger = p.willTrigger;\r\n\t};\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t * multiple callbacks getting fired.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t *      function handleClick(event) {\r\n\t *         // Click happened.\r\n\t *      }\r\n\t *\r\n\t * @method addEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t **/\r\n\tp.addEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners;\r\n\t\tif (useCapture) {\r\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t} else {\r\n\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t}\r\n\t\tvar arr = listeners[type];\r\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\telse { arr.push(listener); }\r\n\t\treturn listener;\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t * \r\n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t * to `on` with the same params will create multiple listeners.\r\n\t * \r\n\t * <h4>Example</h4>\r\n\t * \r\n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t * \t\tfunction handleClick(evt, data) {\r\n\t * \t\t\tdata.count -= 1;\r\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t * \t\t\tif (data.count == 0) {\r\n\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t * \t\t\t\t// alternately: evt.remove();\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t * \r\n\t * @method on\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t **/\r\n\tp.on = function(type, listener, scope, once, data, useCapture) {\r\n\t\tif (listener.handleEvent) {\r\n\t\t\tscope = scope||listener;\r\n\t\t\tlistener = listener.handleEvent;\r\n\t\t}\r\n\t\tscope = scope||this;\r\n\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\t\tlistener.call(scope, evt, data);\r\n\t\t\t\tonce&&evt.remove();\r\n\t\t\t}, useCapture);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified event listener.\r\n\t *\r\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t * closure will not work.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t *\r\n\t * @method removeEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.removeEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\tif (!listeners) { return; }\r\n\t\tvar arr = listeners[type];\r\n\t\tif (!arr) { return; }\r\n\t\tfor (var i=0,l=arr.length; i<l; i++) {\r\n\t\t\tif (arr[i] == listener) {\r\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t * .on method.\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t *\r\n\t * @method off\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.off = p.removeEventListener;\r\n\r\n\t/**\r\n\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Remove all listeners\r\n\t *      displayObject.removeAllEventListeners();\r\n\t *\r\n\t *      // Remove all click listeners\r\n\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t *\r\n\t * @method removeAllEventListeners\r\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t **/\r\n\tp.removeAllEventListeners = function(type) {\r\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\telse {\r\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Dispatches the specified event to all listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Use a string event\r\n\t *      this.dispatchEvent(\"complete\");\r\n\t *\r\n\t *      // Use an Event instance\r\n\t *      var event = new createjs.Event(\"progress\");\r\n\t *      this.dispatchEvent(event);\r\n\t *\r\n\t * @method dispatchEvent\r\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t **/\r\n\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\r\n\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\r\n\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\teventObj = eventObj.clone();\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\r\n\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t} else {\r\n\t\t\tvar top=this, list=[top];\r\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\tvar i, l=list.length;\r\n\r\n\t\t\t// capture & atTarget\r\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t}\r\n\t\t\t// bubbling\r\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !eventObj.defaultPrevented;\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type.\r\n\t * @method hasEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.hasEventListener = function(type) {\r\n\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t * \r\n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t * event flow for a listener, not just this object.\r\n\t * @method willTrigger\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.willTrigger = function(type) {\r\n\t\tvar o = this;\r\n\t\twhile (o) {\r\n\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\to = o.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[EventDispatcher]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _dispatchEvent\r\n\t * @param {Object | Event} eventObj\r\n\t * @param {Object} eventPhase\r\n\t * @protected\r\n\t **/\r\n\tp._dispatchEvent = function(eventObj, eventPhase) {\r\n\t\tvar l, arr, listeners = (eventPhase <= 2) ? this._captureListeners : this._listeners;\r\n\t\tif (eventObj && listeners && (arr = listeners[eventObj.type]) && (l=arr.length)) {\r\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\ttry { eventObj.eventPhase = eventPhase|0; } catch (e) {}\r\n\t\t\teventObj.removed = false;\r\n\t\t\t\r\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\tvar o = arr[i];\r\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\telse { o(eventObj); }\r\n\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (eventPhase === 2) { this._dispatchEvent(eventObj, 2.1); }\r\n\t};\r\n\r\n\r\n\tcreatejs.EventDispatcher = EventDispatcher;\r\n}());\n\n//##############################################################################\n// Ticker.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n\t * event to be notified when a set time interval has elapsed.\n\t *\n\t * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n\t * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n\t * can not be instantiated.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          // Actions carried out each tick (aka frame)\n\t *          if (!event.paused) {\n\t *              // Actions carried out when the Ticker is not paused.\n\t *          }\n\t *      }\n\t *\n\t * @class Ticker\n\t * @uses EventDispatcher\n\t * @static\n\t **/\n\tfunction Ticker() {\n\t\tthrow \"Ticker cannot be instantiated.\";\n\t}\n\n\n// constants:\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF_SYNCHED\n\t * @static\n\t * @type {String}\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n\tTicker.RAF_SYNCHED = \"synched\";\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF\n\t * @static\n\t * @type {String}\n\t * @default \"raf\"\n\t * @readonly\n\t **/\n\tTicker.RAF = \"raf\";\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t * @property TIMEOUT\n\t * @static\n\t * @type {String}\n\t * @default \"timeout\"\n\t * @readonly\n\t **/\n\tTicker.TIMEOUT = \"timeout\";\n\n\n// static events:\n\t/**\n\t * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n\t * {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          console.log(\"Paused:\", event.paused, event.delta);\n\t *      }\n\t *\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Boolean} paused Indicates whether the ticker is currently paused.\n\t * @param {Number} delta The time elapsed in ms since the last tick.\n\t * @param {Number} time The total time in ms since Ticker was initialized.\n\t * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n\t * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n\t * @since 0.6.0\n\t */\n\n\n// public static properties:\n\t/**\n\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n\t * {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}}, and\n\t * {{#crossLink \"Ticker/RAF_SYNCHED:property\"}}{{/crossLink}} for mode details.\n\t * @property timingMode\n\t * @static\n\t * @type {String}\n\t * @default Ticker.TIMEOUT\n\t **/\n\tTicker.timingMode = null;\n\n\t/**\n\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t * (ex. maxDelta=50 when running at 40fps).\n\t * \n\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t * when using both delta and other values.\n\t * \n\t * If 0, there is no maximum.\n\t * @property maxDelta\n\t * @static\n\t * @type {number}\n\t * @default 0\n\t */\n\tTicker.maxDelta = 0;\n\t\n\t/**\n\t * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n\t * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n\t * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n\t * info.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      createjs.Ticker.paused = true;\n\t *      function handleTick(event) {\n\t *          console.log(event.paused,\n\t *          \tcreatejs.Ticker.getTime(false),\n\t *          \tcreatejs.Ticker.getTime(true));\n\t *      }\n\t *\n\t * @property paused\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n\tTicker.paused = false;\n\n\n// mix-ins:\n\t// EventDispatcher methods:\n\tTicker.removeEventListener = null;\n\tTicker.removeAllEventListeners = null;\n\tTicker.dispatchEvent = null;\n\tTicker.hasEventListener = null;\n\tTicker._listeners = null;\n\tcreatejs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n\tTicker._addEventListener = Ticker.addEventListener;\n\tTicker.addEventListener = function() {\n\t\t!Ticker._inited&&Ticker.init();\n\t\treturn Ticker._addEventListener.apply(Ticker, arguments);\n\t};\n\n\n// private static properties:\n\t/**\n\t * @property _inited\n\t * @static\n\t * @type {Boolean}\n\t * @private\n\t **/\n\tTicker._inited = false;\n\n\t/**\n\t * @property _startTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._startTime = 0;\n\n\t/**\n\t * @property _pausedTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._pausedTime=0;\n\n\t/**\n\t * The number of ticks that have passed\n\t * @property _ticks\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._ticks = 0;\n\n\t/**\n\t * The number of ticks that have passed while Ticker has been paused\n\t * @property _pausedTicks\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._pausedTicks = 0;\n\n\t/**\n\t * @property _interval\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._interval = 50;\n\n\t/**\n\t * @property _lastTime\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._lastTime = 0;\n\n\t/**\n\t * @property _times\n\t * @static\n\t * @type {Array}\n\t * @private\n\t **/\n\tTicker._times = null;\n\n\t/**\n\t * @property _tickTimes\n\t * @static\n\t * @type {Array}\n\t * @private\n\t **/\n\tTicker._tickTimes = null;\n\n\t/**\n\t * Stores the timeout or requestAnimationFrame id.\n\t * @property _timerId\n\t * @static\n\t * @type {Number}\n\t * @private\n\t **/\n\tTicker._timerId = null;\n\t\n\t/**\n\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t * if that property changed and a tick hasn't fired.\n\t * @property _raf\n\t * @static\n\t * @type {Boolean}\n\t * @private\n\t **/\n\tTicker._raf = true;\n\t\n\n// static getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method _setInterval\n\t * @private\n\t * @static\n\t * @param {Number} interval\n\t **/\n\tTicker._setInterval = function(interval) {\n\t\tTicker._interval = interval;\n\t\tif (!Ticker._inited) { return; }\n\t\tTicker._setupTick();\n\t};\n\t// Ticker.setInterval is @deprecated. Remove for 1.1+\n\tTicker.setInterval = createjs.deprecate(Ticker._setInterval, \"Ticker.setInterval\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method _getInterval\n\t * @private\n\t * @static\n\t * @return {Number}\n\t **/\n\tTicker._getInterval = function() {\n\t\treturn Ticker._interval;\n\t};\n\t// Ticker.getInterval is @deprecated. Remove for 1.1+\n\tTicker.getInterval = createjs.deprecate(Ticker._getInterval, \"Ticker.getInterval\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method _setFPS\n\t * @private\n\t * @static\n\t * @param {Number} value\n\t **/\n\tTicker._setFPS = function(value) {\n\t\tTicker._setInterval(1000/value);\n\t};\n\t// Ticker.setFPS is @deprecated. Remove for 1.1+\n\tTicker.setFPS = createjs.deprecate(Ticker._setFPS, \"Ticker.setFPS\");\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method _getFPS\n\t * @static\n\t * @private\n\t * @return {Number}\n\t **/\n\tTicker._getFPS = function() {\n\t\treturn 1000/Ticker._interval;\n\t};\n\t// Ticker.getFPS is @deprecated. Remove for 1.1+\n\tTicker.getFPS = createjs.deprecate(Ticker._getFPS, \"Ticker.getFPS\");\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t * @property interval\n\t * @static\n\t * @type {Number}\n\t **/\n\t \n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t * @property framerate\n\t * @static\n\t * @type {Number}\n\t **/\n\ttry {\n\t\tObject.defineProperties(Ticker, {\n\t\t\tinterval: { get: Ticker._getInterval, set: Ticker._setInterval },\n\t\t\tframerate: { get: Ticker._getFPS, set: Ticker._setFPS }\n\t\t});\n\t} catch (e) { console.log(e); }\n\n\n// public static methods:\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t * @method init\n\t * @static\n\t **/\n\tTicker.init = function() {\n\t\tif (Ticker._inited) { return; }\n\t\tTicker._inited = true;\n\t\tTicker._times = [];\n\t\tTicker._tickTimes = [];\n\t\tTicker._startTime = Ticker._getTime();\n\t\tTicker._times.push(Ticker._lastTime = 0);\n\t\tTicker.interval = Ticker._interval;\n\t};\n\t\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t * @method reset\n\t * @static\n\t **/\n\tTicker.reset = function() {\n\t\tif (Ticker._raf) {\n\t\t\tvar f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf&&f(Ticker._timerId);\n\t\t} else {\n\t\t\tclearTimeout(Ticker._timerId);\n\t\t}\n\t\tTicker.removeAllEventListeners(\"tick\");\n\t\tTicker._timerId = Ticker._times = Ticker._tickTimes = null;\n\t\tTicker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n\t\tTicker._inited = false;\n\t};\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack. \n\t * \n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} returns 10fps, which\n\t * indicates an average of 100ms between the end of one tick and the end of the next. However, {{#crossLink \"Ticker/getMeasuredTickTime\"}}{{/crossLink}}\n\t * returns 20ms. This would indicate that something other than the tick is using ~80ms (another script, DOM\n\t * rendering, etc).\n\t * @method getMeasuredTickTime\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {Number} The average time spent in a tick in milliseconds.\n\t **/\n\tTicker.getMeasuredTickTime = function(ticks) {\n\t\tvar ttl=0, times=Ticker._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks||(Ticker._getFPS()|0));\n\t\tfor (var i=0; i<ticks; i++) { ttl += times[i]; }\n\t\treturn ttl/ticks;\n\t};\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t * @method getMeasuredFPS\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t **/\n\tTicker.getMeasuredFPS = function(ticks) {\n\t\tvar times = Ticker._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length-1, ticks||(Ticker._getFPS()|0));\n\t\treturn 1000/((times[0]-times[ticks])/ticks);\n\t};\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t * @method getTime\n\t * @static\n\t * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t **/\n\tTicker.getTime = function(runTime) {\n\t\treturn Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n\t};\n\n\t/**\n\t * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object.\n\t * @method getEventTime\n\t * @static\n\t * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tTicker.getEventTime = function(runTime) {\n\t\treturn Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n\t};\n\t\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t * @method getTicks\n\t * @static\n\t * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value. The default value is false.\n\t * @return {Number} of ticks that have been broadcast.\n\t **/\n\tTicker.getTicks = function(pauseable) {\n\t\treturn  Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n\t};\n\n\n// private static methods:\n\t/**\n\t * @method _handleSynch\n\t * @static\n\t * @private\n\t **/\n\tTicker._handleSynch = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval-1)*0.97) {\n\t\t\tTicker._tick();\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleRAF\n\t * @static\n\t * @private\n\t **/\n\tTicker._handleRAF = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\t\tTicker._tick();\n\t};\n\n\t/**\n\t * @method _handleTimeout\n\t * @static\n\t * @private\n\t **/\n\tTicker._handleTimeout = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\t\tTicker._tick();\n\t};\n\n\t/**\n\t * @method _setupTick\n\t * @static\n\t * @private\n\t **/\n\tTicker._setupTick = function() {\n\t\tif (Ticker._timerId != null) { return; } // avoid duplicates\n\n\t\tvar mode = Ticker.timingMode;\n\t\tif (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n\t\t\tvar f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tTicker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n\t\t\t\tTicker._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTicker._raf = false;\n\t\tTicker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n\t};\n\n\t/**\n\t * @method _tick\n\t * @static\n\t * @private\n\t **/\n\tTicker._tick = function() {\n\t\tvar paused = Ticker.paused;\n\t\tvar time = Ticker._getTime();\n\t\tvar elapsedTime = time-Ticker._lastTime;\n\t\tTicker._lastTime = time;\n\t\tTicker._ticks++;\n\t\t\n\t\tif (paused) {\n\t\t\tTicker._pausedTicks++;\n\t\t\tTicker._pausedTime += elapsedTime;\n\t\t}\n\t\t\n\t\tif (Ticker.hasEventListener(\"tick\")) {\n\t\t\tvar event = new createjs.Event(\"tick\");\n\t\t\tvar maxDelta = Ticker.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time-Ticker._pausedTime;\n\t\t\tTicker.dispatchEvent(event);\n\t\t}\n\t\t\n\t\tTicker._tickTimes.unshift(Ticker._getTime()-time);\n\t\twhile (Ticker._tickTimes.length > 100) { Ticker._tickTimes.pop(); }\n\n\t\tTicker._times.unshift(time);\n\t\twhile (Ticker._times.length > 100) { Ticker._times.pop(); }\n\t};\n\n\t/**\n\t * @method _getTime\n\t * @static\n\t * @private\n\t **/\n\tvar w=window, now=w.performance.now || w.performance.mozNow || w.performance.msNow || w.performance.oNow || w.performance.webkitNow;\n\tTicker._getTime = function() {\n\t\treturn ((now&&now.call(w.performance))||(new Date().getTime())) - Ticker._startTime;\n\t};\n\n\n\tcreatejs.Ticker = Ticker;\n}());\n\n//##############################################################################\n// VideoBuffer.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n\t * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n\t * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n\t * \n\t * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n\t * \tvar myBitmap = new Bitmap(myBuffer);\n\t * \n\t * @class VideoBuffer\n\t * @param {HTMLVideoElement} video The HTML video element to buffer.\n\t * @constructor\n\t **/\n\tfunction VideoBuffer(video) {\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n\t\t * @property readyState\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.readyState = video.readyState;\n\t\t\n\t\t/**\n\t\t * @property _video\n\t\t * @protected\n\t\t * @type {HTMLVideoElement}\n\t\t * @default 0\n\t\t **/\n\t\tthis._video = video;\n\t\t\n\t\t/**\n\t\t * @property _canvas\n\t\t * @protected\n\t\t * @type {HTMLCanvasElement}\n\t\t * @default 0\n\t\t **/\n\t\tthis._canvas = null;\n\t\t\n\t\t/**\n\t\t * @property _lastTime\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t **/\n\t\tthis._lastTime = -1;\n\t\t\n\t\tif (this.readyState < 2) { video.addEventListener(\"canplaythrough\", this._videoReady.bind(this)); } //once:true isn't supported everywhere, but its a non-critical optimization here.\n\t}\n\tvar p = VideoBuffer.prototype;\n\t\n\t\n// public methods:\n\t/**\n\t * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n\t * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t * @method getImage\n\t **/\n\tp.getImage = function() {\n\t\tif (this.readyState < 2) { return; }\n\t\tvar canvas=this._canvas, video = this._video;\n\t\tif (!canvas) {\n\t\t\tcanvas = this._canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\tcanvas.width = video.videoWidth;\n\t\t\tcanvas.height = video.videoHeight;\n\t\t}\n\t\tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\tctx.clearRect(0,0,canvas.width,canvas.height);\n\t\t\tctx.drawImage(video,0,0,canvas.width,canvas.height);\n\t\t\tthis._lastTime = video.currentTime;\n\t\t}\n\t\treturn canvas;\n\t};\n\t\n// private methods:\n\t/**\n\t * @method _videoReady\n\t * @protected\n\t **/\n\tp._videoReady = function() {\n\t\tthis.readyState = 2;\n\t};\n\n\n\tcreatejs.VideoBuffer = VideoBuffer;\n}());\n\n//##############################################################################\n// MouseEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n\t * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n\t * @class MouseEvent\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t * @extends Event\n\t * @constructor\n\t **/\n\tfunction MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tthis.Event_constructor(type, bubbles, cancelable);\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n\t\tthis.stageX = stageX;\n\t\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t **/\n\t\tthis.stageY = stageY;\n\t\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\t\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\t\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t **/\n\t\tthis.nativeEvent = nativeEvent;\n\t\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\t\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\t\t\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t * \n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\tvar p = createjs.extend(MouseEvent, createjs.Event);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n// getter / setters:\n\t/**\n\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localX\n\t * @type {Number}\n\t * @readonly\n\t */\n\tp._get_localX = function() {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t};\n\t\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n\tp._get_localY = function() {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t};\n\t\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tp._get_isTouch = function() {\n\t\treturn this.pointerID !== -1;\n\t};\n\t\n\t\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tlocalX: { get: p._get_localX },\n\t\t\tlocalY: { get: p._get_localY },\n\t\t\tisTouch: { get: p._get_isTouch }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[MouseEvent (type=\"+this.type+\" stageX=\"+this.stageX+\" stageY=\"+this.stageY+\")]\";\n\t};\n\n\n\tcreatejs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n}());\n\n//##############################################################################\n// Matrix2D.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\t *\n\t * This matrix can be visualized as:\n\t *\n\t * \t[ a  c  tx\n\t * \t  b  d  ty\n\t * \t  0  0  1  ]\n\t *\n\t * Note the locations of b and c.\n\t *\n\t * @class Matrix2D\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @constructor\n\t **/\n\tfunction Matrix2D(a, b, c, d, tx, ty) {\n\t\tthis.setValues(a,b,c,d,tx,ty);\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Matrix2D.prototype;\n\n// constants:\n\t/**\n\t * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n\t * @property DEG_TO_RAD\n\t * @static\n\t * @final\n\t * @type Number\n\t * @readonly\n\t **/\n\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\n\n// static public properties:\n\t/**\n\t * An identity matrix, representing a null transformation.\n\t * @property identity\n\t * @static\n\t * @type Matrix2D\n\t * @readonly\n\t **/\n\tMatrix2D.identity = null; // set at bottom of class definition.\n\t\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance. \n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n\tp.setValues = function(a, b, c, d, tx, ty) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = (a == null) ? 1 : a;\n\t\tthis.b = b || 0;\n\t\tthis.c = c || 0;\n\t\tthis.d = (d == null) ? 1 : d;\n\t\tthis.tx = tx || 0;\n\t\tthis.ty = ty || 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.append = function(a, b, c, d, tx, ty) {\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\t\tvar c1 = this.c;\n\t\tvar d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prepend = function(a, b, c, d, tx, ty) {\n\t\tvar a1 = this.a;\n\t\tvar c1 = this.c;\n\t\tvar tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.appendMatrix = function(matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prependMatrix = function(matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t * \n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.appendTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tif (rotation%360) {\n\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(r);\n\t\t\tvar sin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\t\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c; \n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t * \t\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prependTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tif (rotation%360) {\n\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(r);\n\t\t\tvar sin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.rotate = function(angle) {\n\t\tangle = angle*Matrix2D.DEG_TO_RAD;\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tp.skew = function(skewX, skewY) {\n\t\tskewX = skewX*Matrix2D.DEG_TO_RAD;\n\t\tskewY = skewY*Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.scale = function(x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.translate = function(x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.identity = function() {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.invert = function() {\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\t\tvar c1 = this.c;\n\t\tvar d1 = this.d;\n\t\tvar tx1 = this.tx;\n\t\tvar n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t **/\n\tp.isIdentity = function() {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t};\n\t\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t **/\n\tp.equals = function(matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t};\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t **/\n\tp.transformPoint = function(x, y, pt) {\n\t\tpt = pt||{};\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t};\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tp.decompose = function(target) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\tif (target == null) { target = {}; }\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tvar skewX = Math.atan2(-this.c, this.d);\n\t\tvar skewY = Math.atan2(this.b, this.a);\n\n\t\tvar delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tp.copy = function(matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Matrix2D (a=\"+this.a+\" b=\"+this.b+\" c=\"+this.c+\" d=\"+this.d+\" tx=\"+this.tx+\" ty=\"+this.ty+\")]\";\n\t};\n\n\t// this has to be populated after the class is defined:\n\tMatrix2D.identity = new Matrix2D();\n\n\n\tcreatejs.Matrix2D = Matrix2D;\n}());\n\n//##############################################################################\n// DisplayProps.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * Used for calculating and encapsulating display related properties.\n\t * @class DisplayProps\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t * @constructor\n\t **/\n\tfunction DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t **/\n\t\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t **/\n\t\t\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t **/\n\t}\n\tvar p = DisplayProps.prototype;\n\n// initialization:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible == null ? true : !!visible;\n\t\tthis.alpha = alpha == null ? 1 : alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new createjs.Matrix2D();\n\t\treturn this;\n\t};\n\n// public methods:\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.append = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t * \t\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.prepend = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.identity = function() {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t};\n\n// private methods:\n\n\tcreatejs.DisplayProps = DisplayProps;\n})();\n\n//##############################################################################\n// Point.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents a point on a 2 dimensional x / y coordinate system.\n\t *\n\t * <h4>Example</h4>\n\t * \n\t *      var point = new createjs.Point(0, 100);\n\t * \n\t * @class Point\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t **/\n\tfunction Point(x, y) {\n\t \tthis.setValues(x, y);\n\t \t\n\t \t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Point.prototype;\n\t\n// public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function(x, y) {\n\t\tthis.x = x||0;\n\t\tthis.y = y||0;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.copy = function(point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Point(this.x, this.y);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Point (x=\"+this.x+\" y=\"+this.y+\")]\";\n\t};\n\t\n\t\n\tcreatejs.Point = Point;\n}());\n\n//##############################################################################\n// Rectangle.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n\t *\n\t * @class Rectangle\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @constructor\n\t **/\n\tfunction Rectangle(x, y, width, height) {\n\t\tthis.setValues(x, y, width, height);\n\t\t\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Rectangle.prototype;\n\n// public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function(x, y, width, height) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x||0;\n\t\tthis.y = y||0;\n\t\tthis.width = width||0;\n\t\tthis.height = height||0;\n\t\treturn this;\n\t};\n\t\n\t/** \n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.extend = function(x, y, width, height) {\n\t\twidth = width||0;\n\t\theight = height||0;\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t};\n\t\n\t/** \n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.pad = function(top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.copy = function(rectangle) {\n\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t};\n\t\n\t/** \n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tp.contains = function(x, y, width, height) {\n\t\twidth = width||0;\n\t\theight = height||0;\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t};\n\t\n\t/** \n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n\tp.union = function(rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t};\n\t\n\t/** \n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tp.intersection = function(rect) {\n\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t};\n\t\n\t/** \n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tp.intersects = function(rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t};\n\t\n\t/** \n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tp.isEmpty = function() {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Rectangle (x=\"+this.x+\" y=\"+this.y+\" width=\"+this.width+\" height=\"+this.height+\")]\";\n\t};\n\t\n\t\n\tcreatejs.Rectangle = Rectangle;\n}());\n\n//##############################################################################\n// ButtonHelper.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n\t * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n\t * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\t *\n\t * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n\t * garbage collection.\n\t * \n\t * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n\t *      myInstance.addEventListener(\"click\", handleClick);\n\t *      function handleClick(event) {\n\t *          // Click Happened.\n\t *      }\n\t *\n\t * @class ButtonHelper\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t * @constructor\n\t */\n\tfunction ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t **/\n\t\tthis.target = target;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.overLabel = overLabel == null ? \"over\" : overLabel;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.outLabel = outLabel == null ? \"out\" : outLabel;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.downLabel = downLabel == null ? \"down\" : downLabel;\n\t\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t **/\n\t\tthis.play = play;\n\t\t\n\t\t\n\t//  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._isPressed = false;\n\t\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._isOver = false;\n\t\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._enabled = false;\n\t\t\n\t// setup:\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\tvar p = ButtonHelper.prototype;\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method setEnabled\n\t * @param {Boolean} value The enabled property to set the instance to.\n\t * @[rptected\n\t * @protected\n\t **/\n\tp._setEnabled = function(value) {\n\t\tif (value == this._enabled) { return; }\n\t\tvar o = this.target;\n\t\tthis._enabled = value;\n\t\tif (value) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t};\n\t// ButtonHelper.setEnabled is @deprecated. Remove for 1.1+\n\tp.setEnabled = createjs.deprecate(p._setEnabled, \"ButtonHelper.setEnabled\");\n\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method getEnabled\n\t * @protected\n\t * @return {Boolean}\n\t **/\n\tp._getEnabled = function() {\n\t\treturn this._enabled;\n\t};\n\t// ButtonHelper.getEnabled is @deprecated. Remove for 1.1+\n\tp.getEnabled = createjs.deprecate(p._getEnabled, \"ButtonHelper.getEnabled\");\n\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tenabled: { get: p._getEnabled, set: p._setEnabled }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[ButtonHelper]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t **/\n\tp.handleEvent = function(evt) {\n\t\tvar label, t = this.target, type = evt.type;\n\t\tif (type == \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type == \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type == \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t};\n\t\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t **/\n\tp._reset = function() {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tvar p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t};\n\n\n\tcreatejs.ButtonHelper = ButtonHelper;\n}());\n\n//##############################################################################\n// Shadow.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n\t * via its <code>shadow</code> property.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n\t *\n\t * @class Shadow\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t **/\n\tfunction Shadow(color, offsetX, offsetY, blur) {\n\t\t\n\t\t\n\t// public properties:\n\t\t/** \n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default null\n\t\t */\n\t\tthis.color = color||\"black\";\n\t\n\t\t/** The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX||0;\n\t\n\t\t/** The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY||0;\n\t\n\t\t/** The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur||0;\n\t}\n\tvar p = Shadow.prototype;\n\n// static public properties:\n\t/**\n\t * An identity shadow object (all properties are set to 0).\n\t * @property identity\n\t * @type Shadow\n\t * @static\n\t * @final\n\t * @readonly\n\t **/\n\tShadow.identity = new Shadow(\"transparent\", 0, 0, 0);\n\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Shadow]\";\n\t};\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t};\n\t\n\n\tcreatejs.Shadow = Shadow;\n}());\n\n//##############################################################################\n// SpriteSheet.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n\t * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n\t * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\t *\n\t * The data passed to the SpriteSheet constructor defines:\n\t * <ol>\n\t * \t<li> The source image or images to use.</li>\n\t * \t<li> The positions of individual image frames.</li>\n\t * \t<li> Sequences of frames that form named animations. Optional.</li>\n\t * \t<li> The target playback framerate. Optional.</li>\n\t * </ol>\n\t * <h3>SpriteSheet Format</h3>\n\t * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n\t * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\t *\n\t * <h4>images</h4>\n\t * An array of source images. Images can be either an HTMlimage\n\t * instance, or a uri to an image. The former is recommended to control preloading.\n\t *\n\t * \timages: [image1, \"path/to/image2.png\"],\n\t *\n\t * <h4>frames</h4>\n\t * Defines the individual frames. There are two supported formats for frame data:\n\t * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n\t * and `count` properties.\n\t *\n\t * <ul>\n\t *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n\t *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n\t *  <li>`spacing` indicate the spacing between frames</li>\n\t *  <li>`margin` specify the margin around the image(s)</li>\n\t *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n\t *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n\t *  indexes based on their position in the source images (left to right, top to bottom).</li>\n\t * </ul>\n\t *\n\t *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\t *\n\t * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n\t * with 4 required and 3 optional entries, in the order:\n\t *\n\t * <ul>\n\t *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n\t *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n\t *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n\t * </ul>\n\t *\n\t * \tframes: [\n\t * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t * \t\t[64, 0, 96, 64],\n\t * \t\t[0, 0, 64, 64, 1, 32, 32]\n\t * \t\t// etc.\n\t * \t]\n\t *\n\t * <h4>animations</h4>\n\t * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n\t * animation of the same name. Each animation must specify the frames to play, and may\n\t * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n\t * the name of the `next` animation to sequence to after it completes.\n\t *\n\t * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n\t * <ol>\n\t * \t<li>for a single frame animation, you can simply specify the frame index\n\t *\n\t * \t\tanimations: {\n\t * \t\t\tsit: 7\n\t * \t\t}\n\t *\n\t * </li>\n\t * <li>\n\t *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\t// start, end, next*, speed*\n\t * \t\t\trun: [0, 8],\n\t * \t\t\tjump: [9, 12, \"run\", 2]\n\t * \t\t}\n\t *\n\t *  </li>\n\t *  <li>\n\t *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n\t *     indexes to play in order. The object can also specify `next` and `speed` properties.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\twalk: {\n\t * \t\t\t\tframes: [1,2,3,3,2,1]\n\t * \t\t\t},\n\t * \t\t\tshoot: {\n\t * \t\t\t\tframes: [1,4,5,6],\n\t * \t\t\t\tnext: \"walk\",\n\t * \t\t\t\tspeed: 0.5\n\t * \t\t\t}\n\t * \t\t}\n\t *\n\t *  </li>\n\t * </ol>\n\t * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n\t * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n\t * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\t *\n\t * <h4>framerate</h4>\n\t * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n\t * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\t *\n\t * \t\tframerate: 20\n\t *\n\t * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t *\n\t * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t * \t\tfunction handleTick(event) {\n\t *\t\t\tstage.update(event);\n\t *\t\t}\n\t *\n\t * <h3>Example</h3>\n\t * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n\t * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n\t * sequencing back to run.\n\t *\n\t * \t\tvar data = {\n\t * \t\t\timages: [\"sprites.jpg\"],\n\t * \t\t\tframes: {width:50, height:50},\n\t * \t\t\tanimations: {\n\t * \t\t\t\tstand:0,\n\t * \t\t\t\trun:[1,5],\n\t * \t\t\t\tjump:[6,8,\"run\"]\n\t * \t\t\t}\n\t * \t\t};\n\t * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\t *\n\t * <h3>Generating SpriteSheet Images</h3>\n\t * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n\t * coordinates manually, however there are a number of tools that facilitate this.\n\t * <ul>\n\t *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n\t *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n\t *     EaselJS support.\n\t *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n\t * </ul>\n\t *\n\t * <h3>Cross Origin Issues</h3>\n\t * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n\t * using:\n\t * <ul>\n\t *     <li>a mouse</li>\n\t *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n\t *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n\t *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n\t * </ul>\n\t * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n\t * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\t *\n\t * \t\tvar image = new Image();\n\t * \t\timg.crossOrigin=\"Anonymous\";\n\t * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\t *\n\t * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n\t * support cross-origin requests, or this will not work. For more information, check out\n\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n\t *\n\t * @class SpriteSheet\n\t * @constructor\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @extends EventDispatcher\n\t **/\n\tfunction SpriteSheet(data) {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t\t// public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t **/\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t **/\n\t\tthis.framerate = 0;\n\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t **/\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._margin = 0;\n\n\t\t// setup:\n\t\tthis._parseData(data);\n\t}\n\tvar p = createjs.extend(SpriteSheet, createjs.EventDispatcher);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// events:\n\t/**\n\t * Dispatched when all images are loaded.  Note that this only fires if the images\n\t * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n\t * to prior to adding a listener. Ex.\n\t *\n\t * \tvar sheet = new createjs.SpriteSheet(data);\n\t * \tif (!sheet.complete) {\n\t * \t\t// not preloaded, listen for the complete event:\n\t * \t\tsheet.addEventListener(\"complete\", handler);\n\t * \t}\n\t *\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n\t * when doing on-demand rendering.\n\t * @event getframe\n\t * @param {Number} index The frame index.\n\t * @param {Object} frame The frame object that getFrame will return.\n\t */\n\n\t/**\n\t * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n\t * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n\t * event once all images are finished processing, even if an error is encountered.\n\t * @event error\n\t * @param {String} src The source of the image that failed to load.\n\t * @since 0.8.2\n\t */\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n\t * @method _getAnimations\n\t * @protected\n\t * @return {Array}\n\t **/\n\tp._getAnimations = function() {\n\t\treturn this._animations.slice();\n\t};\n\t// SpriteSheet.getAnimations is @deprecated. Remove for 1.1+\n\tp.getAnimations = createjs.deprecate(p._getAnimations, \"SpriteSheet.getAnimations\");\n\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tanimations: { get: p._getAnimations }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tp.getNumFrames = function(animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tvar data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t};\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t **/\n\tp.getAnimation = function(name) {\n\t\treturn this._data[name];\n\t};\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t **/\n\tp.getFrame = function(frameIndex) {\n\t\tvar frame;\n\t\tif (this._frames && (frame=this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t};\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t **/\n\tp.getFrameBounds = function(frameIndex, rectangle) {\n\t\tvar frame = this.getFrame(frameIndex);\n\t\treturn frame ? (rectangle||new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[SpriteSheet]\";\n\t};\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t};\n\n// private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t **/\n\tp._parseData = function(data) {\n\t\tvar i,l,o,a;\n\t\tif (data == null) { return; }\n\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images && (l=data.images.length) > 0) {\n\t\t\ta = this._images = [];\n\t\t\tfor (i=0; i<l; i++) {\n\t\t\t\tvar img = data.images[i];\n\t\t\t\tif (typeof img == \"string\") {\n\t\t\t\t\tvar src = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\t(function(o, src) { img.onload = function() { o._handleImageLoad(src); } })(this, src);\n\t\t\t\t\t(function(o, src) { img.onerror = function() { o._handleImageError(src); } })(this, src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames == null) { // nothing\n\t\t} else if (Array.isArray(data.frames)) {\n\t\t\tthis._frames = [];\n\t\t\ta = data.frames;\n\t\t\tfor (i=0,l=a.length;i<l;i++) {\n\t\t\t\tvar arr = a[i];\n\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new createjs.Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t}\n\t\t} else {\n\t\t\to = data.frames;\n\t\t\tthis._frameWidth = o.width;\n\t\t\tthis._frameHeight = o.height;\n\t\t\tthis._regX = o.regX||0;\n\t\t\tthis._regY = o.regY||0;\n\t\t\tthis._spacing = o.spacing||0;\n\t\t\tthis._margin = o.margin||0;\n\t\t\tthis._numFrames = o.count;\n\t\t\tif (this._loadCount == 0) { this._calculateFrames(); }\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif ((o=data.animations) != null) {\n\t\t\tthis._data = {};\n\t\t\tvar name;\n\t\t\tfor (name in o) {\n\t\t\t\tvar anim = {name:name};\n\t\t\t\tvar obj = o[name];\n\t\t\t\tif (typeof obj == \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length == 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tvar frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames == \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next == name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t **/\n\tp._handleImageLoad = function(src) {\n\t\tif (--this._loadCount == 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n\tp._handleImageError = function (src) {\n\t\tvar errorEvent = new createjs.Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount == 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t};\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t **/\n\tp._calculateFrames = function() {\n\t\tif (this._frames || this._frameWidth == 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tvar maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tvar frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tvar spacing = this._spacing, margin = this._margin;\n\t\t\n\t\timgLoop:\n\t\tfor (var i=0, imgs=this._images; i<imgs.length; i++) {\n\t\t\tvar img = imgs[i], imgW = (img.width||img.naturalWidth), imgH = (img.height||img.naturalHeight);\n\n\t\t\tvar y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tvar x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\t\timage: img,\n\t\t\t\t\t\t\trect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t};\n\n\n\tcreatejs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// Graphics.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n\t * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n\t * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n\t * context of an EaselJS display list.\n\t *\n\t * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n\t * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\t *\n\t *      var g = new createjs.Graphics();\n\t *      g.setStrokeStyle(1);\n\t *      g.beginStroke(\"#000000\");\n\t *      g.beginFill(\"red\");\n\t *      g.drawCircle(0,0,30);\n\t *\n\t * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n\t * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n\t *\n\t *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\t *\n\t * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n\t * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n\t *\n\t *      var fillCommand = myGraphics.beginFill(\"red\").command;\n\t *      // ... later, update the fill style/color:\n\t *      fillCommand.style = \"blue\";\n\t *      // or change it to a bitmap fill:\n\t *      fillCommand.bitmap(myImage);\n\t *\n\t * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n\t * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\t *\n\t *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n\t *      myGraphics.append(createjs.Graphics.beginCmd);\n\t *      // we need to define the path before applying the fill:\n\t *      var circle = new createjs.Graphics.Circle(0,0,30);\n\t *      myGraphics.append(circle);\n\t *      // fill the path we just defined:\n\t *      var fill = new createjs.Graphics.Fill(\"red\");\n\t *      myGraphics.append(fill);\n\t *\n\t * These approaches can be used together, for example to insert a custom command:\n\t *\n\t *      myGraphics.beginFill(\"red\");\n\t *      var customCommand = new CustomSpiralCommand(etc);\n\t *      myGraphics.append(customCommand);\n\t *      myGraphics.beginFill(\"blue\");\n\t *      myGraphics.drawCircle(0, 0, 30);\n\t *\n\t * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n\t *\n\t * <h4>Tiny API</h4>\n\t * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n\t * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n\t * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n\t * descriptions in the docs.\n\t *\n\t * <table>\n\t *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n\t *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n\t *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n\t *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n\t *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n\t *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n\t *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n\t *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n\t *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n\t *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n\t *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n\t *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n\t *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n\t *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n\t *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n\t *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n\t * </table>\n\t *\n\t * Here is the above example, using the tiny API instead.\n\t *\n\t *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n\t *\n\t * @class Graphics\n\t * @constructor\n\t **/\n\tfunction Graphics() {\n\n\n\t// public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t **/\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t **/\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n\t\tthis._strokeStyle = null;\n\t\t\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n\t\tthis._oldStrokeStyle = null;\n\t\t\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n\t\tthis._strokeDash = null;\n\t\t\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t **/\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t **/\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t **/\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._storeIndex = 0;\n\n\t// setup:\n\t\tthis.clear();\n\t}\n\tvar p = Graphics.prototype;\n\tvar G = Graphics; // shortcut\n\n// static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t **/\n\tGraphics.getRGB = function(r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n\t\t} else {\n\t\t\treturn \"rgba(\"+r+\",\"+g+\",\"+b+\",\"+alpha+\")\";\n\t\t}\n\t};\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t **/\n\tGraphics.getHSL = function(hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn \"hsl(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%)\";\n\t\t} else {\n\t\t\treturn \"hsla(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%,\"+alpha+\")\";\n\t\t}\n\t};\n\n\n// static properties:\n\t/**\n\t * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n\t * unnecessary instantiation.\n\t * @property beginCmd\n\t * @type {Graphics.BeginPath}\n\t * @static\n\t **/\n\t // defined at the bottom of this file.\n\n\t/**\n\t * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n\t * @property BASE_64\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Object}\n\t **/\n\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\n\t/**\n\t * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"butt\", 1 to \"round\", and 2 to \"square\".\n\t * For example, to set the line caps to \"square\":\n\t *\n\t *      myGraphics.ss(16, 2);\n\t *\n\t * @property STROKE_CAPS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\n\t/**\n\t * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n\t * For example, to set the line joints to \"bevel\":\n\t *\n\t *      myGraphics.ss(16, 0, 2);\n\t *\n\t * @property STROKE_JOINTS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\n\t/**\n\t * @property _ctx\n\t * @static\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t **/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n\t * @method _getInstructions\n\t * @protected\n\t * @return {Array} The instructions array, useful for chaining\n\t **/\n\tp._getInstructions = function() {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t};\n\t// Graphics.getInstructions is @deprecated. Remove for 1.1+\n\tp.getInstructions = createjs.deprecate(p._getInstructions, \"Graphics.getInstructions\");\n\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tinstructions: { get: p._getInstructions }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t **/\n\tp.isEmpty = function() {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t **/\n\tp.draw = function(ctx, data) {\n\t\tthis._updateInstructions();\n\t\tvar instr = this._instructions;\n\t\tfor (var i=this._storeIndex, l=instr.length; i<l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t};\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t **/\n\tp.drawAsPath = function(ctx) {\n\t\tthis._updateInstructions();\n\t\tvar instr, instrs = this._instructions;\n\t\tfor (var i=this._storeIndex, l=instrs.length; i<l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t};\n\n\n// public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t **/\n\tp.moveTo = function(x, y) {\n\t\treturn this.append(new G.MoveTo(x,y), true);\n\t};\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.lineTo = function(x, y) {\n\t\treturn this.append(new G.LineTo(x,y));\n\t};\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.arcTo = function(x1, y1, x2, y2, radius) {\n\t\treturn this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n\t};\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t};\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.quadraticCurveTo = function(cpx, cpy, x, y) {\n\t\treturn this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n\t};\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t};\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.rect = function(x, y, w, h) {\n\t\treturn this.append(new G.Rect(x, y, w, h));\n\t};\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.closePath = function() {\n\t\treturn this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n\t};\n\n\n// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.clear = function() {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginFill = function(color) {\n\t\treturn this._setFill(color ? new G.Fill(color) : null);\n\t};\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginLinearGradientFill = function(colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t};\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginRadialGradientFill = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t};\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginBitmapFill = function(image, repetition, matrix) {\n\t\treturn this._setFill(new G.Fill(null,matrix).bitmap(image, repetition));\n\t};\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.endFill = function() {\n\t\treturn this.beginFill();\n\t};\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.setStrokeStyle = function(thickness, caps, joints, miterLimit, ignoreScale) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.setStrokeDash = function(segments, offset) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new G.StrokeDash(segments, offset);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginStroke = function(color) {\n\t\treturn this._setStroke(color ? new G.Stroke(color) : null);\n\t};\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginLinearGradientStroke = function(colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t};\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginRadialGradientStroke = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t};\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginBitmapStroke = function(image, repetition) {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new G.Stroke().bitmap(image, repetition));\n\t};\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.endStroke = function() {\n\t\treturn this.beginStroke();\n\t};\n\n\t/**\n\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t * method.\n\t * @method curveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.curveTo = p.quadraticCurveTo;\n\n\t/**\n\t *\n\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t * method.\n\t * @method drawRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRect = p.rect;\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRoundRect = function(x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t};\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRoundRectComplex = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t};\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\ts.x = 100;\n\t *\t\ts.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawCircle = function(x, y, radius) {\n\t\treturn this.append(new G.Circle(x, y, radius));\n\t};\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawEllipse = function(x, y, w, h) {\n\t\treturn this.append(new G.Ellipse(x, y, w, h));\n\t};\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawPolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n\t};\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.append = function(command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.decodePath = function(str) {\n\t\tvar instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tvar paramCount = [2, 2, 4, 6, 0];\n\t\tvar i=0, l=str.length;\n\t\tvar params = [];\n\t\tvar x=0, y=0;\n\t\tvar base64 = Graphics.BASE_64;\n\n\t\twhile (i<l) {\n\t\t\tvar c = str.charAt(i);\n\t\t\tvar n = base64[c];\n\t\t\tvar fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tvar f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw(\"bad path data (@\"+i+\"): \"+c); }\n\t\t\tvar pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tvar charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (var p=0; p<pl; p++) {\n\t\t\t\tvar num = base64[str.charAt(i)];\n\t\t\t\tvar sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount == 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this,params);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.store = function() {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.unstore = function() {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t **/\n\tp.clone = function() {\n\t\tvar o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Graphics]\";\n\t};\n\n\n// tiny API:\n\t/**\n\t * Shortcut to moveTo.\n\t * @method mt\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t * @protected\n\t **/\n\tp.mt = p.moveTo;\n\n\t/**\n\t * Shortcut to lineTo.\n\t * @method lt\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.lt = p.lineTo;\n\n\t/**\n\t * Shortcut to arcTo.\n\t * @method at\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.at = p.arcTo;\n\n\t/**\n\t * Shortcut to bezierCurveTo.\n\t * @method bt\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bt = p.bezierCurveTo;\n\n\t/**\n\t * Shortcut to quadraticCurveTo / curveTo.\n\t * @method qt\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t * @chainable\n\t **/\n\tp.qt = p.quadraticCurveTo;\n\n\t/**\n\t * Shortcut to arc.\n\t * @method a\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @protected\n\t * @chainable\n\t **/\n\tp.a = p.arc;\n\n\t/**\n\t * Shortcut to rect.\n\t * @method r\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.r = p.rect;\n\n\t/**\n\t * Shortcut to closePath.\n\t * @method cp\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.cp = p.closePath;\n\n\t/**\n\t * Shortcut to clear.\n\t * @method c\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.c = p.clear;\n\n\t/**\n\t * Shortcut to beginFill.\n\t * @method f\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.f = p.beginFill;\n\n\t/**\n\t * Shortcut to beginLinearGradientFill.\n\t * @method lf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.lf = p.beginLinearGradientFill;\n\n\t/**\n\t * Shortcut to beginRadialGradientFill.\n\t * @method rf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rf = p.beginRadialGradientFill;\n\n\t/**\n\t * Shortcut to beginBitmapFill.\n\t * @method bf\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bf = p.beginBitmapFill;\n\n\t/**\n\t * Shortcut to endFill.\n\t * @method ef\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ef = p.endFill;\n\n\t/**\n\t * Shortcut to setStrokeStyle.\n\t * @method ss\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ss = p.setStrokeStyle;\n\t\n\t/**\n\t * Shortcut to setStrokeDash.\n\t * @method sd\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear any existing dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.sd = p.setStrokeDash;\n\n\t/**\n\t * Shortcut to beginStroke.\n\t * @method s\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.s = p.beginStroke;\n\n\t/**\n\t * Shortcut to beginLinearGradientStroke.\n\t * @method ls\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ls = p.beginLinearGradientStroke;\n\n\t/**\n\t * Shortcut to beginRadialGradientStroke.\n\t * @method rs\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rs = p.beginRadialGradientStroke;\n\n\t/**\n\t * Shortcut to beginBitmapStroke.\n\t * @method bs\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bs = p.beginBitmapStroke;\n\n\t/**\n\t * Shortcut to endStroke.\n\t * @method es\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.es = p.endStroke;\n\n\t/**\n\t * Shortcut to drawRect.\n\t * @method dr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dr = p.drawRect;\n\n\t/**\n\t * Shortcut to drawRoundRect.\n\t * @method rr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rr = p.drawRoundRect;\n\n\t/**\n\t * Shortcut to drawRoundRectComplex.\n\t * @method rc\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rc = p.drawRoundRectComplex;\n\n\t/**\n\t * Shortcut to drawCircle.\n\t * @method dc\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dc = p.drawCircle;\n\n\t/**\n\t * Shortcut to drawEllipse.\n\t * @method de\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.de = p.drawEllipse;\n\n\t/**\n\t * Shortcut to drawPolyStar.\n\t * @method dp\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dp = p.drawPolyStar;\n\n\t/**\n\t * Shortcut to decodePath.\n\t * @method p\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.p = p.decodePath;\n\n\n// private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t **/\n\tp._updateInstructions = function(commit) {\n\t\tvar instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tvar l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (var i=0; i<l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t **/\n\tp._setFill = function(fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t **/\n\tp._setStroke = function(stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t};\n\n// Command Objects:\n\t/**\n\t * @namespace Graphics\n\t */\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class LineTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.LineTo = function(x, y) {\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.lineTo(this.x,this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class MoveTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t(G.MoveTo = function(x, y) {\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.moveTo(this.x, this.y); };\n\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ArcTo\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x1\n\t * @type Number\n\t */\n\t/**\n\t * @property y1\n\t * @type Number\n\t */\n\t/**\n\t * @property x2\n\t * @type Number\n\t */\n\t/**\n\t * @property y2\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.ArcTo = function(x1, y1, x2, y2, radius) {\n\t\tthis.x1 = x1; this.y1 = y1;\n\t\tthis.x2 = x2; this.y2 = y2;\n\t\tthis.radius = radius;\n\t}).prototype.exec = function(ctx) { ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Arc\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property startAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property endAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property anticlockwise\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t\tthis.startAngle = startAngle; this.endAngle = endAngle;\n\t\tthis.anticlockwise = !!anticlockwise;\n\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class QuadraticCurveTo\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cpx\n\t * @type Number\n\t */\n\t/**\n\t * @property cpy\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.QuadraticCurveTo = function(cpx, cpy, x, y) {\n\t\tthis.cpx = cpx; this.cpy = cpy;\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BezierCurveTo\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cp1x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp1y\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2y\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.BezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\tthis.cp1x = cp1x; this.cp1y = cp1y;\n\t\tthis.cp2x = cp2x; this.cp2y = cp2y;\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Rect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Rect = function(x, y, w, h) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t}).prototype.exec = function(ctx) { ctx.rect(this.x, this.y, this.w, this.h); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ClosePath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.ClosePath = function() {\n\t}).prototype.exec = function(ctx) { ctx.closePath(); };\n\n\t/**\n\t * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BeginPath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.BeginPath = function() {\n\t}).prototype.exec = function(ctx) { ctx.beginPath(); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Fill\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t **/\n\t/**\n\t * A valid Context2D fillStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property matrix\n\t * @type Matrix2D\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.Fill = function(style, matrix) {\n\t\tthis.style = style;\n\t\tthis.matrix = matrix;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tvar mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t};\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.linearGradient = function(colors, ratios, x0, y0, x1, y1) {\n\t\tvar o = this.style =  Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, x1:x1, y1:y1, type:\"linear\"};\n\t\treturn this;\n\t};\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.radialGradient = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tvar o = this.style =  Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, r0:r0, x1:x1, y1:y1, r1:r1, type:\"radial\"};\n\t\treturn this;\n\t};\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.bitmap = function(image, repetition) {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tvar o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n\t\t\to.props = {image: image, repetition: repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t};\n\tp.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Stroke\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t **/\n\t/**\n\t * A valid Context2D strokeStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property ignoreScale\n\t * @type Boolean\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.Stroke = function(style, ignoreScale) {\n\t\tthis.style = style;\n\t\tthis.ignoreScale = ignoreScale;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t};\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.linearGradient = G.Fill.prototype.linearGradient;\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.radialGradient = G.Fill.prototype.radialGradient;\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.bitmap = G.Fill.prototype.bitmap;\n\tp.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeStyle\n\t * @constructor\n\t * @param {Number} width\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t **/\n\t/**\n\t * @property width\n\t * @type Number\n\t */\n\t/**\n\t * One of: butt, round, square\n\t * @property caps\n\t * @type String\n\t */\n\t/**\n\t * One of: round, bevel, miter\n\t * @property joints\n\t * @type String\n\t */\n\t/**\n\t * @property miterLimit\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.StrokeStyle = function(width, caps, joints, miterLimit, ignoreScale) {\n\t\tthis.width = width;\n\t\tthis.caps = caps;\n\t\tthis.joints = joints;\n\t\tthis.miterLimit = miterLimit;\n\t\tthis.ignoreScale = ignoreScale;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tctx.lineWidth = (this.width == null ? \"1\" : this.width);\n\t\tctx.lineCap = (this.caps == null ? \"butt\" : (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]));\n\t\tctx.lineJoin = (this.joints == null ? \"miter\" : (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]));\n\t\tctx.miterLimit = (this.miterLimit == null ? \"10\" : this.miterLimit);\n\t\tctx.ignoreScale = (this.ignoreScale == null ? false : this.ignoreScale);\n\t};\n\tp.path = false;\n\t\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeDash\n\t * @constructor\n\t * @param {Array} [segments]\n\t * @param {Number} [offset=0]\n\t **/\n\t/**\n\t * @property segments\n\t * @type Array\n\t */\n\t/**\n\t * @property offset\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.StrokeDash = function(segments, offset) {\n\t\tthis.segments = segments;\n\t\tthis.offset = offset||0;\n\t}).prototype.exec = function(ctx) {\n\t\tif (ctx.setLineDash) { // feature detection.\n\t\t\tctx.setLineDash(this.segments|| G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n\t\t\tctx.lineDashOffset = this.offset||0;\n\t\t}\n\t};\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t **/\n\tG.StrokeDash.EMPTY_SEGMENTS = [];\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class RoundRect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTL\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBL\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.RoundRect = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t\tthis.radiusTL = radiusTL; this.radiusTR = radiusTR;\n\t\tthis.radiusBR = radiusBR; this.radiusBL = radiusBL;\n\t}).prototype.exec = function(ctx) {\n\t\tvar max = (w<h?w:h)/2;\n\t\tvar mTL=0, mTR=0, mBR=0, mBL=0;\n\t\tvar x = this.x, y = this.y, w = this.w, h = this.h;\n\t\tvar rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t\tif (rTL < 0) { rTL *= (mTL=-1); }\n\t\tif (rTL > max) { rTL = max; }\n\t\tif (rTR < 0) { rTR *= (mTR=-1); }\n\t\tif (rTR > max) { rTR = max; }\n\t\tif (rBR < 0) { rBR *= (mBR=-1); }\n\t\tif (rBR > max) { rBR = max; }\n\t\tif (rBL < 0) { rBL *= (mBL=-1); }\n\t\tif (rBL > max) { rBL = max; }\n\n\t\tctx.moveTo(x+w-rTR, y);\n\t\tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t\tctx.lineTo(x+w, y+h-rBR);\n\t\tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t\tctx.lineTo(x+rBL, y+h);\n\t\tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t\tctx.lineTo(x, y+rTL);\n\t\tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t\tctx.closePath();\n\t};\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Circle\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Circle = function(x, y, radius) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Ellipse\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Ellipse = function(x, y, w, h) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t}).prototype.exec = function(ctx) {\n\t\tvar x = this.x, y = this.y;\n\t\tvar w = this.w, h = this.h;\n\n\t\tvar k = 0.5522848;\n\t\tvar ox = (w / 2) * k;\n\t\tvar oy = (h / 2) * k;\n\t\tvar xe = x + w;\n\t\tvar ye = y + h;\n\t\tvar xm = x + w / 2;\n\t\tvar ym = y + h / 2;\n\n\t\tctx.moveTo(x, ym);\n\t\tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t\tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t\tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t\tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n\t};\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class PolyStar\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} pointSize\n\t * @param {Number} angle\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property sides\n\t * @type Number\n\t */\n\t/**\n\t * @property pointSize\n\t * @type Number\n\t */\n\t/**\n\t * @property angle\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.PolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t\tthis.sides = sides;\n\t\tthis.pointSize = pointSize;\n\t\tthis.angle = angle;\n\t}).prototype.exec = function(ctx) {\n\t\tvar x = this.x, y = this.y;\n\t\tvar radius = this.radius;\n\t\tvar angle = (this.angle||0)/180*Math.PI;\n\t\tvar sides = this.sides;\n\t\tvar ps = 1-(this.pointSize||0);\n\t\tvar a = Math.PI/sides;\n\n\t\tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\tfor (var i=0; i<sides; i++) {\n\t\t\tangle += a;\n\t\t\tif (ps != 1) {\n\t\t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t\t\t}\n\t\t\tangle += a;\n\t\t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\t}\n\t\tctx.closePath();\n\t};\n\n\t// docced above.\n\tGraphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\n\n\tcreatejs.Graphics = Graphics;\n}());\n\n//##############################################################################\n// DisplayObject.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\r\n\t * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\r\n\t * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\r\n\t * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\r\n\t * caching, and mouse handlers.\r\n\t * @class DisplayObject\r\n\t * @extends EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction DisplayObject() {\r\n\t\tthis.EventDispatcher_constructor();\r\n\r\n\r\n\t// public properties:\r\n\t\t/**\r\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\r\n\t\t * @property alpha\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis.alpha = 1;\r\n\r\n\t\t/**\r\n\t\t * If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\r\n\t\t * for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\r\n\t\t * @property cacheCanvas\r\n\t\t * @type {HTMLCanvasElement | Object}\r\n\t\t * @default null\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\tthis.cacheCanvas = null;\r\n\r\n\t\t/**\r\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n\t\t * for more information. Use this to control, inspect, and change the cache. In special circumstances this may be a modified or subclassed BitmapCache.\r\n\t\t * @property bitmapCache\r\n\t\t * @type {BitmapCache}\r\n\t\t * @default null\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\tthis.bitmapCache = null;\r\n\r\n\t\t/**\r\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\r\n\t\t * @property id\r\n\t\t * @type {Number}\r\n\t\t * @default -1\r\n\t\t **/\r\n\t\tthis.id = createjs.UID.get();\r\n\r\n\t\t/**\r\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\r\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\r\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\r\n\t\t * method from returning the child.\r\n\t\t *\r\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\r\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\r\n\t\t * provided in the next release of EaselJS.\r\n\t\t * @property mouseEnabled\r\n\t\t * @type {Boolean}\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.mouseEnabled = true;\r\n\r\n\t\t/**\r\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\r\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, and DOMElement display properties).\r\n\t\t * @property tickEnabled\r\n\t\t * @type Boolean\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.tickEnabled = true;\r\n\r\n\t\t/**\r\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\r\n\t\t * debugging.\r\n\t\t * @property name\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.name = null;\r\n\r\n\t\t/**\r\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\r\n\t\t * contains this display object, or null if it has not been added\r\n\t\t * to one.\r\n\t\t * @property parent\r\n\t\t * @final\r\n\t\t * @type {Container}\r\n\t\t * @default null\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\tthis.parent = null;\r\n\r\n\t\t/**\r\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\r\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\r\n\t\t * Cached object's registration points should be set based on pre-cache conditions, not cached size.\r\n\t\t * @property regX\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.regX = 0;\r\n\r\n\t\t/**\r\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\r\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\r\n\t\t * Cached object's registration points should be set based on pre-cache conditions, not cached size.\r\n\t\t * @property regY\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.regY = 0;\r\n\r\n\t\t/**\r\n\t\t * The rotation in degrees for this display object.\r\n\t\t * @property rotation\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.rotation = 0;\r\n\r\n\t\t/**\r\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\r\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\r\n\t\t * @property scaleX\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis.scaleX = 1;\r\n\r\n\t\t/**\r\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\r\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\r\n\t\t * @property scaleY\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis.scaleY = 1;\r\n\r\n\t\t/**\r\n\t\t * The factor to skew this display object horizontally.\r\n\t\t * @property skewX\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.skewX = 0;\r\n\r\n\t\t/**\r\n\t\t * The factor to skew this display object vertically.\r\n\t\t * @property skewY\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.skewY = 0;\r\n\r\n\t\t/**\r\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\r\n\t\t * null, this property is inherited from the parent container.\r\n\t\t * @property shadow\r\n\t\t * @type {Shadow}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.shadow = null;\r\n\r\n\t\t/**\r\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\r\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\r\n\t\t * @property visible\r\n\t\t * @type {Boolean}\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.visible = true;\r\n\r\n\t\t/**\r\n\t\t * The x (horizontal) position of the display object, relative to its parent.\r\n\t\t * @property x\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.x = 0;\r\n\r\n\t\t/** The y (vertical) position of the display object, relative to its parent.\r\n\t\t * @property y\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.y = 0;\r\n\r\n\t\t/**\r\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\r\n\t\t * (x, y, rotation, scale, skew).\r\n\t\t * @property transformMatrix\r\n\t\t * @type {Matrix2D}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.transformMatrix = null;\r\n\r\n\t\t/**\r\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\r\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\r\n\t\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n\t\t * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\r\n\t\t * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\r\n\t\t * @property compositeOperation\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.compositeOperation = null;\r\n\r\n\t\t/**\r\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\r\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\r\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\r\n\t\t * @property snapToPixel\r\n\t\t * @type {Boolean}\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.snapToPixel = true;\r\n\r\n\t\t/**\r\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\r\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\r\n\t\t * cached.\r\n\t\t * @property filters\r\n\t\t * @type {Array}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.filters = null;\r\n\r\n\t\t/**\r\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\r\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\r\n\t\t * @property mask\r\n\t\t * @type {Shape}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.mask = null;\r\n\r\n\t\t/**\r\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\r\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\r\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\r\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\r\n\t\t * ancestors (parents).\r\n\t\t * \r\n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\r\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\r\n\t\t *\r\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\r\n\t\t * @property hitArea\r\n\t\t * @type {DisplayObject}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.hitArea = null;\r\n\r\n\t\t/**\r\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\r\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\r\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\r\n\t\t * @property cursor\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.cursor = null;\r\n\r\n\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n\t\t * @property _cacheScale\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t * @deprecated\r\n\t\t **/\r\n\r\n\t\t/**\r\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n\t\t * @property _cacheDataURLID\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t * @deprecated\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n\t\t * @property _cacheDataURL\r\n\t\t * @protected\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t * @deprecated\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * @property _props\r\n\t\t * @protected\r\n\t\t * @type {DisplayObject}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis._props = new createjs.DisplayProps();\r\n\r\n\t\t/**\r\n\t\t * @property _rectangle\r\n\t\t * @protected\r\n\t\t * @type {Rectangle}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis._rectangle = new createjs.Rectangle();\r\n\r\n\t\t/**\r\n\t\t * @property _bounds\r\n\t\t * @protected\r\n\t\t * @type {Rectangle}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis._bounds = null;\r\n\r\n\t\t/**\r\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\r\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\r\n\t\t * @property _webGLRenderStyle\r\n\t\t * @protected\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\r\n\t}\r\n\tvar p = createjs.extend(DisplayObject, createjs.EventDispatcher);\r\n\r\n// static properties:\r\n\t/**\r\n\t * Listing of mouse event names. Used in _hasMouseEventListener.\r\n\t * @property _MOUSE_EVENTS\r\n\t * @protected\r\n\t * @static\r\n\t * @type {Array}\r\n\t **/\r\n\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\r\n\r\n\t/**\r\n\t * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\r\n\t * with cross domain content.\r\n\t * @property suppressCrossDomainErrors\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t **/\r\n\tDisplayObject.suppressCrossDomainErrors = false;\r\n\r\n\t/**\r\n\t * @property _snapToPixelEnabled\r\n\t * @protected\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t **/\r\n\tDisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\r\n\r\n\t/**\r\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\r\n\t * @property _StageGL_NONE\r\n\t * @protected\r\n\t * @static\r\n\t * @type {number}\r\n\t */\r\n\tDisplayObject._StageGL_NONE = 0;\r\n\r\n\t/**\r\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\r\n\t * @property _StageGL_SPRITE\r\n\t * @protected\r\n\t * @static\r\n\t * @type {number}\r\n\t */\r\n\tDisplayObject._StageGL_SPRITE = 1;\r\n\r\n\t/**\r\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\r\n\t * @property _StageGL_BITMAP\r\n\t * @protected\r\n\t * @static\r\n\t * @type {number}\r\n\t */\r\n\tDisplayObject._StageGL_BITMAP = 2;\r\n\r\n\t/**\r\n\t * @property _hitTestCanvas\r\n\t * @type {HTMLCanvasElement | Object}\r\n\t * @static\r\n\t * @protected\r\n\t **/\r\n\t/**\r\n\t * @property _hitTestContext\r\n\t * @type {CanvasRenderingContext2D}\r\n\t * @static\r\n\t * @protected\r\n\t **/\r\n\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\r\n\tif (canvas.getContext) {\r\n\t\tDisplayObject._hitTestCanvas = canvas;\r\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\r\n\t\tcanvas.width = canvas.height = 1;\r\n\t}\r\n\r\n// events:\r\n\t/**\r\n\t * Dispatched when the user presses their left mouse button over the display object. See the \r\n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event mousedown\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event click\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the user double clicks their left mouse button over this display object.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event dblclick\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using \r\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event mouseover\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using \r\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event mouseout\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\t/**\r\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\r\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n\t * aggregate of their content.\r\n\t * \r\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\r\n\t * myContainer, two events would be received, each targeting a child element:<OL>\r\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\r\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\r\n\t * </OL>\r\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\r\n\t * the aggregate myContainer content (target=myContainer).\r\n\t * \r\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event rollover\r\n\t * @since 0.7.0\r\n\t */\r\n\r\n\t/**\r\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\r\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n\t * aggregate of their content.\r\n\t * \r\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\r\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\r\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\r\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\r\n\t * </OL>\r\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\r\n\t * the aggregate myContainer content (target=myContainer).\r\n\t * \r\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event rollout\r\n\t * @since 0.7.0\r\n\t */\r\n\r\n\t/**\r\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\r\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\r\n\t * useful for dragging and similar operations.\r\n\t *\r\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n\t * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\r\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\r\n\t * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n\t * @event pressmove\r\n\t * @since 0.7.0\r\n\t */\r\n\r\n\t/**\r\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\r\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\r\n\t * operations.\r\n\t *\r\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n\t * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\r\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\r\n\t * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n\t * @event pressup\r\n\t * @since 0.7.0\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the display object is added to a parent container.\r\n\t * @event added\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the display object is removed from its parent container.\r\n\t * @event removed\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\r\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\r\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\r\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\r\n\t * dispatched on their parent.\r\n\t * @event tick\r\n\t * @param {Object} target The object that dispatched the event.\r\n\t * @param {String} type The event type.\r\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\r\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\r\n// getter / setters:\r\n\t/**\r\n\t * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\r\n\t * @method _getStage\r\n\t * @protected\r\n\t * @return {Stage}\r\n\t **/\r\n\tp._getStage = function() {\r\n\t\t// uses dynamic access to avoid circular dependencies;\r\n\t\tvar o = this, _Stage = createjs[\"Stage\"];\r\n\t\twhile (o.parent) { o = o.parent; }\r\n\t\tif (o instanceof _Stage) { return o; }\r\n\t\treturn null;\r\n\t};\r\n\t// DisplayObject.getStage is @deprecated. Remove for 1.1+\r\n\tp.getStage = createjs.deprecate(p._getStage, \"DisplayObject.getStage\");\r\n\r\n\t/**\r\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\r\n\t * @property stage\r\n\t * @type {Stage}\r\n\t * @readonly\r\n\t **/\r\n\r\n\t/**\r\n\t * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\r\n\t * determine if the cache has changed since a previous check.\r\n\t * Moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}\r\n\t * @property cacheID\r\n\t * @deprecated\r\n\t * @type {Number}\r\n\t * @default 0\r\n\t */\r\n\r\n\t/**\r\n\t * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\r\n\t * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\r\n\t * it will return only the `scaleX`.\r\n\t * @property scaleX\r\n\t * @type {Number}\r\n\t * @default 1\r\n\t */\r\n\ttry {\r\n\t\tObject.defineProperties(p, {\r\n\t\t\tstage: { get: p._getStage },\r\n\t\t\tcacheID: {\r\n\t\t\t\tget: function(){ return this.bitmapCache && this.bitmapCache.cacheID },\r\n\t\t\t\tset: function(a){ this.bitmapCache && (this.bitmapCache.cacheID = a) }\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tget: function() { return this.scaleX; },\r\n\t\t\t\tset: function(scale) { this.scaleX = this.scaleY = scale; },\r\n\t\t\t}\r\n\t\t});\r\n\t} catch (e) {}\r\n\r\n\r\n// public methods:\r\n\t/**\r\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n\t * This does not account for whether it would be visible within the boundaries of the stage.\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method isVisible\r\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n\t **/\r\n\tp.isVisible = function() {\r\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\r\n\t};\r\n\r\n\t/**\r\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method draw\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\r\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\r\n\t * @return {Boolean}\r\n\t **/\r\n\tp.draw = function(ctx, ignoreCache) {\r\n\t\tvar cache = this.bitmapCache;\r\n\t\tif(cache && !ignoreCache) {\r\n\t\t\treturn cache.draw(ctx);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\r\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\r\n\t * @method updateContext\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\r\n\t **/\r\n\tp.updateContext = function(ctx) {\r\n\t\tvar o=this, mask=o.mask, mtx= o._props.matrix;\r\n\t\t\r\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\r\n\t\t\tmask.getMatrix(mtx);\r\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\r\n\t\t\t\r\n\t\t\tmask.graphics.drawAsPath(ctx);\r\n\t\t\tctx.clip();\r\n\t\t\t\r\n\t\t\tmtx.invert();\r\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\r\n\t\t}\r\n\t\t\r\n\t\tthis.getMatrix(mtx);\r\n\t\tvar tx = mtx.tx, ty = mtx.ty;\r\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\r\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\r\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\r\n\t\t}\r\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\r\n\t\tctx.globalAlpha *= o.alpha;\r\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\r\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\r\n\t};\r\n\r\n\t/**\r\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\r\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\r\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\r\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\r\n\t * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\r\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\r\n\t *\r\n\t *      var shape = new createjs.Shape();\r\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n\t *      shape.cache(-25, -25, 50, 50);\r\n\t *\r\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\r\n\t * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\r\n\t * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\r\n\t * \r\n\t * Usually, the resulting cacheCanvas will have the dimensions width * scale, height * scale, however some filters (ex. BlurFilter)\r\n\t * will add padding to the canvas dimensions.\r\n\t *\r\n\t * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\r\n\t * This allows for easier interaction and alternate cache methods like WebGL with {{#crossLink \"StageGL\"}}{{/crossLink}}.\r\n\t * For more information on the options object, see the BitmapCache {{#crossLink \"BitmapCache/define\"}}{{/crossLink}}.\r\n\t *\r\n\t * @method cache\r\n\t * @param {Number} x The x coordinate origin for the cache region.\r\n\t * @param {Number} y The y coordinate origin for the cache region.\r\n\t * @param {Number} width The width of the cache region.\r\n\t * @param {Number} height The height of the cache region.\r\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\r\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\r\n\t * \tcached elements with greater fidelity. Default is 1.\r\n\t * @param {Object} [options=undefined] Specify additional parameters for the cache logic\r\n\t **/\r\n\tp.cache = function(x, y, width, height, scale, options) {\r\n\t\tif(!this.bitmapCache){\r\n\t\t\tthis.bitmapCache = new createjs.BitmapCache();\r\n\t\t}\r\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\r\n\t};\r\n\r\n\t/**\r\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\r\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\r\n\t * will be drawn over the existing cache using the specified compositeOperation.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\r\n\t * will be drawn on top of the old one.\r\n\t *\r\n\t *      // Not shown: Creating the shape, and caching it.\r\n\t *      shapeInstance.clear();\r\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\r\n\t *      shapeInstance.updateCache();\r\n\t *\r\n\t * In previous versions caching was handled on DisplayObject but has since been moved to {{#crossLink \"BitmapCache\"}}{{/crossLink}}.\r\n\t * This allows for easier interaction and alternate cache methods like WebGL and {{#crossLink \"StageGL\"}}{{/crossLink}}.\r\n\t *\r\n\t * @method updateCache\r\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\r\n\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n\t * whatwg spec on compositing</a>.\r\n\t **/\r\n\tp.updateCache = function(compositeOperation) {\r\n\t\tif(!this.bitmapCache) {\r\n\t\t\tthrow \"cache() must be called before updateCache()\";\r\n\t\t}\r\n\t\tthis.bitmapCache.update(compositeOperation);\r\n\t};\r\n\r\n\t/**\r\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\r\n\t * @method uncache\r\n\t **/\r\n\tp.uncache = function() {\r\n\t\tif(this.bitmapCache) {\r\n\t\t\tthis.bitmapCache.release();\r\n\t\t\tthis.bitmapCache = undefined;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a data URL for the cache, or null if this display object is not cached.\r\n\t * Only generated if the cache has changed, otherwise returns last result.\r\n\t * @method getCacheDataURL\r\n\t * @return {String} The image data url for the cache.\r\n\t **/\r\n\tp.getCacheDataURL = function() {\r\n\t\treturn this.bitmapCache?this.bitmapCache.getDataURL():null;\r\n\t};\r\n\r\n\t/**\r\n\t * Transforms the specified x and y position from the coordinate space of the display object\r\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\r\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\r\n\t * correlating to the transformed coordinates on the stage.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.x = 300;\r\n\t *      displayObject.y = 200;\r\n\t *      stage.addChild(displayObject);\r\n\t *      var point = displayObject.localToGlobal(100, 100);\r\n\t *      // Results in x=400, y=300\r\n\t *\r\n\t * @method localToGlobal\r\n\t * @param {Number} x The x position in the source display object to transform.\r\n\t * @param {Number} y The y position in the source display object to transform.\r\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\r\n\t * on the stage.\r\n\t **/\r\n\tp.localToGlobal = function(x, y, pt) {\r\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x,y, pt||new createjs.Point());\r\n\t};\r\n\r\n\t/**\r\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\r\n\t * coordinate space of the display object. For example, this could be used to determine\r\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\r\n\t * correlating to the transformed position in the display object's coordinate space.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.x = 300;\r\n\t *      displayObject.y = 200;\r\n\t *      stage.addChild(displayObject);\r\n\t *      var point = displayObject.globalToLocal(100, 100);\r\n\t *      // Results in x=-200, y=-100\r\n\t *\r\n\t * @method globalToLocal\r\n\t * @param {Number} x The x position on the stage to transform.\r\n\t * @param {Number} y The y position on the stage to transform.\r\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\r\n\t * display object's coordinate space.\r\n\t **/\r\n\tp.globalToLocal = function(x, y, pt) {\r\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x,y, pt||new createjs.Point());\r\n\t};\r\n\r\n\t/**\r\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\r\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\r\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\r\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n\t *\r\n\t *      var pt = this.localToGlobal(x, y);\r\n\t *      pt = target.globalToLocal(pt.x, pt.y);\r\n\t *\r\n\t * @method localToLocal\r\n\t * @param {Number} x The x position in the source display object to transform.\r\n\t * @param {Number} y The y position on the source display object to transform.\r\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\r\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\r\n\t * in the target's coordinate space.\r\n\t **/\r\n\tp.localToLocal = function(x, y, target, pt) {\r\n\t\tpt = this.localToGlobal(x, y, pt);\r\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\r\n\t};\r\n\r\n\t/**\r\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\r\n\t * Omitted parameters will have the default value set.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.setTransform(100, 100, 2, 2);\r\n\t *\r\n\t * @method setTransform\r\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\r\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\r\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\r\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\r\n\t * @param {Number} [rotation=0] The rotation, in degrees\r\n\t * @param {Number} [skewX=0] The horizontal skew factor\r\n\t * @param {Number} [skewY=0] The vertical skew factor\r\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\r\n\t * @param {Number} [regY=0] The vertical registration point in pixels\r\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\r\n\t * @chainable\r\n\t*/\r\n\tp.setTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.scaleX = scaleX == null ? 1 : scaleX;\r\n\t\tthis.scaleY = scaleY == null ? 1 : scaleY;\r\n\t\tthis.rotation = rotation || 0;\r\n\t\tthis.skewX = skewX || 0;\r\n\t\tthis.skewY = skewY || 0;\r\n\t\tthis.regX = regX || 0;\r\n\t\tthis.regY = regY || 0;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a matrix based on this object's current transform.\r\n\t * @method getMatrix\r\n\t * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\r\n\t * Matrix object is returned.\r\n\t * @return {Matrix2D} A matrix representing this display object's transform.\r\n\t **/\r\n\tp.getMatrix = function(matrix) {\r\n\t\tvar o = this, mtx = matrix&&matrix.identity() || new createjs.Matrix2D();\r\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\r\n\t};\r\n\r\n\t/**\r\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\r\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\r\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\r\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n\t * @method getConcatenatedMatrix\r\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\r\n\t * If null, a new Matrix2D object is returned.\r\n\t * @return {Matrix2D} The combined matrix.\r\n\t **/\r\n\tp.getConcatenatedMatrix = function(matrix) {\r\n\t\tvar o = this, mtx = this.getMatrix(matrix);\r\n\t\twhile (o = o.parent) {\r\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\r\n\t\t}\r\n\t\treturn mtx;\r\n\t};\r\n\r\n\t/**\r\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\r\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\r\n\t * @method getConcatenatedDisplayProps\r\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\r\n\t * If null, a new DisplayProps object is returned.\r\n\t * @return {DisplayProps} The combined display properties.\r\n\t **/\r\n\tp.getConcatenatedDisplayProps = function(props) {\r\n\t\tprops = props ? props.identity() : new createjs.DisplayProps();\r\n\t\tvar o = this, mtx = o.getMatrix(props.matrix); \r\n\t\tdo {\r\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\r\n\t\t\t\r\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\r\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\r\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\r\n\t\t} while (o = o.parent);\r\n\t\treturn props;\r\n\t};\r\n\r\n\t/**\r\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\r\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\r\n\t *      function handleMouseDown(event) {\r\n\t *          var hit = myShape.hitTest(event.stageX, event.stageY);\r\n\t *      }\r\n\t *\r\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\r\n\t * @method hitTest\r\n\t * @param {Number} x The x position to check in the display object's local coordinates.\r\n\t * @param {Number} y The y position to check in the display object's local coordinates.\r\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\r\n\t * local Point.\r\n\t*/\r\n\tp.hitTest = function(x, y) {\r\n\t\tvar ctx = DisplayObject._hitTestContext;\r\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\r\n\t\tthis.draw(ctx);\r\n\r\n\t\tvar hit = this._testHit(ctx);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\treturn hit;\r\n\t};\r\n\r\n\t/**\r\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n\t *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\r\n\t *\r\n\t * @method set\r\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\r\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\r\n\t * @chainable\r\n\t*/\r\n\tp.set = function(props) {\r\n\t\tfor (var n in props) { this[n] = props[n]; }\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\r\n\t * Objects that have been cached will return the bounds of the cache.\r\n\t * \r\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n\t * bounds.\r\n\t * \r\n\t * <table>\r\n\t * \t<tr><td><b>All</b></td><td>\r\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\r\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\r\n\t * \t\tthe automatic calculations listed below.\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Bitmap</b></td><td>\r\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Sprite</b></td><td>\r\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\r\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Container</b></td><td>\r\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Shape</b></td><td>\r\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Text</b></td><td>\r\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\r\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>BitmapText</b></td><td>\r\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\r\n\t * \t\tto (x=0,y=0).\r\n\t * \t</td></tr>\r\n\t* </table>\r\n\t * \r\n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\r\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\r\n\t * bounds explicitly:\r\n\t * \r\n\t * \tvar bounds = obj.getBounds();\r\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t * \t// getBounds will now use the set values, instead of recalculating\r\n\t * \r\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n\t * values if you need to retain it.\r\n\t * \r\n\t * \tvar myBounds = obj.getBounds().clone();\r\n\t * \t// OR:\r\n\t * \tmyRect.copy(obj.getBounds());\r\n\t * \r\n\t * @method getBounds\r\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\r\n\t * object.\r\n\t **/\r\n\tp.getBounds = function() {\r\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\r\n\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\tif (cacheCanvas) {\r\n\t\t\tvar scale = this._cacheScale;\r\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\r\n\t * Objects that have been cached will return the transformed bounds of the cache.\r\n\t * \r\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n\t * bounds.\r\n\t * \r\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n\t * values if you need to retain it.\r\n\t * \r\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\r\n\t * @method getTransformedBounds\r\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\r\n\t **/\r\n\tp.getTransformedBounds = function() {\r\n\t\treturn this._getBounds();\r\n\t};\r\n\r\n\t/**\r\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\r\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\r\n\t * override calculated bounds.\r\n\t * \r\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\r\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\r\n\t * @method setBounds\r\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\r\n\t * @param {Number} y The y origin of the bounds.\r\n\t * @param {Number} width The width of the bounds.\r\n\t * @param {Number} height The height of the bounds.\r\n\t **/\r\n\tp.setBounds = function(x, y, width, height) {\r\n\t\tif (x == null) { this._bounds = x; return; }\r\n\t\tthis._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\r\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\r\n\t * are copied by reference (masks, individual filter instances, hit area)\r\n\t * @method clone\r\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\r\n\t **/\r\n\tp.clone = function() {\r\n\t\treturn this._cloneProps(new DisplayObject());\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a string representation of this object.\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[DisplayObject (name=\"+  this.name +\")]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * Called before the object gets drawn and is a chance to ensure the display state of the object is correct.\r\n\t * Mostly used by {{#crossLink \"MovieClip\"}}{{/crossLink}} and {{#crossLink \"BitmapText\"}}{{/crossLink}} to\r\n\t * correct their internal state and children prior to being drawn.\r\n\t *\r\n\t * Is manually called via draw in a {{#crossLink \"Stage\"}}{{/crossLink}} but is automatically called when\r\n\t * present in a {{#crossLink \"StageGL\"}}{{/crossLink}} instance.\r\n\t *\r\n\t * @method _updateState\r\n\t * @default null\r\n\t */\r\n\tp._updateState = null;\r\n\r\n\t// separated so it can be used more easily in subclasses:\r\n\t/**\r\n\t * @method _cloneProps\r\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\r\n\t * instance copied into.\r\n\t * @return {DisplayObject} o\r\n\t * @protected\r\n\t **/\r\n\tp._cloneProps = function(o) {\r\n\t\to.alpha = this.alpha;\r\n\t\to.mouseEnabled = this.mouseEnabled;\r\n\t\to.tickEnabled = this.tickEnabled;\r\n\t\to.name = this.name;\r\n\t\to.regX = this.regX;\r\n\t\to.regY = this.regY;\r\n\t\to.rotation = this.rotation;\r\n\t\to.scaleX = this.scaleX;\r\n\t\to.scaleY = this.scaleY;\r\n\t\to.shadow = this.shadow;\r\n\t\to.skewX = this.skewX;\r\n\t\to.skewY = this.skewY;\r\n\t\to.visible = this.visible;\r\n\t\to.x  = this.x;\r\n\t\to.y = this.y;\r\n\t\to.compositeOperation = this.compositeOperation;\r\n\t\to.snapToPixel = this.snapToPixel;\r\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\r\n\t\to.mask = this.mask;\r\n\t\to.hitArea = this.hitArea;\r\n\t\to.cursor = this.cursor;\r\n\t\to._bounds = this._bounds;\r\n\t\treturn o;\r\n\t};\r\n\r\n\t/**\r\n\t * @method _applyShadow\r\n\t * @protected\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @param {Shadow} shadow\r\n\t **/\r\n\tp._applyShadow = function(ctx, shadow) {\r\n\t\tshadow = shadow || Shadow.identity;\r\n\t\tctx.shadowColor = shadow.color;\r\n\t\tctx.shadowOffsetX = shadow.offsetX;\r\n\t\tctx.shadowOffsetY = shadow.offsetY;\r\n\t\tctx.shadowBlur = shadow.blur;\r\n\t};\r\n\r\n\t/**\r\n\t * @method _tick\r\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n\t * @protected\r\n\t **/\r\n\tp._tick = function(evtObj) {\r\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\r\n\t\tvar ls = this._listeners;\r\n\t\tif (ls && ls[\"tick\"]) {\r\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\r\n\t\t\tevtObj.target = null;\r\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\r\n\t\t\tthis.dispatchEvent(evtObj);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @method _testHit\r\n\t * @protected\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @return {Boolean}\r\n\t **/\r\n\tp._testHit = function(ctx) {\r\n\t\ttry {\r\n\t\t\tvar hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\r\n\t\t} catch (e) {\r\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\r\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn hit;\r\n\t};\r\n\r\n\t/**\r\n\t * @method _getBounds\r\n\t * @param {Matrix2D} matrix\r\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._getBounds = function(matrix, ignoreTransform){\r\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\r\n\t};\r\n\r\n\t/**\r\n\t * @method _transformBounds\r\n\t * @param {Rectangle} bounds\r\n\t * @param {Matrix2D} matrix\r\n\t * @param {Boolean} ignoreTransform\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._transformBounds = function(bounds, matrix, ignoreTransform) {\r\n\t\tif (!bounds) { return bounds; }\r\n\t\tvar x = bounds.x, y = bounds.y, width = bounds.width, height = bounds.height, mtx = this._props.matrix;\r\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\r\n\t\t\r\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\r\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\r\n\t\t\r\n\t\tvar x_a = width*mtx.a, x_b = width*mtx.b;\r\n\t\tvar y_c = height*mtx.c, y_d = height*mtx.d;\r\n\t\tvar tx = mtx.tx, ty = mtx.ty;\r\n\t\t\r\n\t\tvar minX = tx, maxX = tx, minY = ty, maxY = ty;\r\n\r\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\r\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\r\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\r\n\t * @method _isMouseOpaque\r\n\t * @return {Boolean}\r\n\t * @protected\r\n\t **/\r\n\tp._hasMouseEventListener = function() {\r\n\t\tvar evts = DisplayObject._MOUSE_EVENTS;\r\n\t\tfor (var i= 0, l=evts.length; i<l; i++) {\r\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\r\n\t\t}\r\n\t\treturn !!this.cursor;\r\n\t};\r\n\r\n\tcreatejs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\r\n}());\n\n//##############################################################################\n// Container.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\t\r\n\r\n// constructor:\r\n/**\r\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\r\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\r\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\r\n * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\r\n * Container.\r\n *\r\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\r\n * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\r\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\r\n *\r\n * <h4>Example</h4>\r\n *\r\n *      var container = new createjs.Container();\r\n *      container.addChild(bitmapInstance, shapeInstance);\r\n *      container.x = 100;\r\n *\r\n * @class Container\r\n * @extends DisplayObject\r\n * @constructor\r\n **/\r\n\tfunction Container() {\r\n\t\tthis.DisplayObject_constructor();\r\n\t\t\r\n\t// public properties:\r\n\t\t/**\r\n\t\t * The array of children in the display list. You should usually use the child management methods such as\r\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\r\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\r\n\t\t * included for advanced uses.\r\n\t\t * @property children\r\n\t\t * @type Array\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.children = [];\r\n\t\t\r\n\t\t/**\r\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\r\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\r\n\t\t * trigger a click event on the container.\r\n\t\t * @property mouseChildren\r\n\t\t * @type Boolean\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.mouseChildren = true;\r\n\t\t\r\n\t\t/**\r\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\r\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\r\n\t\t * @property tickChildren\r\n\t\t * @type Boolean\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.tickChildren = true;\r\n\t}\r\n\tvar p = createjs.extend(Container, createjs.DisplayObject);\r\n\t\r\n\t\r\n// getter / setters:\r\n\t/**\r\n\t * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\r\n\t * @method _getNumChildren\r\n\t * @protected\r\n\t * @return {Number}\r\n\t **/\r\n\tp._getNumChildren = function() {\r\n\t\treturn this.children.length;\r\n\t};\r\n\t// Container.getNumChildren is @deprecated. Remove for 1.1+\r\n\tp.getNumChildren = createjs.deprecate(p._getNumChildren, \"Container.getNumChildren\");\r\n\r\n\t/**\r\n\t * Returns the number of children in the container.\r\n\t * @property numChildren\r\n\t * @type {Number}\r\n\t * @readonly\r\n\t **/\r\n\ttry {\r\n\t\tObject.defineProperties(p, {\r\n\t\t\tnumChildren: { get: p._getNumChildren }\r\n\t\t});\r\n\t} catch (e) {}\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\r\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\r\n\t * @method initialize\r\n\t * @deprecated in favour of `createjs.promote()`\r\n\t **/\r\n\tp.initialize = Container; // TODO: deprecated.\r\n\t\r\n\t/**\r\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n\t * This does not account for whether it would be visible within the boundaries of the stage.\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method isVisible\r\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n\t **/\r\n\tp.isVisible = function() {\r\n\t\tvar hasContent = this.cacheCanvas || this.children.length;\r\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\r\n\t};\r\n\r\n\t/**\r\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n\t * Returns true if the draw was handled (useful for overriding functionality).\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method draw\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\r\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\r\n\t * into itself).\r\n\t **/\r\n\tp.draw = function(ctx, ignoreCache) {\r\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\r\n\t\t\r\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\r\n\t\tvar list = this.children.slice();\r\n\t\tfor (var i=0,l=list.length; i<l; i++) {\r\n\t\t\tvar child = list[i];\r\n\t\t\tif (!child.isVisible()) { continue; }\r\n\t\t\t\r\n\t\t\t// draw the child:\r\n\t\t\tctx.save();\r\n\t\t\tchild.updateContext(ctx);\r\n\t\t\tchild.draw(ctx);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a child to the top of the display list.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t * \t\tcontainer.addChild(bitmapInstance);\r\n\t *\r\n\t * You can also add multiple children at once:\r\n\t *\r\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\r\n\t *\r\n\t * @method addChild\r\n\t * @param {DisplayObject} child The display object to add.\r\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\r\n\t **/\r\n\tp.addChild = function(child) {\r\n\t\tif (child == null) { return child; }\r\n\t\tvar l = arguments.length;\r\n\t\tif (l > 1) {\r\n\t\t\tfor (var i=0; i<l; i++) { this.addChild(arguments[i]); }\r\n\t\t\treturn arguments[l-1];\r\n\t\t}\r\n\t\t// Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\r\n\t\tvar par=child.parent, silent = par === this;\r\n\t\tpar&&par._removeChildAt(createjs.indexOf(par.children, child), silent);\r\n\t\tchild.parent = this;\r\n\t\tthis.children.push(child);\r\n\t\tif (!silent) { child.dispatchEvent(\"added\"); }\r\n\t\treturn child;\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\r\n\t * setting its parent to this Container.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      addChildAt(child1, index);\r\n\t *\r\n\t * You can also add multiple children, such as:\r\n\t *\r\n\t *      addChildAt(child1, child2, ..., index);\r\n\t *\r\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\r\n\t * you could use:\r\n\t *\r\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\r\n\t *\r\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\r\n\t *\r\n\t * @method addChildAt\r\n\t * @param {DisplayObject} child The display object to add.\r\n\t * @param {Number} index The index to add the child at.\r\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\r\n\t **/\r\n\tp.addChildAt = function(child, index) {\r\n\t\tvar l = arguments.length;\r\n\t\tvar indx = arguments[l-1]; // can't use the same name as the index param or it replaces arguments[1]\r\n\t\tif (indx < 0 || indx > this.children.length) { return arguments[l-2]; }\r\n\t\tif (l > 2) {\r\n\t\t\tfor (var i=0; i<l-1; i++) { this.addChildAt(arguments[i], indx+i); }\r\n\t\t\treturn arguments[l-2];\r\n\t\t}\r\n\t\tvar par=child.parent, silent = par === this;\r\n\t\tpar&&par._removeChildAt(createjs.indexOf(par.children, child), silent);\r\n\t\tchild.parent = this;\r\n\t\tthis.children.splice(index, 0, child);\r\n\t\tif (!silent) { child.dispatchEvent(\"added\"); }\r\n\t\treturn child;\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\r\n\t * already known.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      container.removeChild(child);\r\n\t *\r\n\t * You can also remove multiple children:\r\n\t *\r\n\t *      removeChild(child1, child2, ...);\r\n\t *\r\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\r\n\t * @method removeChild\r\n\t * @param {DisplayObject} child The child to remove.\r\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\r\n\t **/\r\n\tp.removeChild = function(child) {\r\n\t\tvar l = arguments.length;\r\n\t\tif (l > 1) {\r\n\t\t\tvar good = true;\r\n\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeChild(arguments[i]); }\r\n\t\t\treturn good;\r\n\t\t}\r\n\t\treturn this._removeChildAt(createjs.indexOf(this.children, child));\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      container.removeChildAt(2);\r\n\t *\r\n\t * You can also remove multiple children:\r\n\t *\r\n\t *      container.removeChild(2, 7, ...)\r\n\t *\r\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\r\n\t * @method removeChildAt\r\n\t * @param {Number} index The index of the child to remove.\r\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\r\n\t **/\r\n\tp.removeChildAt = function(index) {\r\n\t\tvar l = arguments.length;\r\n\t\tif (l > 1) {\r\n\t\t\tvar a = [];\r\n\t\t\tfor (var i=0; i<l; i++) { a[i] = arguments[i]; }\r\n\t\t\ta.sort(function(a, b) { return b-a; });\r\n\t\t\tvar good = true;\r\n\t\t\tfor (var i=0; i<l; i++) { good = good && this._removeChildAt(a[i]); }\r\n\t\t\treturn good;\r\n\t\t}\r\n\t\treturn this._removeChildAt(index);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all children from the display list.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t * \tcontainer.removeAllChildren();\r\n\t *\r\n\t * @method removeAllChildren\r\n\t **/\r\n\tp.removeAllChildren = function() {\r\n\t\tvar kids = this.children;\r\n\t\twhile (kids.length) { this._removeChildAt(0); }\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the child at the specified index.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      container.getChildAt(2);\r\n\t *\r\n\t * @method getChildAt\r\n\t * @param {Number} index The index of the child to return.\r\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\r\n\t **/\r\n\tp.getChildAt = function(index) {\r\n\t\treturn this.children[index];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns the child with the specified name.\r\n\t * @method getChildByName\r\n\t * @param {String} name The name of the child to return.\r\n\t * @return {DisplayObject} The child with the specified name.\r\n\t **/\r\n\tp.getChildByName = function(name) {\r\n\t\tvar kids = this.children;\r\n\t\tfor (var i=0,l=kids.length;i<l;i++) {\r\n\t\t\tif(kids[i].name == name) { return kids[i]; }\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t/**\r\n\t * Performs an array sort operation on the child list.\r\n\t *\r\n\t * <h4>Example: Display children with a higher y in front.</h4>\r\n\t * \r\n\t *      var sortFunction = function(obj1, obj2, options) {\r\n\t *          if (obj1.y > obj2.y) { return 1; }\r\n\t *          if (obj1.y < obj2.y) { return -1; }\r\n\t *          return 0;\r\n\t *      }\r\n\t *      container.sortChildren(sortFunction);\r\n\t *\r\n\t * @method sortChildren\r\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\r\n\t * documentation for details.\r\n\t **/\r\n\tp.sortChildren = function(sortFunction) {\r\n\t\tthis.children.sort(sortFunction);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      var index = container.getChildIndex(child);\r\n\t *\r\n\t * @method getChildIndex\r\n\t * @param {DisplayObject} child The child to return the index of.\r\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\r\n\t **/\r\n\tp.getChildIndex = function(child) {\r\n\t\treturn createjs.indexOf(this.children, child);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\r\n\t * @method swapChildrenAt\r\n\t * @param {Number} index1\r\n\t * @param {Number} index2\r\n\t **/\r\n\tp.swapChildrenAt = function(index1, index2) {\r\n\t\tvar kids = this.children;\r\n\t\tvar o1 = kids[index1];\r\n\t\tvar o2 = kids[index2];\r\n\t\tif (!o1 || !o2) { return; }\r\n\t\tkids[index1] = o2;\r\n\t\tkids[index2] = o1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\r\n\t * Container.\r\n\t * @method swapChildren\r\n\t * @param {DisplayObject} child1\r\n\t * @param {DisplayObject} child2\r\n\t **/\r\n\tp.swapChildren = function(child1, child2) {\r\n\t\tvar kids = this.children;\r\n\t\tvar index1,index2;\r\n\t\tfor (var i=0,l=kids.length;i<l;i++) {\r\n\t\t\tif (kids[i] == child1) { index1 = i; }\r\n\t\t\tif (kids[i] == child2) { index2 = i; }\r\n\t\t\tif (index1 != null && index2 != null) { break; }\r\n\t\t}\r\n\t\tif (i==l) { return; } // TODO: throw error?\r\n\t\tkids[index1] = child2;\r\n\t\tkids[index2] = child1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\r\n\t * @param {DisplayObject} child\r\n\t * @param {Number} index  \r\n\t * @method setChildIndex\r\n\t **/\r\n\tp.setChildIndex = function(child, index) {\r\n\t\tvar kids = this.children, l=kids.length;\r\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\r\n\t\tfor (var i=0;i<l;i++) {\r\n\t\t\tif (kids[i] == child) { break; }\r\n\t\t}\r\n\t\tif (i==l || i == index) { return; }\r\n\t\tkids.splice(i,1);\r\n\t\tkids.splice(index,0,child);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\r\n\t * of this container.\r\n\t * @method contains\r\n\t * @param {DisplayObject} child The DisplayObject to be checked.\r\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\r\n\t **/\r\n\tp.contains = function(child) {\r\n\t\twhile (child) {\r\n\t\t\tif (child == this) { return true; }\r\n\t\t\tchild = child.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\r\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\r\n\t * transform properties including regX/Y.\r\n\t * @method hitTest\r\n\t * @param {Number} x The x position to check in the display object's local coordinates.\r\n\t * @param {Number} y The y position to check in the display object's local coordinates.\r\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\r\n\t * coordinates.\r\n\t **/\r\n\tp.hitTest = function(x, y) {\r\n\t\t// TODO: optimize to use the fast cache check where possible.\r\n\t\treturn (this.getObjectUnderPoint(x, y) != null);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\r\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\r\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\r\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\r\n\t * and only if the mouse's position has changed.\r\n\t * \r\n\t * <ul>\r\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\r\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\r\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\r\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\r\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\r\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\r\n\t * </li>\r\n\t * \r\n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\r\n\t * @method getObjectsUnderPoint\r\n\t * @param {Number} x The x position in the container to test.\r\n\t * @param {Number} y The y position in the container to test.\r\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\r\n\t **/\r\n\tp.getObjectsUnderPoint = function(x, y, mode) {\r\n\t\tvar arr = [];\r\n\t\tvar pt = this.localToGlobal(x, y);\r\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode>0, mode==1);\r\n\t\treturn arr;\r\n\t};\r\n\r\n\t/**\r\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\r\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\r\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\r\n\t * @method getObjectUnderPoint\r\n\t * @param {Number} x The x position in the container to test.\r\n\t * @param {Number} y The y position in the container to test.\r\n\t * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\r\n\t **/\r\n\tp.getObjectUnderPoint = function(x, y, mode) {\r\n\t\tvar pt = this.localToGlobal(x, y);\r\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode>0, mode==1);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Docced in superclass.\r\n\t */\r\n\tp.getBounds = function() {\r\n\t\treturn this._getBounds(null, true);\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Docced in superclass.\r\n\t */\r\n\tp.getTransformedBounds = function() {\r\n\t\treturn this._getBounds();\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\r\n\t * reverted to their defaults (for example .parent).\r\n\t * @method clone\r\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\r\n\t * properties of the container will be cloned, but the new instance will not have any children.\r\n\t * @return {Container} A clone of the current Container instance.\r\n\t **/\r\n\tp.clone = function(recursive) {\r\n\t\tvar o = this._cloneProps(new Container());\r\n\t\tif (recursive) { this._cloneChildren(o); }\r\n\t\treturn o;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a string representation of this object.\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[Container (name=\"+  this.name +\")]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _tick\r\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n\t * @protected\r\n\t **/\r\n\tp._tick = function(evtObj) {\r\n\t\tif (this.tickChildren) {\r\n\t\t\tfor (var i=this.children.length-1; i>=0; i--) {\r\n\t\t\t\tvar child = this.children[i];\r\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.DisplayObject__tick(evtObj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Recursively clones all children of this container, and adds them to the target container.\r\n\t * @method cloneChildren\r\n\t * @protected\r\n\t * @param {Container} o The target container.\r\n\t **/\r\n\tp._cloneChildren = function(o) {\r\n\t\tif (o.children.length) { o.removeAllChildren(); }\r\n\t\tvar arr = o.children;\r\n\t\tfor (var i=0, l=this.children.length; i<l; i++) {\r\n\t\t\tvar clone = this.children[i].clone(true);\r\n\t\t\tclone.parent = o;\r\n\t\t\tarr.push(clone);\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\r\n\t * Used by `removeChildAt`, `addChild`, and `addChildAt`.\r\n\t * @method removeChildAt\r\n\t * @protected\r\n\t * @param {Number} index The index of the child to remove.\r\n\t * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\r\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\r\n\t **/\r\n\tp._removeChildAt = function(index, silent) {\r\n\t\tif (index < 0 || index > this.children.length-1) { return false; }\r\n\t\tvar child = this.children[index];\r\n\t\tif (child) { child.parent = null; }\r\n\t\tthis.children.splice(index, 1);\r\n\t\tif (!silent) { child.dispatchEvent(\"removed\"); }\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * @method _getObjectsUnderPoint\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {Array} arr\r\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\r\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\r\n\t * @param {Number} currentDepth Indicates the current depth of the search.\r\n\t * @return {DisplayObject}\r\n\t * @protected\r\n\t **/\r\n\tp._getObjectsUnderPoint = function(x, y, arr, mouse, activeListener, currentDepth) {\r\n\t\tcurrentDepth = currentDepth || 0;\r\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\r\n\t\tvar mtx, ctx = createjs.DisplayObject._hitTestContext;\r\n\t\tactiveListener = activeListener || (mouse&&this._hasMouseEventListener());\r\n\r\n\t\t// draw children one at a time, and check if we get a hit:\r\n\t\tvar children = this.children, l = children.length;\r\n\t\tfor (var i=l-1; i>=0; i--) {\r\n\t\t\tvar child = children[i];\r\n\t\t\tvar hitArea = child.hitArea;\r\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\r\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\r\n\t\t\t\r\n\t\t\t// if a child container has a hitArea then we only need to check its hitAre2a, so we can treat it as a normal DO:\r\n\t\t\tif (!hitArea && child instanceof Container) {\r\n\t\t\t\tvar result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth+1);\r\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\r\n\t\t\t} else {\r\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\r\n\t\t\t\t\r\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\r\n\t\t\t\tvar props = child.getConcatenatedDisplayProps(child._props);\r\n\t\t\t\tmtx = props.matrix;\r\n\t\t\t\t\r\n\t\t\t\tif (hitArea) {\r\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\r\n\t\t\t\t\tprops.alpha = hitArea.alpha;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx.globalAlpha = props.alpha;\r\n\t\t\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\r\n\t\t\t\t(hitArea||child).draw(ctx);\r\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\r\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\t\tif (arr) { arr.push(child); }\r\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _testMask\r\n\t * @param {DisplayObject} target\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\r\n\t * @protected\r\n\t **/\r\n\tp._testMask = function(target, x, y) {\r\n\t\tvar mask = target.mask;\r\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\r\n\t\t\r\n\t\tvar mtx = this._props.matrix, parent = target.parent;\r\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\r\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\r\n\t\t\r\n\t\tvar ctx = createjs.DisplayObject._hitTestContext;\r\n\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\r\n\t\t\r\n\t\t// draw the mask as a solid fill:\r\n\t\tmask.graphics.drawAsPath(ctx);\r\n\t\tctx.fillStyle = \"#000\";\r\n\t\tctx.fill();\r\n\t\t\r\n\t\tif (!this._testHit(ctx)) { return false; }\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _getBounds\r\n\t * @param {Matrix2D} matrix\r\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._getBounds = function(matrix, ignoreTransform) {\r\n\t\tvar bounds = this.DisplayObject_getBounds();\r\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\r\n\t\t\r\n\t\tvar mtx = this._props.matrix;\r\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\r\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\r\n\t\t\r\n\t\tvar l = this.children.length, rect=null;\r\n\t\tfor (var i=0; i<l; i++) {\r\n\t\t\tvar child = this.children[i];\r\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\r\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\r\n\t\t\telse { rect = bounds.clone(); }\r\n\t\t}\r\n\t\treturn rect;\r\n\t};\r\n\r\n\r\n\tcreatejs.Container = createjs.promote(Container, \"DisplayObject\");\r\n}());\n\n//##############################################################################\n// Stage.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * method is called, it will render its display list to its target canvas.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n\t * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvasElementId\");\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * @class Stage\n\t * @extends Container\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t **/\n\tfunction Stage(canvas) {\n\t\tthis.Container_constructor();\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.autoClear = true;\n\t\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t **/\n\t\tthis.canvas = (typeof canvas == \"string\") ? document.getElementById(canvas) : canvas;\n\t\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tthis.mouseX = 0;\n\t\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tthis.mouseY = 0;\n\t\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\t\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.snapToPixelEnabled = false;\n\t\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.mouseInBounds = false;\n\t\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.tickOnUpdate = true;\n\t\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.mouseMoveOutside = false;\n\t\t\n\t\t\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.preventSelection = true;\n\t\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\t \n\t\t \n\t// private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\t\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\t\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\t\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._mouseOverIntervalID = null;\n\t\t\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n\t\tthis._nextStage = null;\n\t\t\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n\t\tthis._prevStage = null;\n\t\t\n\t\t\n\t// initialize:\n\t\tthis.enableDOMEvents(true);\n\t}\n\tvar p = createjs.extend(Stage, createjs.Container);\n\n// events:\n\t/**\n\t * Dispatched when the user moves the mouse over the canvas.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemousemove\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event stagemousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n\t * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemouseup\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseleave\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseenter\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately before the tick event is propagated through the display list.\n\t * You can call preventDefault on the event object to cancel propagating the tick event.\n\t * @event tickstart\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n\t * tickOnUpdate is false. Precedes the \"drawstart\" event.\n\t * @event tickend\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n\t * You can call preventDefault on the event object to cancel the draw.\n\t * @event drawstart\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t * @since 0.7.0\n\t */\n\n\t \n// getter / setters:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t * \n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t * \n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t * \n\t *\ttargetStage.enableDOMEvents(false);\n\t * \n\t * @property nextStage\n\t * @type {Stage}\n\t **/\n\tp._get_nextStage = function() {\n\t\treturn this._nextStage;\n\t};\n\tp._set_nextStage = function(value) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (value) { value._prevStage = this; }\n\t\tthis._nextStage = value;\n\t};\n\t\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tnextStage: { get: p._get_nextStage, set: p._set_nextStage }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t **/\n\tp.update = function(props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tcreatejs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tvar r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t};\n\t\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t * \t\t\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t * \t\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t * \n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t **/\n\tp.tick = function(props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tvar evtObj = new createjs.Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (var n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t};\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage);\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t **/\n\tp.handleEvent = function(evt) {\n\t\tif (evt.type == \"tick\") { this.update(evt); }\n\t};\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t **/\n\tp.clear = function() {\n\t\tif (!this.canvas) { return; }\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t};\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t **/\n\tp.toDataURL = function(backgroundColor, mimeType) {\n\t\tvar data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\t\t\t\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tvar dataURL = this.canvas.toDataURL(mimeType||\"image/png\");\n\n\t\tif(backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t};\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t **/\n\tp.enableMouseOver = function(frequency) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency == 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency == null) { frequency = 20; }\n\t\telse if (frequency <= 0) { return; }\n\t\tvar o = this;\n\t\tthis._mouseOverIntervalID = setInterval(function(){ o._testMouseOver(); }, 1000/Math.min(50,frequency));\n\t};\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t **/\n\tp.enableDOMEvents = function(enable) {\n\t\tif (enable == null) { enable = true; }\n\t\tvar n, o, ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (n in ls) {\n\t\t\t\to = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tvar t = window.addEventListener ? window : document;\n\t\t\tvar _this = this;\n\t\t\tls = this._eventListeners = {};\n\t\t\tls[\"mouseup\"] = {t:t, f:function(e) { _this._handleMouseUp(e)} };\n\t\t\tls[\"mousemove\"] = {t:t, f:function(e) { _this._handleMouseMove(e)} };\n\t\t\tls[\"dblclick\"] = {t:this.canvas, f:function(e) { _this._handleDoubleClick(e)} };\n\t\t\tls[\"mousedown\"] = {t:this.canvas, f:function(e) { _this._handleMouseDown(e)} };\n\n\t\t\tfor (n in ls) {\n\t\t\t\to = ls[n];\n\t\t\t\to.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"Stage cannot be cloned.\");\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Stage (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t **/\n\tp._getElementRect = function(e) {\n\t\tvar bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top: e.offsetTop, left: e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tvar offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tvar offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tvar styles = window.getComputedStyle ? getComputedStyle(e,null) : e.currentStyle; // IE <9 compatibility.\n\t\tvar padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tvar padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tvar padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tvar padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t}\n\t};\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t **/\n\tp._getPointerData = function(id) {\n\t\tvar data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0,y:0}; }\n\t\treturn data;\n\t};\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseMove = function(e) {\n\t\tif(!e){ e = window.event; }\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t};\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerMove = function(id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tvar nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tvar inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds == !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\t\t\t\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\t\t\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t};\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t **/\n\tp._updatePointerPosition = function(id, e, pageX, pageY) {\n\t\tvar rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tvar w = this.canvas.width;\n\t\tvar h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tvar o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseUp = function(e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t};\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerUp = function(id, e, clear, owner) {\n\t\tvar nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\n\t\tvar target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\t\t\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\t\t\n\t\tif (target == oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\t\t\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\t\t\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t};\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseDown = function(e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t};\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerDown = function(id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\t\t\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tvar target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\t\t\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t};\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t **/\n\tp._testMouseOver = function(clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\n\t\tvar nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tvar o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds)) { return; }\n\t\t\n\t\tvar e = o.posEvtObj;\n\t\tvar isEventTarget = eventTarget || e&&(e.target == this.canvas);\n\t\tvar target=null, common = -1, cursor=\"\", t, i, l;\n\t\t\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tvar oldList = this._mouseOverTarget||[];\n\t\tvar oldTarget = oldList[oldList.length-1];\n\t\tvar list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tt = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\t\t\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t};\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handleDoubleClick = function(e, owner) {\n\t\tvar target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t};\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t **/\n\tp._dispatchMouseEvent = function(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tvar pt = this._mtx.transformPoint(o.x, o.y);\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t};\n\n\n\tcreatejs.Stage = createjs.promote(Stage, \"Container\");\n}());\n\n//##############################################################################\n// StageGL.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/*\n * README IF EDITING:\n * Terminology for developers:\n *\n * Vertex: a point that help defines a shape, 3 per triangle. Usually has an x,y,z but can have more/less info.\n * Vertex Property: a piece of information attached to the vertex like a vector3 containing x,y,z\n * Index/Indices: used in groups of 3 to define a triangle, points to vertices by their index in an array (some render\n * \t\tmodes do not use these)\n * Card: a group of 2 triangles used to display a rectangular image\n * U/V: common names for the [0-1] texture co-ordinates on an image\n * Batch: a single call to the renderer, best done as little as possible so multiple cards are put into a single batch\n * Buffer: WebGL array data\n * Program/Shader: For every vertex we run the Vertex shader. The results are used per pixel by the Fragment shader. When\n * \t\tcombined and paired these are a shader \"program\"\n * Texture: WebGL representation of image data and associated extra information\n * Slot: A space on the GPU into which textures can be loaded for use in a batch, using \"ActiveTexture\" switches texture slot.\n */\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * A StageGL instance is the root level {{#crossLink \"Container\"}}{{/crossLink}} for an WebGL-optimized display list,\n\t * which is used in place of the usual {{#crossLink \"Stage\"}}{{/crossLink}}. This class should behave identically to\n\t * a {{#crossLink \"Stage\"}}{{/crossLink}} except for WebGL-specific functionality.\n\t *\n\t * Each time the {{#crossLink \"Stage/tick\"}}{{/crossLink}} method is called, the display list is rendered to the\n\t * target &lt;canvas/&gt; instance, ignoring non-WebGL-compatible display objects. On devices and browsers that don't\n\t * support WebGL, content will automatically be rendered to canvas 2D context instead.\n\t *\n\t * <h4>Limitations</h4>\n\t * - {{#crossLink \"Shape\"}}{{/crossLink}}, {{#crossLink \"Shadow\"}}{{/crossLink}}, and {{#crossLink \"Text\"}}{{/crossLink}}\n\t * \tare not rendered when added to the display list.\n\t * - To display something StageGL cannot render, {{#crossLink \"displayObject/cache\"}}{{/crossLink}} the object.\n\t *\tCaches can be rendered regardless of source.\n\t * - Images are wrapped as a webGL \"Texture\". Each graphics card has a limit to its concurrent Textures, too many \n\t * Textures will noticeably slow performance.\n\t * - Each cache counts as an individual Texture. As such {{#crossLink \"SpriteSheet\"}}{{/crossLink}} and \n\t * {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}} are recommended practices to help keep texture counts low.\n\t * - To use any image node (DOM Image/Canvas Element) between multiple StageGL instances it must be a \n\t * {{#crossLink \"Bitmap/clone\"}}{{/crossLink}}, otherwise the GPU texture loading and tracking will get confused.\n\t * - to avoid an up/down scaled render you must call {{#crossLink \"StageGL/updateViewport\"}}{{/crossLink}} if you\n\t * resize your canvas after making a StageGL instance, this will properly size the WebGL context stored in memory.\n\t * - Best performance in demanding scenarios will come from manual management of texture memory, but it is handled\n\t * automatically by default. See {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} for details.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a StageGL instance, adds a child to it, then uses the EaselJS {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * to update the child and redraw the stage.\n\t *\n\t *      var stage = new createjs.StageGL(\"canvasElementId\");\n\t *\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *\n\t *      createjs.Ticker.on(\"tick\", handleTick);\n\t *\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * <h4>Notes</h4>\n\t * - StageGL is not currently included in the minified version of EaselJS.\n\t * - {{#crossLink \"SpriteContainer\"}}{{/crossLink}} (the previous approach to WebGL with EaselJS) has been deprecated.\n\t * - Earlier versions of WebGL support in EaselJS (SpriteStage and SpriteContainer) had hard limitations on images\n\t * \tper container, which have been solved.\n\t *\n\t * @class StageGL\n\t * @extends Stage\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that StageGL will render to, or the string id\n\t *  of a canvas object in the current DOM.\n\t * @param {Object} options All the option parameters in a reference object, some are not supported by some browsers.\n\t * @param {Boolean} [options.preserveBuffer=false] If `true`, the canvas is NOT auto-cleared by WebGL (the spec\n\t *  discourages setting this to `true`). This is useful if you want persistent draw effects.\n\t * @param {Boolean} [options.antialias=false] Specifies whether or not the browser's WebGL implementation should try\n\t *  to perform anti-aliasing. This will also enable linear pixel sampling on power-of-two textures (smoother images).\n\t * @param {Boolean} [options.transparent=false] If `true`, the canvas is transparent. This is <strong>very</strong>\n\t * expensive, and should be used with caution.\n\t * @param {Boolean} [options.premultiply=false] Alters color handling. If `true`, this assumes the shader must\n\t * account for pre-multiplied alpha. This can help avoid visual halo effects with some assets, but may also cause\n\t * problems with other assets.\n\t * @param {Integer} [options.autoPurge=1200] How often the system should automatically dump unused textures with\n\t * `purgeTextures(autoPurge)` every `autoPurge/2` draws. See {{#crossLink \"StageGL/purgeTextures\"}}{{/crossLink}} for more\n\t * information.\n\t */\n\tfunction StageGL(canvas, options) {\n\t\tthis.Stage_constructor(canvas);\n\n\t\tif (options !== undefined) {\n\t\t\tif (typeof options !== \"object\"){ throw(\"Invalid options object\"); }\n\t\t\tvar premultiply = options.premultiply;\n\t\t\tvar transparent = options.transparent;\n\t\t\tvar antialias = options.antialias;\n\t\t\tvar preserveBuffer = options.preserveBuffer;\n\t\t\tvar autoPurge = options.autoPurge;\n\t\t}\n\n// public properties:\n\t\t/**\n\t\t * Console log potential issues and problems. This is designed to have <em>minimal</em> performance impact, so\n\t\t * if extensive debugging information is required, this may be inadequate. See {{#crossLink \"WebGLInspector\"}}{{/crossLink}}\n\t\t * @property vocalDebug\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.vocalDebug = false;\n\n// private properties:\n\t\t/**\n\t\t * Specifies whether or not the canvas is auto-cleared by WebGL. The WebGL spec discourages `true`.\n\t\t * If true, the canvas is NOT auto-cleared by WebGL. Used when the canvas context is created and requires\n\t\t * context re-creation to update.\n\t\t * @property _preserveBuffer\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._preserveBuffer = preserveBuffer||false;\n\n\t\t/**\n\t\t * Specifies whether or not the browser's WebGL implementation should try to perform anti-aliasing.\n\t\t * @property _antialias\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._antialias = antialias||false;\n\n\t\t/**\n\t\t * Specifies whether or not the browser's WebGL implementation should be transparent.\n\t\t * @property _transparent\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._transparent = transparent||false;\n\n\t\t/**\n\t\t * Specifies whether or not StageGL is handling colours as premultiplied alpha.\n\t\t * @property _premultiply\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._premultiply = premultiply||false;\n\n\t\t/**\n\t\t * Internal value of {{#crossLink \"StageGL/autoPurge\"}}{{/crossLink}}\n\t\t * @property _autoPurge\n\t\t * @protected\n\t\t * @type {Integer}\n\t\t * @default null\n\t\t */\n\t\tthis._autoPurge = undefined;\n\t\tthis.autoPurge = autoPurge;\t//getter/setter handles setting the real value and validating\n\n\t\t/**\n\t\t * The width in px of the drawing surface saved in memory.\n\t\t * @property _viewportWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._viewportWidth = 0;\n\n\t\t/**\n\t\t * The height in px of the drawing surface saved in memory.\n\t\t * @property _viewportHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._viewportHeight = 0;\n\n\t\t/**\n\t\t * A 2D projection matrix used to convert WebGL's viewspace into canvas co-ordinates. Regular canvas display\n\t\t * uses Top-Left values of [0,0] where WebGL uses a Center [0,0] Top-Right [1,1] (euclidean) system.\n\t\t * @property _projectionMatrix\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._projectionMatrix = null;\n\n\t\t/**\n\t\t * The current WebGL canvas context. Often shorthanded to just \"gl\" in many parts of the code.\n\t\t * @property _webGLContext\n\t\t * @protected\n\t\t * @type {WebGLRenderingContext}\n\t\t * @default null\n\t\t */\n\t\tthis._webGLContext = null;\n\n\t\t/**\n\t\t * The color to use when the WebGL canvas has been cleared. May appear as a background color. Defaults to grey.\n\t\t * @property _clearColor\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default {r: 0.50, g: 0.50, b: 0.50, a: 0.00}\n\t\t */\n\t\tthis._clearColor = {r: 0.50, g: 0.50, b: 0.50, a: 0.00};\n\n\t\t/**\n\t\t * The maximum number of cards (aka a single sprite) that can be drawn in one draw call. Use getter/setters to\n\t\t * modify otherwise internal buffers may be incorrect sizes.\n\t\t * @property _maxCardsPerBatch\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default StageGL.DEFAULT_MAX_BATCH_SIZE (10000)\n\t\t */\n\t\tthis._maxCardsPerBatch = StageGL.DEFAULT_MAX_BATCH_SIZE;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//TODO: write getter/setters for this\n\n\t\t/**\n\t\t * The shader program used to draw the current batch.\n\t\t * @property _activeShader\n\t\t * @protected\n\t\t * @type {WebGLProgram}\n\t\t * @default null\n\t\t */\n\t\tthis._activeShader = null;\n\n\t\t/**\n\t\t * The vertex position data for the current draw call.\n\t\t * @property _vertices\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._vertices = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_vertices:property\"}}{{/crossLink}}.\n\t\t * @property _vertexPositionBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._vertexPositionBuffer = null;\n\n\t\t/**\n\t\t * The vertex U/V data for the current draw call.\n\t\t * @property _uvs\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._uvs = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_uvs:property\"}}{{/crossLink}}.\n\t\t * @property _uvPositionBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._uvPositionBuffer = null;\n\n\t\t/**\n\t\t * The vertex indices data for the current draw call.\n\t\t * @property _indices\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._indices = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_indices:property\"}}{{/crossLink}}.\n\t\t * @property _textureIndexBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._textureIndexBuffer = null;\n\n\t\t/**\n\t\t * The vertices data for the current draw call.\n\t\t * @property _alphas\n\t\t * @protected\n\t\t * @type {Float32Array}\n\t\t * @default null\n\t\t */\n\t\tthis._alphas = null;\n\n\t\t/**\n\t\t * The WebGL buffer attached to {{#crossLink \"StageGL/_alphas:property\"}}{{/crossLink}}.\n\t\t * @property _alphaBuffer\n\t\t * @protected\n\t\t * @type {WebGLBuffer}\n\t\t * @default null\n\t\t */\n\t\tthis._alphaBuffer = null;\n\n\t\t/**\n\t\t * An index based lookup of every WebGL Texture currently in use.\n\t\t * @property _drawTexture\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._textureDictionary = [];\n\n\t\t/**\n\t\t * A string based lookup hash of which index a texture is stored at in the dictionary. The lookup string is\n\t\t * often the src url.\n\t\t * @property _textureIDs\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._textureIDs = {};\n\n\t\t/**\n\t\t * An array of all the textures currently loaded into the GPU. The index in the array matches the GPU index.\n\t\t * @property _batchTextures\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._batchTextures = [];\n\n\t\t/**\n\t\t * An array of all the simple filler textures used to prevent issues with missing textures in a batch.\n\t\t * @property _baseTextures\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._baseTextures = [];\n\n\t\t/**\n\t\t * The number of concurrent textures the GPU can handle. This value is dynamically set from WebGL during initialization\n\t\t * via `gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)`. The WebGL spec states that the lowest guaranteed value is 8,\n\t\t * but it could be higher. Do not set this value higher than the value returned by the GPU. Setting it lower will\n\t\t * probably reduce performance, but may be advisable to reserve slots for custom filter work.\n\t\t * NOTE: Can also act as a length for {{#crossLink \"StageGL/_batchTextures:property\"}}.\n\t\t * @property _batchTextureCount\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 8\n\t\t */\n\t\tthis._batchTextureCount = 8;\n\n\t\t/**\n\t\t * The location at which the last texture was inserted into a GPU slot in {{#crossLink \"StageGL/_batchTextures:property\"}}{{/crossLink}}.\n\t\t * Manual control of this variable can yield improvements in performance by intelligently replacing textures\n\t\t * inside a batch to reduce texture re-load. It is impossible to write automated general use code, as it requires\n\t\t * display list look ahead inspection and/or render foreknowledge.\n\t\t * @property _lastTextureInsert\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tthis._lastTextureInsert = -1;\n\n\t\t/**\n\t\t * The current batch being drawn, A batch consists of a call to `drawElements` on the GPU. Many of these calls\n\t\t * can occur per draw.\n\t\t * @property _batchId\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._batchID = 0;\n\n\t\t/**\n\t\t * The current draw being performed, may contain multiple batches. Comparing to {{#crossLink \"StageGL/_batchID:property\"}}{{/crossLink}}\n\t\t * can reveal batching efficiency.\n\t\t * @property _drawID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawID = 0;\n\n\t\t/**\n\t\t * Used to prevent textures in certain GPU slots from being replaced by an insert.\n\t\t * @property _slotBlackList\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._slotBlacklist = [];\n\n\t\t/**\n\t\t * Used to prevent nested draw calls from accidentally overwriting drawing information by tracking depth.\n\t\t * @property _isDrawing\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._isDrawing = 0;\n\n\t\t/**\n\t\t * Used to ensure every canvas used as a texture source has a unique ID.\n\t\t * @property _lastTrackedCanvas\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._lastTrackedCanvas = 0;\n\n\t\t/**\n\t\t * Controls whether final rendering output of a {{#crossLink \"cacheDraw\"}}{{/crossLink}} is the canvas or a render\n\t\t * texture. See the {{#crossLink \"cache\"}}{{/crossLink}} function modifications for full implications and discussion.\n\t\t * @property isCacheControlled\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @todo LM: is this supposed to be _isCacheControlled since its private?\n\t\t */\n\t\tthis.isCacheControlled = false;\n\n\t\t/**\n\t\t * Used to counter-position the object being cached so it aligns with the cache surface. Additionally ensures\n\t\t * that all rendering starts with a top level container.\n\t\t * @property _cacheContainer\n\t\t * @protected\n\t\t * @type {Container}\n\t\t * @default An instance of an EaselJS Container.\n\t\t */\n\t\tthis._cacheContainer = new createjs.Container();\n\n\t\t// and begin\n\t\tthis._initializeWebGL();\n\t}\n\tvar p = createjs.extend(StageGL, createjs.Stage);\n\n// static methods:\n\t/**\n\t * Calculate the U/V co-ordinate based info for sprite frames. Instead of pixel count it uses a 0-1 space. Also includes\n\t * the ability to get info back for a specific frame, or only calculate that one frame.\n\t *\n\t *     //generate UV rects for all entries\n\t *     StageGL.buildUVRects( spriteSheetA );\n\t *     //generate all, fetch the first\n\t *     var firstFrame = StageGL.buildUVRects( spriteSheetB, 0 );\n\t *     //generate the rect for just a single frame for performance's sake\n\t *     var newFrame = StageGL.buildUVRects( dynamicSpriteSheet, newFrameIndex, true );\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method buildUVRects\n\t * @param  {SpriteSheet} spritesheet The spritesheet to find the frames on\n\t * @param  {int} [target=-1] The index of the frame to return\n\t * @param  {Boolean} [onlyTarget=false] Whether \"target\" is the only frame that gets calculated\n\t * @static\n\t * @return {Object} the target frame if supplied and present or a generic frame {t, l, b, r}\n\t */\n\tStageGL.buildUVRects = function (spritesheet, target, onlyTarget) {\n\t\tif (!spritesheet || !spritesheet._frames) { return null; }\n\t\tif (target === undefined) { target = -1; }\n\t\tif (onlyTarget === undefined) { onlyTarget = false; }\n\n\t\tvar start = (target != -1 && onlyTarget)?(target):(0);\n\t\tvar end = (target != -1 && onlyTarget)?(target+1):(spritesheet._frames.length);\n\t\tfor (var i=start; i<end; i++) {\n\t\t\tvar f = spritesheet._frames[i];\n\t\t\tif (f.uvRect || f.image.width <= 0 || f.image.height <= 0) { continue; }\n\n\t\t\tvar r = f.rect;\n\t\t\tf.uvRect = {\n\t\t\t\tt: r.y / f.image.height,\n\t\t\t\tl: r.x / f.image.width,\n\t\t\t\tb: (r.y + r.height) / f.image.height,\n\t\t\t\tr: (r.x + r.width) / f.image.width\n\t\t\t};\n\t\t}\n\n\t\treturn spritesheet._frames[(target != -1) ? target : 0].uvRect || {t:0, l:0, b:1, r:1};\n\t};\n\n\t/**\n\t * Test a context to see if it has WebGL enabled on it.\n\t * @method isWebGLActive\n\t * @param {CanvasContext} ctx The context to test\n\t * @static\n\t * @return {Boolean} Whether WebGL is enabled\n\t */\n\tStageGL.isWebGLActive = function (ctx) {\n\t\treturn ctx &&\n\t\t\tctx instanceof WebGLRenderingContext &&\n\t\t\ttypeof WebGLRenderingContext !== 'undefined';\n\t};\n\n// static properties:\n\t/**\n\t * The number of properties defined per vertex (x, y, textureU, textureV, textureIndex, alpha)\n\t * @property VERTEX_PROPERTY_COUNT\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 6\n\t * @readonly\n\t */\n\tStageGL.VERTEX_PROPERTY_COUNT = 6;\n\n\t/**\n\t * The number of triangle indices it takes to form a Card. 3 per triangle, 2 triangles.\n\t * @property INDICIES_PER_CARD\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 6\n\t * @readonly\n\t */\n\tStageGL.INDICIES_PER_CARD = 6;\n\n\t/**\n\t * The default value for the maximum number of cards we want to process in a batch. See\n\t * {{#crossLink \"StageGL/WEBGL_MAX_INDEX_NUM:property\"}}{{/crossLink}} for a hard limit.\n\t * @property DEFAULT_MAX_BATCH_SIZE\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 10000\n\t * @readonly\n\t */\n\tStageGL.DEFAULT_MAX_BATCH_SIZE = 10000;\n\n\t/**\n\t * The maximum size WebGL allows for element index numbers. Uses a 16 bit unsigned integer. It takes 6 indices to\n\t * make a unique card.\n\t * @property WEBGL_MAX_INDEX_NUM\n\t * @static\n\t * @final\n\t * @type {Number}\n\t * @default 65536\n\t * @readonly\n\t */\n\tStageGL.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16);\n\n\t/**\n\t * Default U/V rect for dealing with full coverage from an image source.\n\t * @property UV_RECT\n\t * @static\n\t * @final\n\t * @type {Object}\n\t * @default {t:0, l:0, b:1, r:1}\n\t * @readonly\n\t */\n\tStageGL.UV_RECT = {t:0, l:0, b:1, r:1};\n\n\ttry {\n\t\t/**\n\t\t * Vertex positions for a card that covers the entire render. Used with render targets primarily.\n\t\t * @property COVER_VERT\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n\t\tStageGL.COVER_VERT = new Float32Array([\n\t\t\t-1,\t\t 1,\t\t//TL\n\t\t\t1,\t\t 1,\t\t//TR\n\t\t\t-1,\t\t-1,\t\t//BL\n\t\t\t1,\t\t 1,\t\t//TR\n\t\t\t1,\t\t-1,\t\t//BR\n\t\t\t-1,\t\t-1\t\t//BL\n\t\t]);\n\n\t\t/**\n\t\t * U/V for {{#crossLink \"StageGL/COVER_VERT:property\"}}{{/crossLink}}.\n\t\t * @property COVER_UV\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n\t\tStageGL.COVER_UV = new Float32Array([\n\t\t\t 0,\t\t 0,\t\t//TL\n\t\t\t 1,\t\t 0,\t\t//TR\n\t\t\t 0,\t\t 1,\t\t//BL\n\t\t\t 1,\t\t 0,\t\t//TR\n\t\t\t 1,\t\t 1,\t\t//BR\n\t\t\t 0,\t\t 1\t\t//BL\n\t\t]);\n\n\t\t/**\n\t\t * Flipped U/V for {{#crossLink \"StageGL:COVER_VERT:property\"}}{{/crossLink}}.\n\t\t * @property COVER_UV_FLIP\n\t\t * @static\n\t\t * @final\n\t\t * @type {Float32Array}\n\t\t * @readonly\n\t\t */\n\t\tStageGL.COVER_UV_FLIP = new Float32Array([\n\t\t\t 0,\t\t 1,\t\t//TL\n\t\t\t 1,\t\t 1,\t\t//TR\n\t\t\t 0,\t\t 0,\t\t//BL\n\t\t\t 1,\t\t 1,\t\t//TR\n\t\t\t 1,\t\t 0,\t\t//BR\n\t\t\t 0,\t\t 0\t\t//BL\n\t\t]);\n\t} catch(e) { /* Breaking in older browsers, but those browsers wont run StageGL so no recovery or warning needed */ }\n\n\t/**\n\t * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n\t * regular shader is designed to render all expected objects. Shader code may contain templates that are replaced\n\t * pre-compile.\n\t * @property REGULAR_VARYING_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_VARYING_HEADER = (\n\t\t\"precision mediump float;\" +\n\t\t\"varying vec2 vTextureCoord;\" +\n\t\t\"varying lowp float indexPicker;\" +\n\t\t\"varying lowp float alphaValue;\"\n\t);\n\n\t/**\n\t * Actual full header for the vertex shader. Includes the varying header. The regular shader is designed to render\n\t * all expected objects. Shader code may contain templates that are replaced pre-compile.\n\t * @property REGULAR_VERTEX_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_VERTEX_HEADER = (\n\t\tStageGL.REGULAR_VARYING_HEADER +\n\t\t\"attribute vec2 vertexPosition;\" +\n\t\t\"attribute vec2 uvPosition;\" +\n\t\t\"attribute lowp float textureIndex;\" +\n\t\t\"attribute lowp float objectAlpha;\" +\n\t\t\"uniform mat4 pMatrix;\"\n\t);\n\n\t/**\n\t * Actual full header for the fragment shader. Includes the varying header. The regular shader is designed to render\n\t * all expected objects. Shader code may contain templates that are replaced pre-compile.\n\t * @property REGULAR_FRAGMENT_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_FRAGMENT_HEADER = (\n\t\tStageGL.REGULAR_VARYING_HEADER +\n\t\t\"uniform sampler2D uSampler[{{count}}];\"\n\t);\n\n\t/**\n\t * Body of the vertex shader. The regular shader is designed to render all expected objects. Shader code may contain\n\t * templates that are replaced pre-compile.\n\t * @property REGULAR_VERTEX_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_VERTEX_BODY  = (\n\t\t\"void main(void) {\" +\n\t\t\t//DHG TODO: This doesn't work. Must be something wrong with the hand built matrix see js... bypass for now\n\t\t\t//vertexPosition, round if flag\n\t\t\t//\"gl_Position = pMatrix * vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n\t\t\t\"gl_Position = vec4(\"+\n\t\t\t\t\"(vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],\" +\n\t\t\t\t\"(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],\" +\n\t\t\t\t\"pMatrix[3][2],\" +\n\t\t\t\t\"1.0\" +\n\t\t\t\");\" +\n\t\t\t\"alphaValue = objectAlpha;\" +\n\t\t\t\"indexPicker = textureIndex;\" +\n\t\t\t\"vTextureCoord = uvPosition;\" +\n\t\t\"}\"\n\t);\n\n\t/**\n\t * Body of the fragment shader. The regular shader is designed to render all expected objects. Shader code may\n\t * contain templates that are replaced pre-compile.\n\t * @property REGULAR_FRAGMENT_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.REGULAR_FRAGMENT_BODY = (\n\t\t\"void main(void) {\" +\n\t\t\t\"vec4 color = vec4(1.0, 0.0, 0.0, 1.0);\" +\n\n\t\t\t\"if (indexPicker <= 0.5) {\" +\n\t\t\t\t\"color = texture2D(uSampler[0], vTextureCoord);\" +\n\t\t\t\t\"{{alternates}}\" +\n\t\t\t\"}\" +\n\n\t\t\t\"{{fragColor}}\" +\n\t\t\"}\"\n\t);\n\tStageGL.REGULAR_FRAG_COLOR_NORMAL = (\n\t\t\"gl_FragColor = vec4(color.rgb, color.a * alphaValue);\"\n\t);\n\tStageGL.REGULAR_FRAG_COLOR_PREMULTIPLY = (\n\t\t\"if(color.a > 0.0035) {\" +\t\t// 1/255 = 0.0039, so ignore any value below 1 because it's probably noise\n\t\t\t\"gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);\" +\n\t\t\"} else {\" +\n\t\t\t\"gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\" +\n\t\t\"}\"\n\t);\n\n\t//TODO: DHG: a real particle shader\n\t/**\n\t * @property PARTICLE_VERTEX_BODY\n\t * @todo\n\t * @final\n\t * @static\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.PARTICLE_VERTEX_BODY = (\n\t\tStageGL.REGULAR_VERTEX_BODY\n\t);\n\t/**\n\t * @property PARTICLE_FRAGMENT_BODY\n\t * @todo\n\t * @final\n\t * @static\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.PARTICLE_FRAGMENT_BODY = (\n\t\tStageGL.REGULAR_FRAGMENT_BODY\n\t);\n\n\t/**\n\t * Portion of the shader that contains the \"varying\" properties required in both vertex and fragment shaders. The\n\t * cover shader is designed to be a simple vertex/uv only texture render that covers the render surface. Shader\n\t * code may contain templates that are replaced pre-compile.\n\t * @property COVER_VARYING_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_VARYING_HEADER = (\n\t\t\"precision mediump float;\" +\n\n\t\t\"varying highp vec2 vRenderCoord;\" +\n\t\t\"varying highp vec2 vTextureCoord;\"\n\t);\n\n\t/**\n\t * Actual full header for the vertex shader. Includes the varying header. The cover shader is designed to be a\n\t * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n\t * replaced pre-compile.\n\t * @property COVER_VERTEX_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_VERTEX_HEADER = (\n\t\tStageGL.COVER_VARYING_HEADER +\n\t\t\"attribute vec2 vertexPosition;\" +\n\t\t\"attribute vec2 uvPosition;\" +\n\t\t\"uniform float uUpright;\"\n\t);\n\n\t/**\n\t * Actual full header for the fragment shader. Includes the varying header. The cover shader is designed to be a\n\t * simple vertex/uv only texture render that covers the render surface. Shader code may contain templates that are\n\t * replaced pre-compile.\n\t * @property COVER_FRAGMENT_HEADER\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_FRAGMENT_HEADER = (\n\t\tStageGL.COVER_VARYING_HEADER +\n\t\t\"uniform sampler2D uSampler;\"\n\t);\n\n\t/**\n\t * Body of the vertex shader. The cover shader is designed to be a simple vertex/uv only texture render that covers\n\t * the render surface. Shader code may contain templates that are replaced pre-compile.\n\t * @property COVER_VERTEX_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_VERTEX_BODY  = (\n\t\t\"void main(void) {\" +\n\t\t\t\"gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);\" +\n\t\t\t\"vRenderCoord = uvPosition;\" +\n\t\t\t\"vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));\" +\n\t\t\"}\"\n\t);\n\n\t/**\n\t * Body of the fragment shader. The cover shader is designed to be a simple vertex/uv only texture render that\n\t * covers the render surface. Shader code may contain templates that are replaced pre-compile.\n\t * @property COVER_FRAGMENT_BODY\n\t * @static\n\t * @final\n\t * @type {String}\n\t * @readonly\n\t */\n\tStageGL.COVER_FRAGMENT_BODY = (\n\t\t\"void main(void) {\" +\n\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\t\t\t\"gl_FragColor = color;\" +\n\t\t\"}\"\n\t);\n\n// events:\n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it. You can call\n\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} on the event to cancel the draw.\n\t * @event drawstart\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t */\n\n// getter / setters:\n\tp._get_isWebGL = function () {\n\t\treturn !!this._webGLContext;\n\t};\n\n\tp._set_autoPurge = function (value) {\n\t\tvalue = isNaN(value)?1200:value;\n\t\tif (value != -1) {\n\t\t\tvalue = value<10?10:value;\n\t\t}\n\t\tthis._autoPurge = value;\n\t};\n\tp._get_autoPurge = function () {\n\t\treturn Number(this._autoPurge);\n\t};\n\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\t/**\n\t\t\t * Indicates whether WebGL is being used for rendering. For example, this would be `false` if WebGL is not\n\t\t\t * supported in the browser.\n\t\t\t * @property isWebGL\n\t\t\t * @type {Boolean}\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tisWebGL: { get: p._get_isWebGL },\n\n\t\t\t/**\n\t\t\t * Specifies whether or not StageGL is automatically purging unused textures. Higher numbers purge less\n\t\t\t * often. Values below 10 are upgraded to 10, and -1 disables this feature.\n\t\t\t * @property autoPurge\n\t\t\t * @protected\n\t\t\t * @type {Integer}\n\t\t\t * @default 1000\n\t\t\t */\n\t\t\tautoPurge: { get: p._get_autoPurge, set: p._set_autoPurge }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// constructor methods:\n\t/**\n\t * Create and properly initialize the WebGL instance.\n\t * @method _initializeWebGL\n\t * @protected\n\t * @return {WebGLRenderingContext}\n\t */\n\tp._initializeWebGL = function () {\n\t\tif (this.canvas) {\n\t\t\tif (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {\n\t\t\t\t// A context hasn't been defined yet,\n\t\t\t\t// OR the defined context belongs to a different canvas, so reinitialize.\n\n\t\t\t\t// defaults and options\n\t\t\t\tvar options = {\n\t\t\t\t\tdepth: false, // Disable the depth buffer as it isn't used.\n\t\t\t\t\talpha: this._transparent, // Make the canvas background transparent.\n\t\t\t\t\tstencil: true,\n\t\t\t\t\tantialias: this._antialias,\n\t\t\t\t\tpremultipliedAlpha: this._premultiply, // Assume the drawing buffer contains colors with premultiplied alpha.\n\t\t\t\t\tpreserveDrawingBuffer: this._preserveBuffer\n\t\t\t\t};\n\n\t\t\t\tvar gl = this._webGLContext = this._fetchWebGLContext(this.canvas, options);\n\t\t\t\tif (!gl) { return null; }\n\n\t\t\t\tthis.updateSimultaneousTextureCount(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n\t\t\t\tthis._maxTextureSlots = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\t\t\tthis._createBuffers(gl);\n\t\t\t\tthis._initTextures(gl);\n\n\t\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\t\tgl.enable(gl.BLEND);\n\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply);\n\t\t\t\t//gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\n\t\t\t\tthis._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n\t\t\t\tthis.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._webGLContext = null;\n\t\t}\n\t\treturn this._webGLContext;\n\t};\n\n// public methods:\n\t/**\n\t * Docced in superclass\n\t */\n\tp.update = function (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tthis.dispatchEvent(\"drawstart\");\n\t\tif (this.autoClear) { this.clear(); }\n\n\t\tif (this._webGLContext) {\n\t\t\t// Use WebGL.\n\t\t\tthis._batchDraw(this, this._webGLContext);\n\t\t\tif (this._autoPurge != -1 && !(this._drawID%((this._autoPurge/2)|0))) {\n\t\t\t\tthis.purgeTextures(this._autoPurge);\n\t\t\t}\n\t\t} else {\n\t\t\t// Use 2D.\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\t\tctx.save();\n\t\t\tthis.updateContext(ctx);\n\t\t\tthis.draw(ctx, false);\n\t\t\tctx.restore();\n\t\t}\n\t\tthis.dispatchEvent(\"drawend\");\n\t};\n\n\t/**\n\t * Docced in superclass\n\t */\n\tp.clear = function () {\n\t\tif (!this.canvas) { return; }\n\t\tif (StageGL.isWebGLActive(this._webGLContext)) {\n\t\t\tvar gl = this._webGLContext;\n\t\t\tvar cc = this._clearColor;\n\t\t\tvar adjust = this._transparent ? cc.a : 1.0;\n\t\t\t// Use WebGL settings; adjust for pre multiplied alpha appropriate to scenario\n\t\t\tthis._webGLContext.clearColor(cc.r * adjust, cc.g * adjust, cc.b * adjust, adjust);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\tthis._webGLContext.clearColor(cc.r, cc.g, cc.b, cc.a);\n\t\t} else {\n\t\t\t// Use 2D.\n\t\t\tthis.Stage_clear();\n\t\t}\n\t};\n\n\t/**\n\t * Draws the stage into the supplied context if possible. Many WebGL properties only exist on their context. As such\n\t * you cannot share contexts among many StageGLs and each context requires a unique StageGL instance. Contexts that\n\t * don't match the context managed by this StageGL will be treated as a 2D context.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D | WebGLRenderingContext} context The context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For\n\t *  example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean} If the draw was handled by this function\n\t */\n\tp.draw = function (context, ignoreCache) {\n\t\tif (context === this._webGLContext && StageGL.isWebGLActive(this._webGLContext)) {\n\t\t\tvar gl = this._webGLContext;\n\t\t\tthis._batchDraw(this, gl, ignoreCache);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.Stage_draw(context, ignoreCache);\n\t\t}\n\t};\n\n\t/**\n\t * Draws the target into the correct context, be it a canvas or Render Texture using WebGL.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method cacheDraw\n\t * @param {DisplayObject} target The object we're drawing into cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t * @return {Boolean} If the draw was handled by this function\n\t */\n\tp.cacheDraw = function (target, filters, manager) {\n\t\tif (StageGL.isWebGLActive(this._webGLContext)) {\n\t\t\tvar gl = this._webGLContext;\n\t\t\tthis._cacheDraw(gl, target, filters, manager);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Blocks, or frees a texture \"slot\" on the GPU. Can be useful if you are overflowing textures. When overflowing\n\t * textures they are re-uploaded to the GPU every time they're encountered, this can be expensive with large textures.\n\t * By blocking the slot you reduce available slots, potentially increasing draw calls, but mostly you prevent a\n\t * texture being re-uploaded if it would have moved slots due to overflow.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * For example, block the slot a background image is stored in so there is less re-loading of that image.\n\t * @method protectTextureSlot\n\t * @param  {Number} id The slot to be affected\n\t * @param  {Boolean} [lock=false] Whether this slot is the one being locked.\n\t */\n\tp.protectTextureSlot = function (id, lock) {\n\t\tif (id > this._maxTextureSlots || id < 0) {\n\t\t\tthrow \"Slot outside of acceptable range\";\n\t\t}\n\t\tthis._slotBlacklist[id] = !!lock;\n\t};\n\n\t/**\n\t * Render textures can't draw into themselves so any item being used for renderTextures needs two to alternate between.\n\t * This function creates, gets, and toggles the render surface between the two.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method getTargetRenderTexture\n\t * @param  {DisplayObject} target The object associated with the render textures, usually a cached object.\n\t * @param  {Number} w The width to create the texture at.\n\t * @param  {Number} h The height to create the texture at.\n\t * @return {Objet}\n\t * @todo fill in return type\n\t */\n\tp.getTargetRenderTexture = function (target, w, h) {\n\t\tvar result, toggle = false;\n\t\tvar gl = this._webGLContext;\n\t\tif (target.__lastRT !== undefined && target.__lastRT === target.__rtA) { toggle = true; }\n\t\tif (!toggle) {\n\t\t\tif (target.__rtA === undefined) {\n\t\t\t\ttarget.__rtA = this.getRenderBufferTexture(w, h);\n\t\t\t} else {\n\t\t\t\tif (w != target.__rtA._width || h != target.__rtA._height) {\n\t\t\t\t\tthis.resizeTexture(target.__rtA, w, h);\n\t\t\t\t}\n\t\t\t\tthis.setTextureParams(gl);\n\t\t\t}\n\t\t\tresult = target.__rtA;\n\t\t} else {\n\t\t\tif (target.__rtB === undefined) {\n\t\t\t\ttarget.__rtB = this.getRenderBufferTexture(w, h);\n\t\t\t} else {\n\t\t\t\tif (w != target.__rtB._width || h != target.__rtB._height) {\n\t\t\t\t\tthis.resizeTexture(target.__rtB, w, h);\n\t\t\t\t}\n\t\t\t\tthis.setTextureParams(gl);\n\t\t\t}\n\t\t\tresult = target.__rtB;\n\t\t}\n\t\tif (!result) {\n\t\t\tthrow \"Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n\t\t}\n\t\ttarget.__lastRT = result;\n\t\treturn result;\n\t};\n\n\t/**\n\t * For every image encountered StageGL registers and tracks it automatically. This tracking can cause memory leaks \n\t * if not purged. StageGL, by default, automatically purges them. This does have a cost and may unfortunately find\n\t * false positives. This function is for manual management of this memory instead of the automatic system controlled\n\t * by the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n\t *\n\t * This function will recursively remove all textures found on the object, its children, cache, etc. It will uncache \n\t * objects and remove any texture it finds REGARDLESS of whether it is currently in use elsewhere. It is up to the\n\t * developer to ensure that a texture in use is not removed.\n\t *\n\t * Textures in use, or to be used again shortly, should not be removed. This is simply for performance reasons.\n\t * Removing a texture in use will cause the texture to have to be re-uploaded slowing rendering.\n\t * @method releaseTexture\n\t * @param  {DisplayObject | Texture | Image | Canvas} item An object that used the texture to be discarded.\n\t */\n\tp.releaseTexture = function (item) {\n\t\tvar i, l;\n\t\tif (!item) { return; }\n\n\t\t// this is a container object\n\t\tif (item.children) {\n\t\t\tfor (i = 0, l = item.children.length; i < l; i++) {\n\t\t\t\tthis.releaseTexture(item.children[i]);\n\t\t\t}\n\t\t}\n\n\t\t// this has a cache canvas\n\t\tif (item.cacheCanvas) {\n\t\t\titem.uncache();\n\t\t}\n\n\t\tvar foundImage = undefined;\n\t\tif (item._storeID !== undefined) {\n\t\t\t// this is a texture itself\n\t\t\tif (item === this._textureDictionary[item._storeID]) {\n\t\t\t\tthis._killTextureObject(item);\n\t\t\t\titem._storeID = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// this is an image or canvas\n\t\t\tfoundImage = item;\n\t\t} else if (item._webGLRenderStyle === 2) {\n\t\t\t// this is a Bitmap class\n\t\t\tfoundImage = item.image;\n\t\t} else if (item._webGLRenderStyle === 1) {\n\t\t\t// this is a SpriteSheet, we can't tell which image we used from the list easily so remove them all!\n\t\t\tfor (i = 0, l = item.spriteSheet._images.length; i < l; i++) {\n\t\t\t\tthis.releaseTexture(item.spriteSheet._images[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// did we find anything\n\t\tif (foundImage === undefined) {\n\t\t\tif (this.vocalDebug) {\n\t\t\t\tconsole.log(\"No associated texture found on release\");\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// remove it\n\t\tthis._killTextureObject(this._textureDictionary[foundImage._storeID]);\n\t\tfoundImage._storeID = undefined;\n\t};\n\n\t/**\n\t * Similar to {{#crossLink \"releaseTexture\"}}{{/crossLink}}, but this function differs by searching for textures to\n\t * release. It works by assuming that it can purge any texture which was last used more than \"count\" draw calls ago.\n\t * Because this process is unaware of the objects and whether they may be used on your stage, false positives can\n\t * occur. It is recommended to manually manage your memory with {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}},\n\t * however, there are many use cases where this is simpler and error-free. This process is also run by default under\n\t * the hood to prevent leaks. To disable it see the {{#crossLink \"StageGL/autoPurge:property\"}}{{/crossLink}} property.\n\t * @method purgeTextures\n\t * @param {Number} [count=100] How many renders ago the texture was last used\n\t */\n\tp.purgeTextures = function (count) {\n\t\tif (count == undefined){ count = 100; }\n\n\t\tvar dict = this._textureDictionary;\n\t\tvar l = dict.length;\n\t\tfor (var i= 0; i<l; i++) {\n\t\t\tvar item = dict[i];\n\t\t\tif (!item) { continue; }\n\t\t\tif (item._drawID + count <= this._drawID) {\t// use draw not batch as draw is more indicative of time\n\t\t\t\tthis._killTextureObject(item);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Try to set the max textures the system can handle. It should default to the hardware maximum, and lower values\n\t * may limit performance. Some devices have been known to mis-report their max textures, or you may need a standard\n\t * baseline cross devices for testing. Barring the previous suggestions, there is little need to call this function\n\t * as the library will automatically try to find the best value.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method updateSimultaneousTextureCount\n\t * @param {Number} [count=1] The number of textures intended for simultaneous loading.\n\t */\n\tp.updateSimultaneousTextureCount = function (count) {\n\t\t// TODO: DHG: make sure API works in all instances, may be some issues with buffers etc I haven't foreseen\n\t\tvar gl = this._webGLContext;\n\t\tvar success = false;\n\n\t\tif (count < 1 || isNaN(count)) { count = 1; }\n\t\tthis._batchTextureCount = count;\n\n\t\twhile (!success) {\n\t\t\ttry {\n\t\t\t\tthis._activeShader = this._fetchShaderProgram(gl);\n\t\t\t\tsuccess = true;\n\t\t\t} catch(e) {\n\t\t\t\tif (this._batchTextureCount == 1) {\n\t\t\t\t\tthrow \"Cannot compile shader \" + e;\n\t\t\t\t}\n\n\t\t\t\tthis._batchTextureCount -= 4;\n\t\t\t\tif (this._batchTextureCount < 1) { this._batchTextureCount = 1; }\n\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tconsole.log(\"Reducing desired texture count due to errors: \" + this._batchTextureCount);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Update the WebGL viewport. Note that this does <strong>not</strong> update the canvas element's width/height, but\n\t * the render surface's instead. This is necessary after manually resizing the canvas element on the DOM to avoid a\n\t * up/down scaled render.\n\t * @method updateViewport\n\t * @param {Integer} width The width of the render surface in pixels.\n\t * @param {Integer} height The height of the render surface in pixels.\n\t */\n\tp.updateViewport = function (width, height) {\n\t\tthis._viewportWidth = width|0;\n\t\tthis._viewportHeight = height|0;\n\t\tvar gl = this._webGLContext;\n\n\t\tif (gl) {\n\t\t\tgl.viewport(0, 0, this._viewportWidth, this._viewportHeight);\n\n\t\t\t// WebGL works with a -1,1 space on its screen. It also follows Y-Up\n\t\t\t// we need to flip the y, scale and then translate the co-ordinates to match this\n\t\t\t// additionally we offset into they Y so the polygons are inside the camera's \"clipping\" plane\n\t\t\tthis._projectionMatrix = new Float32Array([\n\t\t\t\t2 / this._viewportWidth,\t0,\t\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t0,\n\t\t\t\t0,\t\t\t\t\t\t\t-2 / this._viewportHeight,\t\t1,\t\t\t\t\t\t\t0,\n\t\t\t\t0,\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t\t1,\t\t\t\t\t\t\t0,\n\t\t\t\t-1,\t\t\t\t\t\t\t1,\t\t\t\t\t\t\t\t0.1,\t\t\t\t\t\t0\n\t\t\t]);\n\t\t\t// create the flipped version for use with render texture flipping\n\t\t\t// DHG: this would be a slice/clone but some platforms don't offer them for Float32Array\n\t\t\tthis._projectionMatrixFlip = new Float32Array([0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0]);\n\t\t\tthis._projectionMatrixFlip.set(this._projectionMatrix);\n\t\t\tthis._projectionMatrixFlip[5] *= -1;\n\t\t\tthis._projectionMatrixFlip[13] *= -1;\n\t\t}\n\t};\n\n\t/**\n\t * Fetches the shader compiled and set up to work with the provided filter/object. The shader is compiled on first\n\t * use and returned on subsequent calls.\n\t * @method getFilterShader\n\t * @param  {Filter|Object} filter The object which will provide the information needed to construct the filter shader.\n\t * @return {WebGLProgram}\n\t */\n\tp.getFilterShader = function (filter) {\n\t\tif (!filter) { filter = this; }\n\n\t\tvar gl = this._webGLContext;\n\t\tvar targetShader = this._activeShader;\n\n\t\tif (filter._builtShader) {\n\t\t\ttargetShader = filter._builtShader;\n\t\t\tif (filter.shaderParamSetup) {\n\t\t\t\tgl.useProgram(targetShader);\n\t\t\t\tfilter.shaderParamSetup(gl, this, targetShader);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\ttargetShader = this._fetchShaderProgram(\n\t\t\t\t\tgl, \"filter\",\n\t\t\t\t\tfilter.VTX_SHADER_BODY, filter.FRAG_SHADER_BODY,\n\t\t\t\t\tfilter.shaderParamSetup && filter.shaderParamSetup.bind(filter)\n\t\t\t\t);\n\t\t\t\tfilter._builtShader = targetShader;\n\t\t\t\ttargetShader._name = filter.toString();\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.log(\"SHADER SWITCH FAILURE\", e);\n\t\t\t}\n\t\t}\n\t\treturn targetShader;\n\t};\n\n\t/**\n\t * Returns a base texture that has no image or data loaded. Not intended for loading images. It may return `null`\n\t * in some error cases, and trying to use a \"null\" texture can cause renders to fail.\n\t * @method getBaseTexture\n\t * @param  {uint} [w=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [h=1] The height of the texture in pixels, defaults to 1\n\t */\n\tp.getBaseTexture = function (w, h) {\n\t\tvar width = Math.ceil(w > 0 ? w : 1) || 1;\n\t\tvar height = Math.ceil(h > 0 ? h : 1) || 1;\n\n\t\tvar gl = this._webGLContext;\n\t\tvar texture = gl.createTexture();\n\t\tthis.resizeTexture(texture, width, height);\n\t\tthis.setTextureParams(gl, false);\n\n\t\treturn texture;\n\t};\n\n\t/**\n\t * Resizes a supplied texture element. May generate invalid textures in some error cases such as; when the texture\n\t * is too large, when an out of texture memory error occurs, or other error scenarios. Trying to use an invalid texture\n\t * can cause renders to hard stop on some devices. Check the WebGL bound texture after running this function.\n\t *\n\t * NOTE: The supplied texture must have been made with the WebGL \"texImage2D\" function, all default APIs in StageGL\n\t * use this, so this note only matters for library developers and plugins.\n\t *\n\t * @protected\n\t * @method resizeTexture\n\t * @param  {WebGLTexture} texture The GL Texture to be modified.\n\t * @param  {uint} [width=1] The width of the texture in pixels, defaults to 1\n\t * @param  {uint} [height=1] The height of the texture in pixels, defaults to 1\n\t */\n\tp.resizeTexture = function (texture, width,height) {\n\t\tvar gl = this._webGLContext;\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texImage2D(\n\t\t\tgl.TEXTURE_2D,\t\t\t\t// target\n\t\t\t0,\t\t\t\t\t\t\t// level of detail\n\t\t\tgl.RGBA,\t\t\t\t\t// internal format\n\t\t\twidth, height, 0,\t\t\t// width, height, border (only for array/null sourced textures)\n\t\t\tgl.RGBA,\t\t\t\t\t// format (match internal format)\n\t\t\tgl.UNSIGNED_BYTE,\t\t\t// type of texture(pixel color depth)\n\t\t\tnull\t\t\t\t\t\t// image data, we can do null because we're doing array data\n\t\t);\n\t\ttexture.width = width;\n\t\ttexture.height = height;\n\t};\n\n\t/**\n\t * Returns a base texture (see {{#crossLink \"StageGL/getBaseTexture\"}}{{/crossLink}}) for details. Also includes an\n\t * attached and linked render buffer in `texture._frameBuffer`. RenderTextures can be thought of as an internal\n\t * canvas on the GPU that can be drawn to.\n\t * @method getRenderBufferTexture\n\t * @param  {Number} w The width of the texture in pixels.\n\t * @param  {Number} h The height of the texture in pixels.\n\t * @return {Texture} the basic texture instance with a render buffer property.\n\t */\n\tp.getRenderBufferTexture = function (w, h) {\n\t\tvar gl = this._webGLContext;\n\n\t\t// get the texture\n\t\tvar renderTexture = this.getBaseTexture(w, h);\n\t\tif (!renderTexture) { return null; }\n\n\t\t// get the frame buffer\n\t\tvar frameBuffer = gl.createFramebuffer();\n\t\tif (!frameBuffer) { return null; }\n\n\t\t// set its width and height for spoofing as an image\n\t\trenderTexture.width = w;\n\t\trenderTexture.height = h;\n\n\t\t// attach frame buffer to texture and provide cross links to look up each other\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, renderTexture, 0);\n\t\tframeBuffer._renderTexture = renderTexture;\n\t\trenderTexture._frameBuffer = frameBuffer;\n\n\t\t// these keep track of themselves simply to reduce complexity of some lookup code\n\t\trenderTexture._storeID = this._textureDictionary.length;\n\t\tthis._textureDictionary[renderTexture._storeID] = renderTexture;\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\treturn renderTexture;\n\t};\n\n\t/**\n\t * Common utility function used to apply the correct texture processing parameters for the bound texture.\n\t * @method setTextureParams\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {Boolean} [isPOT=false] Marks whether the texture is \"Power of Two\", this may allow better quality AA.\n\t */\n\tp.setTextureParams = function (gl, isPOT) {\n\t\tif (isPOT && this._antialias) {\n\t\t\t//non POT linear works in some devices, but performance is NOT good, investigate\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t} else {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t}\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t};\n\n\t/**\n\t * Changes the webGL clear, aka \"background\" color to the provided value. A transparent clear is recommended, as\n\t * non-transparent colours may create undesired boxes around some visuals.\n\t *\n\t * The clear color will also be used for filters and other \"render textures\". The stage background will ignore the\n\t * transparency value and display a solid color normally. For the stage to recognize and use transparency it must be\n\t * created with the transparent flag set to `true` (see {{#crossLink \"StageGL/constructor\"}}{{/crossLink}})).\n\t *\n\t * Using \"transparent white\" to demonstrate, the valid data formats are as follows:\n\t * <ul>\n\t *     <li>\"#FFF\"</li>\n\t *     <li>\"#FFFFFF\"</li>\n\t *     <li>\"#FFFFFF00\"</li>\n\t *     <li>\"rgba(255,255,255,0.0)\"</li>\n\t * </ul>\n\t * @method setClearColor\n\t * @param {String|int} [color=0x00000000] The new color to use as the background\n\t */\n\tp.setClearColor = function (color) {\n\t\tvar r, g, b, a, output;\n\n\t\tif (typeof color == \"string\") {\n\t\t\tif (color.indexOf(\"#\") == 0) {\n\t\t\t\tif (color.length == 4) {\n\t\t\t\t\tcolor = \"#\" + color.charAt(1)+color.charAt(1) + color.charAt(2)+color.charAt(2) + color.charAt(3)+color.charAt(3)\n\t\t\t\t}\n\t\t\t\tr = Number(\"0x\"+color.slice(1, 3))/255;\n\t\t\t\tg = Number(\"0x\"+color.slice(3, 5))/255;\n\t\t\t\tb = Number(\"0x\"+color.slice(5, 7))/255;\n\t\t\t\ta = Number(\"0x\"+color.slice(7, 9))/255;\n\t\t\t} else if (color.indexOf(\"rgba(\") == 0) {\n\t\t\t\toutput = color.slice(5, -1).split(\",\");\n\t\t\t\tr = Number(output[0])/255;\n\t\t\t\tg = Number(output[1])/255;\n\t\t\t\tb = Number(output[2])/255;\n\t\t\t\ta = Number(output[3]);\n\t\t\t}\n\t\t} else {\t// >>> is an unsigned shift which is what we want as 0x80000000 and up are negative values\n\t\t\tr = ((color & 0xFF000000) >>> 24)/255;\n\t\t\tg = ((color & 0x00FF0000) >>> 16)/255;\n\t\t\tb = ((color & 0x0000FF00) >>> 8)/255;\n\t\t\ta = (color & 0x000000FF)/255;\n\t\t}\n\n\t\tthis._clearColor.r = r || 0;\n\t\tthis._clearColor.g = g || 0;\n\t\tthis._clearColor.b = b || 0;\n\t\tthis._clearColor.a = a || 0;\n\n\t\tif (!this._webGLContext) { return; }\n\t\tthis._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);\n\t};\n\n\t/**\n\t * docced in subclass\n\t */\n\tp.toString = function () {\n\t\treturn \"[StageGL (name=\"+  this.name +\")]\";\n\t};\n\n// private methods:\n\t/**\n\t * Sets up and returns the WebGL context for the canvas. May return undefined in error scenarios. These can include \n\t * situations where the canvas element already has a context, 2D or GL.\n\t * @param  {Canvas} canvas The DOM canvas element to attach to\n\t * @param  {Object} options The options to be handed into the WebGL object, see WebGL spec\n\t * @method _fetchWebGLContext\n\t * @protected\n\t * @return {WebGLRenderingContext} The WebGL context, may return undefined in error scenarios\n\t */\n\tp._fetchWebGLContext = function (canvas, options) {\n\t\tvar gl;\n\n\t\ttry {\n\t\t\tgl = canvas.getContext(\"webgl\", options) || canvas.getContext(\"experimental-webgl\", options);\n\t\t} catch (e) {\n\t\t\t// don't do anything in catch, null check will handle it\n\t\t}\n\n\t\tif (!gl) {\n\t\t\tvar msg = \"Could not initialize WebGL\";\n\t\t\tconsole.error?console.error(msg):console.log(msg);\n\t\t} else {\n\t\t\tgl.viewportWidth = canvas.width;\n\t\t\tgl.viewportHeight = canvas.height;\n\t\t}\n\n\t\treturn gl;\n\t};\n\n\t/**\n\t * Create the completed Shader Program from the vertex and fragment shaders. Allows building of custom shaders for\n\t * filters. Once compiled, shaders are saved so. If the Shader code requires dynamic alterations re-run this function\n\t * to generate a new shader.\n\t * @method _fetchShaderProgram\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {String} [shaderName=\"regular\"] Working values: \"regular\", \"override\", and \"filter\". Which type of shader to build.\n\t * Filter and override both accept the custom params. Regular and override have all features. Filter is a special case reduced feature shader meant to be over-ridden.\n\t * @param  {String} [customVTX] Extra vertex shader information to replace a regular draw, see \n\t * {{#crossLink \"StageGL/COVER_VERTEX_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n\t * @param  {String} [customFRAG] Extra fragment shader information to replace a regular draw, see \n\t * {{#crossLink \"StageGL/COVER_FRAGMENT_BODY\"}}{{/crossLink}} for default and {{#crossLink \"Filter\"}}{{/crossLink}} for examples.\n\t * @param  {Function} [shaderParamSetup] Function to run so custom shader parameters can get applied for the render.\n\t * @protected\n\t * @return {WebGLProgram} The compiled and linked shader\n\t */\n\tp._fetchShaderProgram = function (gl, shaderName, customVTX, customFRAG, shaderParamSetup) {\n\t\tgl.useProgram(null);\t\t// safety to avoid collisions\n\n\t\t// build the correct shader string out of the right headers and bodies\n\t\tvar targetFrag, targetVtx;\n\t\tswitch (shaderName) {\n\t\t\tcase \"filter\":\n\t\t\t\ttargetVtx = StageGL.COVER_VERTEX_HEADER + (customVTX || StageGL.COVER_VERTEX_BODY);\n\t\t\t\ttargetFrag = StageGL.COVER_FRAGMENT_HEADER + (customFRAG || StageGL.COVER_FRAGMENT_BODY);\n\t\t\t\tbreak;\n\t\t\tcase \"particle\": //TODO\n\t\t\t\ttargetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.PARTICLE_VERTEX_BODY;\n\t\t\t\ttargetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.PARTICLE_FRAGMENT_BODY;\n\t\t\t\tbreak;\n\t\t\tcase \"override\":\n\t\t\t\ttargetVtx = StageGL.REGULAR_VERTEX_HEADER + (customVTX || StageGL.REGULAR_VERTEX_BODY);\n\t\t\t\ttargetFrag = StageGL.REGULAR_FRAGMENT_HEADER + (customFRAG || StageGL.REGULAR_FRAGMENT_BODY);\n\t\t\t\tbreak;\n\t\t\tcase \"regular\":\n\t\t\tdefault:\n\t\t\t\ttargetVtx = StageGL.REGULAR_VERTEX_HEADER + StageGL.REGULAR_VERTEX_BODY;\n\t\t\t\ttargetFrag = StageGL.REGULAR_FRAGMENT_HEADER + StageGL.REGULAR_FRAGMENT_BODY;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// create the separate vars\n\t\tvar vertexShader = this._createShader(gl, gl.VERTEX_SHADER, targetVtx);\n\t\tvar fragmentShader = this._createShader(gl, gl.FRAGMENT_SHADER, targetFrag);\n\n\t\t// link them together\n\t\tvar shaderProgram = gl.createProgram();\n\t\tgl.attachShader(shaderProgram, vertexShader);\n\t\tgl.attachShader(shaderProgram, fragmentShader);\n\t\tgl.linkProgram(shaderProgram);\n\t\tshaderProgram._type = shaderName;\n\n\t\t// check compile status\n\t\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\t\tgl.useProgram(this._activeShader);\n\t\t\tthrow gl.getProgramInfoLog(shaderProgram);\n\t\t}\n\n\t\t// set up the parameters on the shader\n\t\tgl.useProgram(shaderProgram);\n\t\tswitch (shaderName) {\n\t\t\tcase \"filter\":\n\t\t\t\t// get the places in memory the shader is stored so we can feed information into them\n\t\t\t\t// then save it off on the shader because it's so tied to the shader itself\n\t\t\t\tshaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n\t\t\t\tshaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n\n\t\t\t\tshaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\t\t\t\tgl.uniform1i(shaderProgram.samplerUniform, 0);\n\n\t\t\t\tshaderProgram.uprightUniform = gl.getUniformLocation(shaderProgram, \"uUpright\");\n\t\t\t\tgl.uniform1f(shaderProgram.uprightUniform, 0);\n\n\t\t\t\t// if there's some custom attributes be sure to hook them up\n\t\t\t\tif (shaderParamSetup) {\n\t\t\t\t\tshaderParamSetup(gl, this, shaderProgram);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"override\":\n\t\t\tcase \"particle\":\n\t\t\tcase \"regular\":\n\t\t\tdefault:\n\t\t\t\t// get the places in memory the shader is stored so we can feed information into them\n\t\t\t\t// then save it off on the shader because it's so tied to the shader itself\n\t\t\t\tshaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"vertexPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n\t\t\t\tshaderProgram.uvPositionAttribute = gl.getAttribLocation(shaderProgram, \"uvPosition\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.uvPositionAttribute);\n\n\t\t\t\tshaderProgram.textureIndexAttribute = gl.getAttribLocation(shaderProgram, \"textureIndex\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.textureIndexAttribute);\n\n\t\t\t\tshaderProgram.alphaAttribute = gl.getAttribLocation(shaderProgram, \"objectAlpha\");\n\t\t\t\tgl.enableVertexAttribArray(shaderProgram.alphaAttribute);\n\n\t\t\t\tvar samplers = [];\n\t\t\t\tfor (var i = 0; i < this._batchTextureCount; i++) {\n\t\t\t\t\tsamplers[i] = i;\n\t\t\t\t}\n\n\t\t\t\tshaderProgram.samplerData = samplers;\n\t\t\t\tshaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n\t\t\t\tgl.uniform1iv(shaderProgram.samplerUniform, samplers);\n\n\t\t\t\tshaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"pMatrix\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tgl.useProgram(this._activeShader);\n\t\treturn shaderProgram;\n\t};\n\n\t/**\n\t * Creates a shader from the specified string replacing templates. Template items are defined via `{{` `key` `}}``.\n\t * @method _createShader\n\t * @param  {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param  {Number} type The type of shader to create. gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n\t * @param  {String} str The definition for the shader.\n\t * @return {WebGLShader}\n\t * @protected\n\t */\n\tp._createShader = function (gl, type, str) {\n\t\t// inject the static number\n\t\tstr = str.replace(/{{count}}/g, this._batchTextureCount);\n\n\t\t// resolve issue with no dynamic samplers by creating correct samplers in if else chain\n\t\t// TODO: WebGL 2.0 does not need this support\n\t\tvar insert = \"\";\n\t\tfor (var i = 1; i<this._batchTextureCount; i++) {\n\t\t\tinsert += \"} else if (indexPicker <= \"+ i +\".5) { color = texture2D(uSampler[\"+ i +\"], vTextureCoord);\";\n\t\t}\n\t\tstr = str.replace(/{{alternates}}/g, insert);\n\t\tstr = str.replace(/{{fragColor}}/g, this._premultiply ? StageGL.REGULAR_FRAG_COLOR_PREMULTIPLY : StageGL.REGULAR_FRAG_COLOR_NORMAL);\n\n\t\t// actually compile the shader\n\t\tvar shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, str);\n\t\tgl.compileShader(shader);\n\n\t\t// check compile status\n\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\tthrow gl.getShaderInfoLog(shader);\n\t\t}\n\n\t\treturn shader;\n\t};\n\n\t/**\n\t * Sets up the necessary vertex property buffers, including position and U/V.\n\t * @method _createBuffers\n\t * @param {WebGLRenderingContext} gl\n\t * @protected\n\t */\n\tp._createBuffers = function (gl) {\n\t\tvar groupCount = this._maxCardsPerBatch * StageGL.INDICIES_PER_CARD;\n\t\tvar groupSize, i, l;\n\n\t\t// INFO:\n\t\t// all buffers are created using this pattern\n\t\t// create a WebGL buffer\n\t\t// attach it to context\n\t\t// figure out how many parts it has to an entry\n\t\t// fill it with empty data to reserve the memory\n\t\t// attach the empty data to the GPU\n\t\t// track the sizes on the buffer object\n\n\t\t// INFO:\n\t\t// a single buffer may be optimal in some situations and would be approached like this,\n\t\t// currently not implemented due to lack of need and potential complications with drawCover\n\n\t\t// var vertexBuffer = this._vertexBuffer = gl.createBuffer();\n\t\t// gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\t\t// groupSize = 2 + 2 + 1 + 1; //x/y, u/v, index, alpha\n\t\t// var vertexData = this._vertexData = new Float32Array(groupCount * groupSize);\n\t\t// for (i=0; i<vertexData.length; i+=groupSize) {\n\t\t// \tvertexData[i+0] = vertexData[i+1] = 0;\n\t\t// \tvertexData[i+2] = vertexData[i+3] = 0.5;\n\t\t// \tvertexData[i+4] = 0;\n\t\t// \tvertexData[i+5] = 1;\n\t\t// }\n\t\t// vertexBuffer.itemSize = groupSize;\n\t\t// vertexBuffer.numItems = groupCount;\n\t\t// TODO bechmark and test using unified buffer\n\n\t\t// the actual position information\n\t\tvar vertexPositionBuffer = this._vertexPositionBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n\t\tgroupSize = 2;\n\t\tvar vertices = this._vertices = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=vertices.length; i<l; i+=groupSize) { vertices[i] = vertices[i+1] = 0; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n\t\tvertexPositionBuffer.itemSize = groupSize;\n\t\tvertexPositionBuffer.numItems = groupCount;\n\n\t\t// where on the texture it gets its information\n\t\tvar uvPositionBuffer = this._uvPositionBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n\t\tgroupSize = 2;\n\t\tvar uvs = this._uvs = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=uvs.length; i<l; i+=groupSize) { uvs[i] = uvs[i+1] = 0; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, uvs, gl.DYNAMIC_DRAW);\n\t\tuvPositionBuffer.itemSize = groupSize;\n\t\tuvPositionBuffer.numItems = groupCount;\n\n\t\t// what texture it should use\n\t\tvar textureIndexBuffer = this._textureIndexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n\t\tgroupSize = 1;\n\t\tvar indices = this._indices = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=indices.length; i<l; i++) { indices[i] = 0; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, indices, gl.DYNAMIC_DRAW);\n\t\ttextureIndexBuffer.itemSize = groupSize;\n\t\ttextureIndexBuffer.numItems = groupCount;\n\n\t\t// what alpha it should have\n\t\tvar alphaBuffer = this._alphaBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n\t\tgroupSize = 1;\n\t\tvar alphas = this._alphas = new Float32Array(groupCount * groupSize);\n\t\tfor (i=0, l=alphas.length; i<l; i++) { alphas[i] = 1; }\n\t\tgl.bufferData(gl.ARRAY_BUFFER, alphas, gl.DYNAMIC_DRAW);\n\t\talphaBuffer.itemSize = groupSize;\n\t\talphaBuffer.numItems = groupCount;\n\t};\n\n\t/**\n\t * Do all the setup steps for textures in the system.\n\t * @method _initTextures\n\t * @protected\n\t */\n\tp._initTextures = function () {\n\t\t//TODO: DHG: add a cleanup routine in here in case this happens mid stream\n\n\t\t// reset counters\n\t\tthis._lastTextureInsert = -1;\n\n\t\t// clear containers\n\t\tthis._textureDictionary = [];\n\t\tthis._textureIDs = {};\n\t\tthis._baseTextures = [];\n\t\tthis._batchTextures = [];\n\n\t\t// fill in blanks as it helps the renderer be stable while textures are loading and reduces need for safety code\n\t\tfor (var i=0; i<this._batchTextureCount;i++) {\n\t\t\tvar tex = this.getBaseTexture();\n\t\t\tthis._baseTextures[i] = this._batchTextures[i] = tex;\n\t\t\tif (!tex) {\n\t\t\t\tthrow \"Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances\";\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Load a specific texture, accounting for potential delay, as it might not be preloaded.\n\t * @method _loadTextureImage\n\t * @param {WebGLRenderingContext} gl\n\t * @param {Image} image Actual image to be loaded\n\t * @return {WebGLTexture} The resulting Texture object\n\t * @protected\n\t */\n\tp._loadTextureImage = function (gl, image) {\n\t\tvar src = image.src;\n\n\t\tif (!src) {\n\t\t\t// one time canvas property setup\n\t\t\timage._isCanvas = true;\n\t\t\tsrc = image.src = \"canvas_\" + this._lastTrackedCanvas++;\n\t\t}\n\n\t\t// put the texture into our storage system\n\t\tvar storeID = this._textureIDs[src];\n\t\tif (storeID === undefined) {\n\t\t\tstoreID = this._textureIDs[src] = this._textureDictionary.length;\n\t\t}\n\t\tif (this._textureDictionary[storeID] === undefined) {\n\t\t\tthis._textureDictionary[storeID] = this.getBaseTexture();\n\t\t}\n\n\t\tvar texture = this._textureDictionary[storeID];\n\n\t\tif (texture) {\n\t\t\t// get texture params all set up\n\t\t\ttexture._batchID = this._batchID;\n\t\t\ttexture._storeID = storeID;\n\t\t\ttexture._imageData = image;\n\t\t\tthis._insertTextureInBatch(gl, texture);\n\n\t\t\t// get the data into the texture or wait for it to load\n\t\t\timage._storeID = storeID;\n\t\t\tif (image.complete || image.naturalWidth || image._isCanvas) {\t// is it already loaded\n\t\t\t\tthis._updateTextureImageData(gl, image);\n\t\t\t} else  {\n\t\t\t\timage.addEventListener(\"load\", this._updateTextureImageData.bind(this, gl, image));\n\t\t\t}\n\t\t} else {\n\t\t\t// we really really should have a texture, try to recover the error by using a saved empty texture so we don't crash\n\t\t\tvar msg = \"Problem creating desired texture, known causes include using too much VRAM by not releasing WebGL texture instances\";\n\t\t\t(console.error && console.error(msg)) || console.log(msg);\n\n\t\t\ttexture = this._baseTextures[0];\n\t\t\ttexture._batchID = this._batchID;\n\t\t\ttexture._storeID = -1;\n\t\t\ttexture._imageData = texture;\n\t\t\tthis._insertTextureInBatch(gl, texture);\n\t\t}\n\n\t\treturn texture;\n\t};\n\n\t/**\n\t * Necessary to upload the actual image data to the GPU. Without this the texture will be blank. Called automatically\n\t * in most cases due to loading and caching APIs. Flagging an image source with `_invalid = true` will trigger this\n\t * next time the image is rendered.\n\t * @param {WebGLRenderingContext} gl\n\t * @param {Image | Canvas} image The image data to be uploaded\n\t * @protected\n\t */\n\tp._updateTextureImageData = function (gl, image) {\n\t\t// the bitwise & is intentional, cheap exponent 2 check\n\t\tvar isNPOT = (image.width & image.width-1) || (image.height & image.height-1);\n\t\tvar texture = this._textureDictionary[image._storeID];\n\n\t\tgl.activeTexture(gl.TEXTURE0 + texture._activeIndex);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\ttexture.isPOT = !isNPOT;\n\t\tthis.setTextureParams(gl, texture.isPOT);\n\n\t\ttry {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\t\t} catch(e) {\n\t\t\tvar errString = \"\\nAn error has occurred. This is most likely due to security restrictions on WebGL images with local or cross-domain origins\";\n\t\t\tif(console.error) {\n\t\t\t\t//TODO: LM: I recommend putting this into a log function internally, since you do it so often, and each is implemented differently.\n\t\t\t\tconsole.error(errString);\n\t\t\t\tconsole.error(e);\n\t\t\t} else if (console) {\n\t\t\t\tconsole.log(errString);\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\n\t\timage._invalid = false;\n\n\t\ttexture._w = image.width;\n\t\ttexture._h = image.height;\n\n\t\tif (this.vocalDebug) {\n\t\t\tif (isNPOT) {\n\t\t\t\tconsole.warn(\"NPOT(Non Power of Two) Texture: \"+ image.src);\n\t\t\t}\n\t\t\tif (image.width > gl.MAX_TEXTURE_SIZE || image.height > gl.MAX_TEXTURE_SIZE){\n\t\t\t\tconsole && console.error(\"Oversized Texture: \"+ image.width+\"x\"+image.height +\" vs \"+ gl.MAX_TEXTURE_SIZE +\"max\");\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Adds the texture to a spot in the current batch, forcing a draw if no spots are free.\n\t * @method _insertTextureInBatch\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {WebGLTexture} texture The texture to be inserted.\n\t * @protected\n\t */\n\tp._insertTextureInBatch = function (gl, texture) {\n\t\t// if it wasn't used last batch\n\t\tif (this._batchTextures[texture._activeIndex] !== texture) {\n\t\t\t// we've got to find it a a spot.\n\t\t\tvar found = -1;\n\t\t\tvar start = (this._lastTextureInsert+1) % this._batchTextureCount;\n\t\t\tvar look = start;\n\t\t\tdo {\n\t\t\t\tif (this._batchTextures[look]._batchID != this._batchID && !this._slotBlacklist[look]) {\n\t\t\t\t\tfound = look;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlook = (look+1) % this._batchTextureCount;\n\t\t\t} while (look !== start);\n\n\t\t\t// we couldn't find anywhere for it go, meaning we're maxed out\n\t\t\tif (found === -1) {\n\t\t\t\tthis.batchReason = \"textureOverflow\";\n\t\t\t\tthis._drawBuffers(gl);\t\t// <------------------------------------------------------------------------\n\t\t\t\tthis.batchCardCount = 0;\n\t\t\t\tfound = start;\n\t\t\t}\n\n\t\t\t// lets put it into that spot\n\t\t\tthis._batchTextures[found] = texture;\n\t\t\ttexture._activeIndex = found;\n\t\t\tvar image = texture._imageData;\n\t\t\tif (image && image._invalid && texture._drawID !== undefined) {\n\t\t\t\tthis._updateTextureImageData(gl, image);\n\t\t\t} else {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + found);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tthis.setTextureParams(gl);\n\t\t\t}\n\t\t\tthis._lastTextureInsert = found;\n\t\t} else {\n\t\t\tvar image = texture._imageData;\n\t\t\tif (texture._storeID != undefined && image && image._invalid) {\n\t\t\t\tthis._updateTextureImageData(gl, image);\n\t\t\t}\n\t\t}\n\n\t\ttexture._drawID = this._drawID;\n\t\ttexture._batchID = this._batchID;\n\t};\n\n\t/**\n\t * Remove and clean the texture, expects a texture and is inflexible. Mostly for internal use, recommended to call \n\t * {{#crossLink \"StageGL/releaseTexture\"}}{{/crossLink}} instead as it will call this with the correct texture object(s).\n\t * Note: Testing shows this may not happen immediately, have to wait frames for WebGL to have actually adjust memory.\n\t * @method _killTextureObject\n\t * @param {Texture} tex The texture to be cleaned out\n\t * @protected\n\t */\n\tp._killTextureObject = function (tex) {\n\t\tif (!tex) { return; }\n\t\tvar gl = this._webGLContext;\n\n\t\t// remove linkage\n\t\tif (tex._storeID !== undefined && tex._storeID >= 0) {\n\t\t\tthis._textureDictionary[tex._storeID] = undefined;\n\t\t\tfor (var n in this._textureIDs) {\n\t\t\t\tif (this._textureIDs[n] == tex._storeID) { delete this._textureIDs[n]; }\n\t\t\t}\n\t\t\tif(tex._imageData) { tex._imageData._storeID = undefined; }\n\t\t\ttex._imageData = tex._storeID = undefined;\n\t\t}\n\n\t\t// make sure to drop it out of an active slot\n\t\tif (tex._activeIndex !== undefined && this._batchTextures[tex._activeIndex] === tex) {\n\t\t\tthis._batchTextures[tex._activeIndex] = this._baseTextures[tex._activeIndex];\n\t\t}\n\n\t\t// remove buffers if present\n\t\ttry {\n\t\t\tif (tex._frameBuffer) { gl.deleteFramebuffer(tex._frameBuffer); }\n\t\t\ttex._frameBuffer = undefined;\n\t\t} catch(e) {\n\t\t\t/* suppress delete errors because it's already gone or didn't need deleting probably */\n\t\t\tif (this.vocalDebug) { console.log(e); }\n\t\t}\n\n\t\t// remove entry\n\t\ttry {\n\t\t\tgl.deleteTexture(tex);\n\t\t} catch(e) {\n\t\t\t/* suppress delete errors because it's already gone or didn't need deleting probably */\n\t\t\tif (this.vocalDebug) { console.log(e); }\n\t\t}\n\t};\n\n\t/**\n\t * Store or restore current batch textures into a backup array\n\t * @method _backupBatchTextures\n\t * @param {Boolean} restore Perform a restore instead of a store.\n\t * @param {Array} [target=this._backupTextures] Where to perform the backup, defaults to internal backup.\n\t * @protected\n\t */\n\tp._backupBatchTextures = function (restore, target) {\n\t\tvar gl = this._webGLContext;\n\n\t\tif (!this._backupTextures) { this._backupTextures = []; }\n\t\tif (target === undefined) { target = this._backupTextures; }\n\n\t\tfor (var i=0; i<this._batchTextureCount; i++) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tif (restore) {\n\t\t\t\tthis._batchTextures[i] = target[i];\n\t\t\t} else {\n\t\t\t\ttarget[i] = this._batchTextures[i];\n\t\t\t\tthis._batchTextures[i] = this._baseTextures[i];\n\t\t\t}\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._batchTextures[i]);\n\t\t\tthis.setTextureParams(gl, this._batchTextures[i].isPOT);\n\t\t}\n\n\t\tif (restore && target === this._backupTextures) { this._backupTextures = []; }\n\t};\n\n\t/**\n\t * Begin the drawing process for a regular render.\n\t * @method _batchDraw\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Stage || Container} sceneGraph {{#crossLink \"Container\"}}{{/crossLink}} object with all that needs to rendered, preferably a Stage.\n\t * @param {Boolean} ignoreCache\n\t * @protected\n\t */\n\tp._batchDraw = function (sceneGraph, gl, ignoreCache) {\n\t\tif (this._isDrawing > 0) {\n\t\t\tthis._drawBuffers(gl);\n\t\t}\n\t\tthis._isDrawing++;\n\t\tthis._drawID++;\n\n\t\tthis.batchCardCount = 0;\n\t\tthis.depth = 0;\n\n\t\tthis._appendToBatchGroup(sceneGraph, gl, new createjs.Matrix2D(), this.alpha, ignoreCache);\n\n\t\tthis.batchReason = \"drawFinish\";\n\t\tthis._drawBuffers(gl);\t\t\t\t\t\t\t\t// <--------------------------------------------------------\n\t\tthis._isDrawing--;\n\t};\n\n\t/**\n\t * Perform the drawing process to fill a specific cache texture, including applying filters.\n\t * @method _cacheDraw\n\t * @param {DisplayObject} target The object we're drawing into the cache. For example, used for drawing the cache\n\t * (to prevent it from simply drawing an existing cache back into itself).\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t * @protected\n\t */\n\tp._cacheDraw = function (gl, target, filters, manager) {\n\t\t/*\n\t\tImplicitly there are 4 modes to this function: filtered-sameContext, filtered-uniqueContext, sameContext, uniqueContext.\n\t\tEach situation must be handled slightly differently as 'sameContext' or 'uniqueContext' define how the output works,\n\t\tone drawing directly into the main context and the other drawing into a stored renderTexture respectively.\n\t\tWhen the draw is a 'filtered' draw, the filters are applied sequentially and will draw into saved textures repeatedly.\n\t\tOnce the final filter is done the final output is treated depending upon whether it is a same or unique context.\n\t\tThe internal complexity comes from reducing over-draw, shared code, and issues like textures needing to be flipped\n\t\tsometimes when written to render textures.\n\t\t*/\n\t\tvar renderTexture;\n\t\tvar shaderBackup = this._activeShader;\n\t\tvar blackListBackup = this._slotBlacklist;\n\t\tvar lastTextureSlot = this._maxTextureSlots-1;\n\t\tvar wBackup = this._viewportWidth, hBackup = this._viewportHeight;\n\n\t\t// protect the last slot so that we have somewhere to bind the renderTextures so it doesn't get upset\n\t\tthis.protectTextureSlot(lastTextureSlot, true);\n\n\t\t// create offset container for drawing item\n\t\tvar mtx = target.getMatrix();\n\t\tmtx = mtx.clone();\n\t\tmtx.scale(1/manager.scale, 1/manager.scale);\n\t\tmtx = mtx.invert();\n\t\tmtx.translate(-manager.offX/manager.scale*target.scaleX, -manager.offY/manager.scale*target.scaleY);\n\t\tvar container = this._cacheContainer;\n\t\tcontainer.children = [target];\n\t\tcontainer.transformMatrix = mtx;\n\n\t\tthis._backupBatchTextures(false);\n\n\t\tif (filters && filters.length) {\n\t\t\tthis._drawFilters(target, filters, manager);\n\t\t} else {\n\t\t\t// is this for another stage or mine?\n\t\t\tif (this.isCacheControlled) {\n\t\t\t\t// draw item to canvas\t\t\t\tI -> C\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\t\tthis._batchDraw(container, gl, true);\n\t\t\t} else {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\t\t\ttarget.cacheCanvas = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\t\t\t\trenderTexture = target.cacheCanvas;\n\n\t\t\t\t// draw item to render texture\t\tI -> T\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\t\t\t\tthis.updateViewport(manager._drawWidth, manager._drawHeight);\n\t\t\t\tthis._projectionMatrix = this._projectionMatrixFlip;\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\t\tthis._batchDraw(container, gl, true);\n\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tthis.updateViewport(wBackup, hBackup);\n\t\t\t}\n\t\t}\n\n\t\tthis._backupBatchTextures(true);\n\n\t\tthis.protectTextureSlot(lastTextureSlot, false);\n\t\tthis._activeShader = shaderBackup;\n\t\tthis._slotBlacklist = blackListBackup;\n\t};\n\n\t/**\n\t * Sub portion of _cacheDraw, split off for readability. Do not call independently.\n\t * @method _drawFilters\n\t * @param {DisplayObject} target The object we're drawing with a filter.\n\t * @param {Array} filters The filters we're drawing into cache.\n\t * @param {BitmapCache} manager The BitmapCache instance looking after the cache\n\t */\n\tp._drawFilters = function (target, filters, manager) {\n\t\tvar gl = this._webGLContext;\n\t\tvar renderTexture;\n\t\tvar lastTextureSlot = this._maxTextureSlots-1;\n\t\tvar wBackup = this._viewportWidth, hBackup = this._viewportHeight;\n\n\t\tvar container = this._cacheContainer;\n\t\tvar filterCount = filters.length;\n\n\t\t// we don't know which texture slot we're dealing with previously and we need one out of the way\n\t\t// once we're using that slot activate it so when we make and bind our RenderTexture it's safe there\n\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\trenderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\n\t\t// draw item to render texture\t\tI -> T\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\t\tthis.updateViewport(manager._drawWidth, manager._drawHeight);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tthis._batchDraw(container, gl, true);\n\n\t\t// bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.bindTexture(gl.TEXTURE_2D, renderTexture);\n\t\tthis.setTextureParams(gl);\n\n\t\tvar flipY = false;\n\t\tvar i = 0, filter = filters[i];\n\t\tdo { // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n\n\t\t\t// swap to correct shader\n\t\t\tthis._activeShader = this.getFilterShader(filter);\n\t\t\tif (!this._activeShader) { continue; }\n\n\t\t\t// now the old result is stored in slot 0, make a new render texture\n\t\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\t\trenderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n\t\t\t// draw result to render texture\tR -> T\n\t\t\tgl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\tthis._drawCover(gl, flipY);\n\n\t\t\t// bind the result texture to slot 0 as all filters and cover draws assume original content is in slot 0\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, renderTexture);\n\t\t\tthis.setTextureParams(gl);\n\n\t\t\t// use flipping to keep things upright, things already cancel out on a single filter\n\t\t\t// this needs to be here as multiPass is not accurate to _this_ frame until after shader acquisition\n\t\t\tif (filterCount > 1 || filters[0]._multiPass) {\n\t\t\t\tflipY = !flipY;\n\t\t\t}\n\n\t\t\t// work through the multipass if it's there, otherwise move on\n\t\t\tfilter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n\t\t} while (filter);\n\n\t\t// is this for another stage or mine\n\t\tif (this.isCacheControlled) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tthis.updateViewport(wBackup, hBackup);\n\n\t\t\t// draw result to canvas\t\t\tR -> C\n\t\t\tthis._activeShader = this.getFilterShader(this);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\tthis._drawCover(gl, flipY);\n\t\t} else {\n\t\t\t//TODO: DHG: this is less than ideal. A flipped initial render for this circumstance might help. Adjust the perspective matrix?\n\t\t\tif (flipY) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + lastTextureSlot);\n\t\t\t\trenderTexture = this.getTargetRenderTexture(target, manager._drawWidth, manager._drawHeight);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture._frameBuffer);\n\n\t\t\t\tthis._activeShader = this.getFilterShader(this);\n\t\t\t\tgl.viewport(0, 0, manager._drawWidth, manager._drawHeight);\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t\t\tthis._drawCover(gl, !flipY);\n\t\t\t}\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tthis.updateViewport(wBackup, hBackup);\n\n\t\t\t// make sure the last texture is the active thing to draw\n\t\t\ttarget.cacheCanvas = renderTexture;\n\t\t}\n\t};\n\n\t/**\n\t * Add all the contents of a container to the pending buffers, called recursively on each container. This may\n\t * trigger a draw if a buffer runs out of space. This is the main workforce of the render loop.\n\t * @method _appendToBatchGroup\n\t * @param {Container} container The {{#crossLink \"Container\"}}{{/crossLink}} that contains everything to be drawn.\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Matrix2D} concatMtx The effective (concatenated) transformation matrix when beginning this container\n\t * @param {Number} concatAlpha The effective (concatenated) alpha when beginning this container\n\t * @param {Boolean} ignoreCache Don't use an element's cache during this draw\n\t * @protected\n\t */\n\tp._appendToBatchGroup = function (container, gl, concatMtx, concatAlpha, ignoreCache) {\n\t\t// sort out shared properties\n\t\tif (!container._glMtx) { container._glMtx = new createjs.Matrix2D(); }\n\t\tvar cMtx = container._glMtx;\n\t\tcMtx.copy(concatMtx);\n\t\tif (container.transformMatrix) {\n\t\t\tcMtx.appendMatrix(container.transformMatrix);\n\t\t} else {\n\t\t\tcMtx.appendTransform(\n\t\t\t\tcontainer.x, container.y,\n\t\t\t\tcontainer.scaleX, container.scaleY,\n\t\t\t\tcontainer.rotation, container.skewX, container.skewY,\n\t\t\t\tcontainer.regX, container.regY\n\t\t\t);\n\t\t}\n\n\t\t// sub components of figuring out the position an object holds\n\t\tvar subL, subT, subR, subB;\n\n\t\t// actually apply its data to the buffers\n\t\tvar l = container.children.length;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tvar item = container.children[i];\n\n\t\t\tif (!(item.visible && concatAlpha)) { continue; }\n\t\t\tif (!item.cacheCanvas || ignoreCache) {\n\t\t\t\tif (item._updateState){\n\t\t\t\t\titem._updateState();\n\t\t\t\t}\n\t\t\t\tif (item.children) {\n\t\t\t\t\tthis._appendToBatchGroup(item, gl, cMtx, item.alpha * concatAlpha);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for overflowing batch, if yes then force a render\n\t\t\t// TODO: DHG: consider making this polygon count dependant for things like vector draws\n\t\t\tif (this.batchCardCount+1 > this._maxCardsPerBatch) {\n\t\t\t\tthis.batchReason = \"vertexOverflow\";\n\t\t\t\tthis._drawBuffers(gl);\t\t\t\t\t// <------------------------------------------------------------\n\t\t\t\tthis.batchCardCount = 0;\n\t\t\t}\n\n\t\t\t// keep track of concatenated position\n\t\t\tif (!item._glMtx) { item._glMtx = new createjs.Matrix2D(); }\n\t\t\tvar iMtx = item._glMtx;\n\t\t\tiMtx.copy(cMtx);\n\t\t\tif (item.transformMatrix) {\n\t\t\t\tiMtx.appendMatrix(item.transformMatrix);\n\t\t\t} else {\n\t\t\t\tiMtx.appendTransform(\n\t\t\t\t\titem.x, item.y,\n\t\t\t\t\titem.scaleX, item.scaleY,\n\t\t\t\t\titem.rotation, item.skewX, item.skewY,\n\t\t\t\t\titem.regX, item.regY\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar uvRect, texIndex, image, frame, texture, src;\n\t\t\tvar useCache = item.cacheCanvas && !ignoreCache;\n\n\t\t\tif (item._webGLRenderStyle === 2 || useCache) {\t\t\t// BITMAP / Cached Canvas\n\t\t\t\timage = (ignoreCache?false:item.cacheCanvas) || item.image;\n\t\t\t} else if (item._webGLRenderStyle === 1) {\t\t\t\t\t\t\t\t\t\t\t// SPRITE\n\t\t\t\tframe = item.spriteSheet.getFrame(item.currentFrame);\t//TODO: Faster way?\n\t\t\t\tif (frame === null) { continue; }\n\t\t\t\timage = frame.image;\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// MISC (DOM objects render themselves later)\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar uvs = this._uvs;\n\t\t\tvar vertices = this._vertices;\n\t\t\tvar texI = this._indices;\n\t\t\tvar alphas = this._alphas;\n\n\t\t\t// calculate texture\n\t\t\tif (!image) { continue; }\n\t\t\tif (image._storeID === undefined) {\n\t\t\t\t// this texture is new to us so load it and add it to the batch\n\t\t\t\ttexture = this._loadTextureImage(gl, image);\n\t\t\t\tthis._insertTextureInBatch(gl, texture);\n\t\t\t} else {\n\t\t\t\t// fetch the texture (render textures know how to look themselves up to simplify this logic)\n\t\t\t\ttexture = this._textureDictionary[image._storeID];\n\t\t\t\tif (!texture){\n\t\t\t\t\tif (this.vocalDebug){ console.log(\"Texture should not be looked up while not being stored.\"); }\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// put it in the batch if needed\n\t\t\t\tif (texture._batchID !== this._batchID) {\n\t\t\t\t\tthis._insertTextureInBatch(gl, texture);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttexIndex = texture._activeIndex;\n\n\t\t\tif (item._webGLRenderStyle === 2 || useCache) {\t\t\t// BITMAP / Cached Canvas\n\t\t\t\tif (!useCache && item.sourceRect) {\n\t\t\t\t\t// calculate uvs\n\t\t\t\t\tif (!item._uvRect) { item._uvRect = {}; }\n\t\t\t\t\tsrc = item.sourceRect;\n\t\t\t\t\tuvRect = item._uvRect;\n\t\t\t\t\tuvRect.t = (src.y)/image.height;\n\t\t\t\t\tuvRect.l = (src.x)/image.width;\n\t\t\t\t\tuvRect.b = (src.y + src.height)/image.height;\n\t\t\t\t\tuvRect.r = (src.x + src.width)/image.width;\n\n\t\t\t\t\t// calculate vertices\n\t\t\t\t\tsubL = 0;\t\t\t\t\t\t\tsubT = 0;\n\t\t\t\t\tsubR = src.width+subL;\t\t\t\tsubB = src.height+subT;\n\t\t\t\t} else {\n\t\t\t\t\t// calculate uvs\n\t\t\t\t\tuvRect = StageGL.UV_RECT;\n\t\t\t\t\t// calculate vertices\n\t\t\t\t\tif (useCache) {\n\t\t\t\t\t\tsrc = item.bitmapCache;\n\t\t\t\t\t\tsubL = src.x+(src._filterOffX/src.scale);\tsubT = src.y+(src._filterOffY/src.scale);\n\t\t\t\t\t\tsubR = (src._drawWidth/src.scale)+subL;\t\tsubB = (src._drawHeight/src.scale)+subT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsubL = 0;\t\t\t\t\t\tsubT = 0;\n\t\t\t\t\t\tsubR = image.width+subL;\t\tsubB = image.height+subT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (item._webGLRenderStyle === 1) {\t\t\t\t\t\t\t\t\t\t\t// SPRITE\n\t\t\t\tvar rect = frame.rect;\n\n\t\t\t\t// calculate uvs\n\t\t\t\tuvRect = frame.uvRect;\n\t\t\t\tif (!uvRect) {\n\t\t\t\t\tuvRect = StageGL.buildUVRects(item.spriteSheet, item.currentFrame, false);\n\t\t\t\t}\n\n\t\t\t\t// calculate vertices\n\t\t\t\tsubL = -frame.regX;\t\t\t\t\t\t\t\tsubT = -frame.regY;\n\t\t\t\tsubR = rect.width-frame.regX;\t\t\t\t\tsubB = rect.height-frame.regY;\n\t\t\t}\n\n\t\t\t// These must be calculated here else a forced draw might happen after they're set\n\t\t\tvar offV1 = this.batchCardCount*StageGL.INDICIES_PER_CARD;\t\t// offset for 1 component vectors\n\t\t\tvar offV2 = offV1*2;\t\t\t\t\t\t\t\t\t\t\t// offset for 2 component vectors\n\n\t\t\t//DHG: See Matrix2D.transformPoint for why this math specifically\n\t\t\t// apply vertices\n\t\t\tvertices[offV2] =\t\tsubL *iMtx.a + subT *iMtx.c +iMtx.tx;\t\tvertices[offV2+1] =\t\tsubL *iMtx.b + subT *iMtx.d +iMtx.ty;\n\t\t\tvertices[offV2+2] =\t\tsubL *iMtx.a + subB *iMtx.c +iMtx.tx;\t\tvertices[offV2+3] =\t\tsubL *iMtx.b + subB *iMtx.d +iMtx.ty;\n\t\t\tvertices[offV2+4] =\t\tsubR *iMtx.a + subT *iMtx.c +iMtx.tx;\t\tvertices[offV2+5] =\t\tsubR *iMtx.b + subT *iMtx.d +iMtx.ty;\n\t\t\tvertices[offV2+6] =\t\tvertices[offV2+2];\t\t\t\t\t\t\tvertices[offV2+7] =\t\tvertices[offV2+3];\n\t\t\tvertices[offV2+8] =\t\tvertices[offV2+4];\t\t\t\t\t\t\tvertices[offV2+9] =\t\tvertices[offV2+5];\n\t\t\tvertices[offV2+10] =\tsubR *iMtx.a + subB *iMtx.c +iMtx.tx;\t\tvertices[offV2+11] =\tsubR *iMtx.b + subB *iMtx.d +iMtx.ty;\n\n\t\t\t// apply uvs\n\t\t\tuvs[offV2] =\tuvRect.l;\t\t\tuvs[offV2+1] =\tuvRect.t;\n\t\t\tuvs[offV2+2] =\tuvRect.l;\t\t\tuvs[offV2+3] =\tuvRect.b;\n\t\t\tuvs[offV2+4] =\tuvRect.r;\t\t\tuvs[offV2+5] =\tuvRect.t;\n\t\t\tuvs[offV2+6] =\tuvRect.l;\t\t\tuvs[offV2+7] =\tuvRect.b;\n\t\t\tuvs[offV2+8] =\tuvRect.r;\t\t\tuvs[offV2+9] =\tuvRect.t;\n\t\t\tuvs[offV2+10] =\tuvRect.r;\t\t\tuvs[offV2+11] =\tuvRect.b;\n\n\t\t\t// apply texture\n\t\t\ttexI[offV1] = texI[offV1+1] = texI[offV1+2] = texI[offV1+3] = texI[offV1+4] = texI[offV1+5] = texIndex;\n\n\t\t\t// apply alpha\n\t\t\talphas[offV1] = alphas[offV1+1] = alphas[offV1+2] = alphas[offV1+3] = alphas[offV1+4] = alphas[offV1+5] = item.alpha * concatAlpha;\n\n\t\t\tthis.batchCardCount++;\n\t\t}\n\t};\n\n\t/**\n\t * Draws all the currently defined cards in the buffer to the render surface.\n\t * @method _drawBuffers\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @protected\n\t */\n\tp._drawBuffers = function (gl) {\n\t\tif (this.batchCardCount <= 0) { return; }\t// prevents error logs on stages filled with un-renederable content.\n\n\t\tif (this.vocalDebug) {\n\t\t\tconsole.log(\"Draw[\"+ this._drawID +\":\"+ this._batchID +\"] : \"+ this.batchReason);\n\t\t}\n\t\tvar shaderProgram = this._activeShader;\n\t\tvar vertexPositionBuffer = this._vertexPositionBuffer;\n\t\tvar textureIndexBuffer = this._textureIndexBuffer;\n\t\tvar uvPositionBuffer = this._uvPositionBuffer;\n\t\tvar alphaBuffer = this._alphaBuffer;\n\n\t\tgl.useProgram(shaderProgram);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._vertices);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, textureIndexBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.textureIndexAttribute, textureIndexBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._indices);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._uvs);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, alphaBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.alphaAttribute, alphaBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, this._alphas);\n\n\t\tgl.uniformMatrix4fv(shaderProgram.pMatrixUniform, gl.FALSE, this._projectionMatrix);\n\n\t\tfor (var i = 0; i < this._batchTextureCount; i++) {\n\t\t\tvar texture = this._batchTextures[i];\n\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tthis.setTextureParams(gl, texture.isPOT);\n\t\t}\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.batchCardCount*StageGL.INDICIES_PER_CARD);\n\t\tthis._batchID++;\n\t};\n\n\t/**\n\t * Draws a card that covers the entire render surface. Mainly used for filters.\n\t * @method _drawBuffers\n\t * @param {WebGLRenderingContext} gl The canvas WebGL context object to draw into.\n\t * @param {Boolean} flipY Covers are used for things like RenderTextures and because of 3D vs Canvas space this can\n\t * end up meaning the `y` space sometimes requires flipping in the render.\n\t * @protected\n\t */\n\tp._drawCover = function (gl, flipY) {\n\t\tif (this._isDrawing > 0) {\n\t\t\tthis._drawBuffers(gl);\n\t\t}\n\n\t\tif (this.vocalDebug) {\n\t\t\tconsole.log(\"Draw[\"+ this._drawID +\":\"+ this._batchID +\"] : \"+ \"Cover\");\n\t\t}\n\t\tvar shaderProgram = this._activeShader;\n\t\tvar vertexPositionBuffer = this._vertexPositionBuffer;\n\t\tvar uvPositionBuffer = this._uvPositionBuffer;\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tgl.useProgram(shaderProgram);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, vertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, StageGL.COVER_VERT);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, uvPositionBuffer);\n\t\tgl.vertexAttribPointer(shaderProgram.uvPositionAttribute, uvPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, flipY?StageGL.COVER_UV_FLIP:StageGL.COVER_UV);\n\n\t\tgl.uniform1i(shaderProgram.samplerUniform, 0);\n\t\tgl.uniform1f(shaderProgram.uprightUniform, flipY?0:1);\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, StageGL.INDICIES_PER_CARD);\n\t};\n\n\tcreatejs.StageGL = createjs.promote(StageGL, \"Stage\");\n}());\n\n//##############################################################################\n// Bitmap.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\n\t/**\n\t * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n\t * HTML element, or a string.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tvar bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\t *\n\t * <strong>Notes:</strong>\n\t * <ol>\n\t * \t<li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n\t * \t prevent blinking / flashing.\n\t * \t<li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n\t * \t will be displayed.</li>\n\t * \t<li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n\t * \tthe Bitmap can be cached.</li>\n\t * \t<li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n\t * \thappens in all browsers except recent Firefox builds.</li>\n\t * \t<li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n\t * \tmethods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n\t * \t`crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n\t * </ol>\n\t *\n\t * @class Bitmap\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t **/\n\tfunction Bitmap(imageOrUri) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type CanvasImageSource | Object\n\t\t **/\n\t\tif (typeof imageOrUri == \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\t\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Notes:\n\t\t * <ul>\n\t\t *     <li>that video sources must have a width / height set to work correctly with `sourceRect`</li>\n\t\t *     <li>Cached objects will ignore the `sourceRect` property</li>\n\t\t * </ul>\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t// private properties:\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n\t\tthis._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP;\n\t}\n\tvar p = createjs.extend(Bitmap, createjs.DisplayObject);\n\t\n\t\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Bitmap; // TODO: deprecated.\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar image = this.image;\n\t\tvar hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tvar img = this.image, rect = this.sourceRect;\n\t\tif (img.getImage) { img = img.getImage(); }\n\t\tif (!img) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t};\n\t\n\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t//Bitmap. This is why they have no method implementations.\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t **/\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t **/\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\tvar rect = this.DisplayObject_getBounds();\n\t\tif (rect) { return rect; }\n\t\tvar image = this.image, o = this.sourceRect || image;\n\t\tvar hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @param {Boolean} node Whether the underlying dom element should be cloned as well.\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t **/\n\tp.clone = function(node) {\n\t\tvar image = this.image;\n\t\tif(image && node){ image = image.cloneNode(); }\n\t\tvar o = new Bitmap(image);\n\t\tif (this.sourceRect) { o.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(o);\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Bitmap (name=\"+  this.name +\")]\";\n\t};\n\n\t\n\tcreatejs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Sprite.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n\t * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n\t * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n\t * play frames as an animation, and even sequence animations together.\n\t *\n\t * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var instance = new createjs.Sprite(spriteSheet);\n\t *      instance.gotoAndStop(\"frameName\");\n\t *\n\t * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n\t * only the first defined frame defined in the sprite sheet will be displayed.\n\t *\n\t * @class Sprite\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t **/\n\tfunction Sprite(spriteSheet, frameOrAnimation) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t **/\n\t\tthis.currentFrame = 0;\n\t\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t **/\n\t\tthis.currentAnimation = null;\n\t\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis.paused = true;\n\t\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t **/\n\t\tthis.spriteSheet = spriteSheet;\n\t\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.currentAnimationFrame = 0;\n\t\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.framerate = 0;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t **/\n\t\tthis._animation = null;\n\t\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n\t\tthis._currentFrame = null;\n\t\t\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n\t\tthis._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t}\n\tvar p = createjs.extend(Sprite, createjs.DisplayObject);\n\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n\n\n// events:\n\t/**\n\t * Dispatched when an animation reaches its ends.\n\t * @event animationend\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} name The name of the animation that just ended.\n\t * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n\t * @since 0.6.0\n\t */\n\t \n\t/**\n\t * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n\t * or calling gotoAndPlay() or gotoAndStop().\n\t * @event change\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t */\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tvar o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tvar rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t};\n\n\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t//Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t **/\n\tp.play = function() {\n\t\tthis.paused = false;\n\t};\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t **/\n\tp.stop = function() {\n\t\tthis.paused = true;\n\t};\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t **/\n\tp.gotoAndPlay = function(frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t};\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t **/\n\tp.gotoAndStop = function(frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t};\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n\tp.advance = function(time) {\n\t\tvar fps = this.framerate || this.spriteSheet.framerate;\n\t\tvar t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t};\n\t\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t **/\n\tp.getBounds = function() {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t};\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Sprite (name=\"+  this.name +\")]\";\n\t};\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.DisplayObject__cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\t\t\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t **/\n\tp._tick = function(evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t **/\n\tp._normalizeFrame = function(frameDelta) {\n\t\tframeDelta = frameDelta || 0;\n\t\tvar animation = this._animation;\n\t\tvar paused = this.paused;\n\t\tvar frame = this._currentFrame;\n\t\tvar l;\n\t\t\n\t\tif (animation) {\n\t\t\tvar speed = animation.speed || 1;\n\t\t\tvar animFrame = this.currentAnimationFrame;\n\t\t\tl = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tvar next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tl = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @property _dispatchAnimationEnd\n\t * @private\n\t * @type {Function}\n\t **/\n\tp._dispatchAnimationEnd = function(animation, frame, paused, next, end) {\n\t\tvar name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tvar evt = new createjs.Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tvar changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t};\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t **/\n\tp._goto = function(frameOrAnimation, frame) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tvar data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t};\n\n\n\tcreatejs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Shape.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n\t * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n\t * instances to display the same vector graphics with different positions or transforms.\n\t *\n\t * If the vector art will not\n\t * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n\t * rendering cost.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *      var shape = new createjs.Shape(graphics);\n\t *\n\t *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *\n\t * @class Shape\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t **/\n\tfunction Shape(graphics) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t **/\n\t\tthis.graphics = graphics ? graphics : new createjs.Graphics();\n\t}\n\tvar p = createjs.extend(Shape, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t **/\n\tp.clone = function(recursive) {\n\t\tvar g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn  this._cloneProps(new Shape(g));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Shape (name=\"+  this.name +\")]\";\n\t};\n\n\n\tcreatejs.Shape = createjs.promote(Shape, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Text.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n\t * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n\t * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\t *\n\t * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n\t * multiple font styles, you will need to create multiple text instances, and position them manually.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n\t *      text.x = 100;\n\t *      text.textBaseline = \"alphabetic\";\n\t *\n\t * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n\t * before it can be displayed.\n\t *\n\t * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n\t * browsers will render Text exactly the same.\n\t * @class Text\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t **/\n\tfunction Text(text, font, color) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t **/\n\t\tthis.text = text;\n\t\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t **/\n\t\tthis.font = font;\n\t\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t **/\n\t\tthis.color = color;\n\t\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t **/\n\t\tthis.textAlign = \"left\";\n\t\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\t\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n\t\tthis.maxWidth = null;\n\t\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t **/\n\t\tthis.outline = 0;\n\t\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t **/\n\t\tthis.lineHeight = 0;\n\t\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t **/\n\t\tthis.lineWidth = null;\n\t}\n\tvar p = createjs.extend(Text, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t\n// static properties:\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t **/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) { Text._workingContext = canvas.getContext(\"2d\"); canvas.width = canvas.height = 1; }\n\t\n\t\n// constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n\tText.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\n\t\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n\tText.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\n\t\tvar col = this.color || \"#000\";\n\t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n\t\telse { ctx.fillStyle = col; }\n\t\t\n\t\tthis._drawText(this._prepContext(ctx));\n\t\treturn true;\n\t};\n\n\t/**\n\t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n\t * @method getMeasuredWidth\n\t * @return {Number} The measured, untransformed width of the text.\n\t **/\n\tp.getMeasuredWidth = function() {\n\t\treturn this._getMeasuredWidth(this.text);\n\t};\n\n\t/**\n\t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n\t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n\t * @method getMeasuredLineHeight\n\t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n\t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n\t **/\n\tp.getMeasuredLineHeight = function() {\n\t\treturn this._getMeasuredWidth(\"M\")*1.2;\n\t};\n\n\t/**\n\t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n\t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n\t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n\t * @method getMeasuredHeight\n\t * @return {Number} The approximate height of the untransformed multi-line text.\n\t **/\n\tp.getMeasuredHeight = function() {\n\t\treturn this._drawText(null,{}).height;\n\t};\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\tvar rect = this.DisplayObject_getBounds();\n\t\tif (rect) { return rect; }\n\t\tif (this.text == null || this.text === \"\") { return null; }\n\t\tvar o = this._drawText(null, {});\n\t\tvar w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n\t\tvar x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\tvar y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\treturn this._rectangle.setValues(x, y, w, o.height);\n\t};\n\t\n\t/**\n\t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n\t * of the drawn text. The lines property contains an array of strings, one for\n\t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n\t * whitespace removed.\n\t * @method getMetrics\n\t * @return {Object} An object with width, height, and lines properties.\n\t **/\n\tp.getMetrics = function() {\n\t\tvar o = {lines:[]};\n\t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\treturn this._drawText(null, o, o.lines);\n\t};\n\n\t/**\n\t * Returns a clone of the Text instance.\n\t * @method clone\n\t * @return {Text} a clone of the Text instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Text (text=\"+  (this.text.length > 20 ? this.text.substr(0, 17)+\"...\" : this.text) +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Text} o\n\t * @protected\n\t * @return {Text} o\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.DisplayObject__cloneProps(o);\n\t\to.textAlign = this.textAlign;\n\t\to.textBaseline = this.textBaseline;\n\t\to.maxWidth = this.maxWidth;\n\t\to.outline = this.outline;\n\t\to.lineHeight = this.lineHeight;\n\t\to.lineWidth = this.lineWidth;\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _getWorkingContext\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {CanvasRenderingContext2D}\n\t * @protected\n\t **/\n\tp._prepContext = function(ctx) {\n\t\tctx.font = this.font||\"10px sans-serif\";\n\t\tctx.textAlign = this.textAlign||\"left\";\n\t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t};\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t **/\n\tp._drawText = function(ctx, o, lines) {\n\t\tvar paint = !!ctx;\n\t\tif (!paint) {\n\t\t\tctx = Text._workingContext;\n\t\t\tctx.save();\n\t\t\tthis._prepContext(ctx);\n\t\t}\n\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\t\n\t\tvar maxW = 0, count = 0;\n\t\tvar hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\t\tfor (var i=0, l=hardLines.length; i<l; i++) {\n\t\t\tvar str = hardLines[i];\n\t\t\tvar w = null;\n\t\t\t\n\t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n\t\t\t\t// text wrapping:\n\t\t\t\tvar words = str.split(/(\\s)/);\n\t\t\t\tstr = words[0];\n\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\n\t\t\t\tfor (var j=1, jl=words.length; j<jl; j+=2) {\n\t\t\t\t\t// Line needs to wrap:\n\t\t\t\t\tvar wordW = ctx.measureText(words[j] + words[j+1]).width;\n\t\t\t\t\tif (w + wordW > this.lineWidth) {\n\t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\t\t\t\tif (lines) { lines.push(str); }\n\t\t\t\t\t\tif (w > maxW) { maxW = w; }\n\t\t\t\t\t\tstr = words[j+1];\n\t\t\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += words[j] + words[j+1];\n\t\t\t\t\t\tw += wordW;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\tif (lines) { lines.push(str); }\n\t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n\t\t\tif (w > maxW) { maxW = w; }\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (o) {\n\t\t\to.width = maxW;\n\t\t\to.height = count*lineHeight;\n\t\t}\n\t\tif (!paint) { ctx.restore(); }\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _drawTextLine\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {String} text\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tp._drawTextLine = function(ctx, text, y) {\n\t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n\t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n\t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n\t};\n\t\n\t\n\t/**\n\t * @method _getMeasuredWidth\n\t * @param {String} text\n\t * @protected\n\t **/\n\tp._getMeasuredWidth = function(text) {\n\t\tvar ctx = Text._workingContext;\n\t\tctx.save();\n\t\tvar w = this._prepContext(ctx).measureText(text).width;\n\t\tctx.restore();\n\t\treturn w;\n\t};\n\n\n\tcreatejs.Text = createjs.promote(Text, \"DisplayObject\");\n}());\n\n//##############################################################################\n// BitmapText.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n\t * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n\t * property for more information on defining glyphs.\n\t *\n\t * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n\t * As such, methods like addChild and removeChild are disabled.\n\t *\n\t *\n\t * @class BitmapText\n\t * @extends DisplayObject\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t **/\n\tfunction BitmapText(text, spriteSheet) {\n\t\tthis.Container_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t **/\n\t\tthis.text = text||\"\";\n\t\t\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t * \n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t **/\n\t\tthis.spriteSheet = spriteSheet;\n\t\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.lineHeight = 0;\n\t\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.letterSpacing = 0;\n\t\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.spaceWidth = 0;\n\t\t\n\t\t\n\t// private properties:\n\t \t/**\n\t\t * @property _oldProps\n\t\t * @type Object\n\t\t * @protected\n\t\t **/\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\tvar p = createjs.extend(BitmapText, createjs.Container);\n\n// static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t **/\n\tBitmapText.maxPoolSize = 100;\n\t\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t */\n\tBitmapText._spritePool = [];\n\n\t\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tthis.Container_draw(ctx, ignoreCache);\n\t};\n\t\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp.getBounds = function() {\n\t\tthis._updateText();\n\t\treturn this.Container_getBounds();\n\t};\n\t\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t};\n\t\n\tp.clone = function() {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t};\n\t\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t **/\n\tp.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function() {};\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp._updateState = function() {\n\t\tthis._updateText();\n\t};\n\n \t/**\n\t * @method _cloneProps\n\t * @param {BitmapText} o\n\t * @return {BitmapText} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.Container__cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getFrameIndex = function(character, spriteSheet) {\n\t\tvar c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c=null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t};\n\t\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t **/\n\tp._getFrame = function(character, spriteSheet) {\n\t\tvar index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t};\n\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getLineHeight = function(ss) {\n\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"T\",ss) || this._getFrame(\"L\",ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t};\n\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getSpaceWidth = function(ss) {\n\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"l\",ss) || this._getFrame(\"e\",ss) || this._getFrame(\"a\",ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t};\n\n\t/**\n\t * @method _updateText\n\t * @protected\n\t **/\n\tp._updateText = function() {\n\t\tvar x=0, y=0, o=this._oldProps, change=false, spaceW=this.spaceWidth, lineH=this.lineHeight, ss=this.spriteSheet;\n\t\tvar pool=BitmapText._spritePool, kids=this.children, childIndex=0, numKids=kids.length, sprite;\n\t\t\n\t\tfor (var n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\t\t\n\t\tvar hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\t\t\n\t\tfor(var i=0, l=this.text.length; i<l; i++) {\n\t\t\tvar character = this.text.charAt(i);\n\t\t\tif (character == \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character==\"\\n\" || character==\"\\r\") {\n\t\t\t\tif (character==\"\\r\" && this.text.charAt(i+1) == \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\t\t\t\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\t\t\t\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t};\n\n\n\tcreatejs.BitmapText = createjs.promote(BitmapText, \"Container\");\n}());\n\n//##############################################################################\n// MovieClip.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n\t * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n\t * class has been included in the EaselJS minified file since 0.7.0.\n\t *\n\t * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n\t * been made to support time-based timelines in the future.\n\t *\n\t * <h4>Example</h4>\n\t * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n\t * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvas\");\n\t *      createjs.Ticker.addEventListener(\"tick\", stage);\n\t *\n\t *      var mc = new createjs.MovieClip({loop:-1, labels:{myLabel:20}});\n\t *      stage.addChild(mc);\n\t *\n\t *      var child1 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#999999\")\n\t *              .drawCircle(30,30,30));\n\t *      var child2 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n\t *              .drawCircle(30,30,30));\n\t *\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child1)\n\t *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child2)\n\t *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n\t *\n\t *      mc.gotoAndPlay(\"start\");\n\t *\n\t * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n\t * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n\t * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n\t *\n\t * @class MovieClip\n\t * @main MovieClip\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n\t * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n\t * specified.<UL>\n\t *    <LI> `mode`</LI>\n\t *    <LI> `startPosition`</LI>\n\t *    <LI> `frameBounds`</LI>\n\t * </UL>\n\t * \n\t * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n\t * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n\t * @extends Container\n\t * @constructor\n\t **/\n\tfunction MovieClip(props) {\n\t\tthis.Container_constructor();\n\t\t!MovieClip.inited&&MovieClip.init(); // static init\n\t\t\n\t\tvar mode, startPosition, loop, labels;\n\t\t\n\t\t// handle old params (mode, startPosition, loop, labels):\n\t\t// TODO: deprecated param handling:\n\t\tif (props instanceof String || arguments.length > 1) {\n\t\t\tmode = props;\n\t\t\tstartPosition = arguments[1];\n\t\t\tloop = arguments[2];\n\t\t\tlabels = arguments[3];\n\t\t\tif (loop == null) { loop = -1; }\n\t\t\tprops = null;\n\t\t} else if (props) {\n\t\t\tmode = props.mode;\n\t\t\tstartPosition = props.startPosition;\n\t\t\tloop = props.loop;\n\t\t\tlabels = props.labels;\n\t\t}\n\t\tif (!props) { props = {labels:labels}; }\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t **/\n\t\tthis.mode = mode||MovieClip.INDEPENDENT;\n\t\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = startPosition||0;\n\t\n\t\t/**\n\t\t * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n\t\t * 1 would cause it to loop once (ie. play a total of twice).\n\t\t * @property loop\n\t\t * @type Number\n\t\t * @default -1\n\t\t */\n\t\tthis.loop = loop === true ? -1 : (loop || 0);\n\t\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\t\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.paused = props.paused||false;\n\t\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\t\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\t\t\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.frameBounds = this.frameBounds||props.frameBounds; // frameBounds are set on the prototype in Animate.\n\t\t\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n\t\tthis.framerate = null;\n\t\t\n\t\t// set up the needed props for Timeline:\n\t\tprops.useTicks = props.paused = true;\n\t\t\n\t\t/**\n\t\t * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n\t\t * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n\t\t * instances to the timeline.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n\t\t *      var mc = new createjs.MovieClip();\n\t\t *      mc.timeline.addTween(tween);\n\t\t *\n\t\t * Elements can be added and removed from the timeline by toggling an \"_off\" property\n\t\t * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n\t\t * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n\t\t * frame 1. You can use the \"visible\" property to achieve the same effect.\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({_off:false})\n\t\t *          .wait(1).to({_off:true})\n\t\t *          .wait(1).to({_off:false});\n\t\t *\n\t\t * @property timeline\n\t\t * @type Timeline\n\t\t * @default null\n\t\t */\n\t\tthis.timeline = new createjs.Timeline(props);\n\t\t\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\t\n\t\t/**\n\t\t * @property _rawPosition\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\t\t\n\t\t/**\n\t\t * @property _bound_resolveState\n\t\t * @type Function\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t\n\t\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\t\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\t}\n\tvar p = createjs.extend(MovieClip, createjs.Container);\n\n\n// constants:\n\t/**\n\t * The MovieClip will advance independently of its parent, even if its parent is paused.\n\t * This is the default mode.\n\t * @property INDEPENDENT\n\t * @static\n\t * @type String\n\t * @default \"independent\"\n\t * @readonly\n\t **/\n\tMovieClip.INDEPENDENT = \"independent\";\n\n\t/**\n\t * The MovieClip will only display a single frame (as determined by the startPosition property).\n\t * @property SINGLE_FRAME\n\t * @static\n\t * @type String\n\t * @default \"single\"\n\t * @readonly\n\t **/\n\tMovieClip.SINGLE_FRAME = \"single\";\n\n\t/**\n\t * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n\t * the parent MovieClip.\n\t * @property SYNCHED\n\t * @static\n\t * @type String\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n\tMovieClip.SYNCHED = \"synched\";\n\t\n\t\n// static properties:\n\tMovieClip.inited = false;\n\t\n\t\n// static methods:\n\tMovieClip.init = function() {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t};\n\t\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n\t * @method _getLabels\n\t * @protected\n\t * @return {Array}\n\t **/\n\tp._getLabels = function() {\n\t\treturn this.timeline.getLabels();\n\t};\n\t// MovieClip.getLabels is @deprecated. Remove for 1.1+\n\tp.getLabels = createjs.deprecate(p._getLabels, \"MovieClip.getLabels\");\n\n\t/**\n\t * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n\t * @method _getCurrentLabel\n\t * @protected\n\t * @return {String}\n\t **/\n\tp._getCurrentLabel = function() {\n\t\treturn this.timeline.currentLabel;\n\t};\n\t// MovieClip.getCurrentLabel is @deprecated. Remove for 1.1+\n\tp.getCurrentLabel = createjs.deprecate(p._getCurrentLabel, \"MovieClip.getCurrentLabel\");\n\n\t/**\n\t * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n\t * @method _getDuration\n\t * @protected\n\t * @return {Number}\n\t **/\n\tp._getDuration = function() {\n\t\treturn this.timeline.duration;\n\t};\n\t// MovieClip.getDuration is @deprecated. Remove for 1.1+\n\tp.getDuration = createjs.deprecate(p._getDuration, \"MovieClip.getDuration\");\n\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the name of the label on or immediately before the current frame.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property duration\n\t * @type {Number}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tlabels: { get: p._getLabels },\n\t\t\tcurrentLabel: { get: p._getCurrentLabel },\n\t\t\ttotalFrames: { get: p._getDuration },\n\t\t\tduration: { get: p._getDuration }\n\t\t\t// TODO: can we just proxy .currentFrame to tl.position as well? Ditto for .loop (or just remove entirely).\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis._updateState();\n\t\tthis.Container_draw(ctx, ignoreCache);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t **/\n\tp.play = function() {\n\t\tthis.paused = false;\n\t};\n\t\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t **/\n\tp.stop = function() {\n\t\tthis.paused = true;\n\t};\n\t\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t **/\n\tp.gotoAndPlay = function(positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t};\n\t\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t **/\n\tp.gotoAndStop = function(positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t};\n\t\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n\tp.advance = function(time) {\n\t\tvar independent = MovieClip.INDEPENDENT;\n\t\tif (this.mode !== independent) { return; } // update happens in draw for synched clips\n\t\t\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tvar o=this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) { if (o.mode === independent) { fps = o._framerate; } }\n\t\tthis._framerate = fps;\n\t\t\n\t\tif (this.paused) { return; }\n\t\t\n\t\t// calculate how many frames to advance:\n\t\tvar t = (fps !== null && fps !== -1 && time !== null) ? time/(1000/fps) + this._t : 1;\n\t\tvar frames = t|0;\n\t\tthis._t = t-frames; // leftover time, save to add to next advance.\n\t\t\n\t\twhile (frames--) { this._updateTimeline(this._rawPosition+1, false); }\n\t};\n\t\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow(\"MovieClip cannot be cloned.\");\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[MovieClip (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp._updateState = function() {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t};\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t **/\n\tp._tick = function(evtObj) {\n\t\tthis.advance(evtObj&&evtObj.delta);\n\t\tthis.Container__tick(evtObj);\n\t};\n\t\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t **/\n\tp._goto = function(positionOrLabel) {\n\t\tvar pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t};\n\t\n\t/**\n\t * @method _reset\n\t * @private\n\t **/\n\tp._reset = function() {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t};\n\t\n\t/**\n\t * @method _updateTimeline\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t **/\n\tp._updateTimeline = function(rawPosition, jump) {\n\t\tvar synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode===MovieClip.SINGLE_FRAME?0:this._synchOffset); }\n\t\tif (rawPosition < 0) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\t\t\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t};\n\t\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @method _renderFirstFrame\n\t * @protected\n\t **/\n\tp._renderFirstFrame = function() {\n\t\tvar tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t};\n\t\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @method _resolveState\n\t * @protected\n\t **/\n\tp._resolveState = function() {\n\t\tvar tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\t\t\n\t\tfor (var n in this._managed) { this._managed[n] = 1; }\n\n\t\tvar tweens = tl.tweens;\n\t\tfor (var i=0, l=tweens.length; i<l; i++) {\n\t\t\tvar tween = tweens[i],  target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. There's likely a better approach.\n\t\t\tvar offset = tween._stepPosition;\n\n\t\t\tif (target instanceof createjs.DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tvar kids = this.children;\n\t\tfor (i=kids.length-1; i>=0; i--) {\n\t\t\tvar id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t **/\n\tp._setState = function(state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (var i=state.length-1;i>=0;i--) {\n\t\t\tvar o = state[i];\n\t\t\tvar target = o.t;\n\t\t\tvar props = o.p;\n\t\t\tfor (var n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t};\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t **/\n\tp._addManagedChild = function(child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child,0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n\t\t\t// TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && (!this._managed[child.id])) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t};\n\t\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n\tp._getBounds = function(matrix, ignoreTransform) {\n\t\tvar bounds = this.DisplayObject_getBounds();\n\t\tif (!bounds) {\n\t\t\tif (this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\t}\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn this.Container__getBounds(matrix, ignoreTransform);\n\t};\n\n\n\tcreatejs.MovieClip = createjs.promote(MovieClip, \"Container\");\n\n\n\n// MovieClipPlugin for TweenJS:\n\t/**\n\t * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n\t * property from tweening.\n\t * @private\n\t * @class MovieClipPlugin\n\t * @constructor\n\t **/\n\tfunction MovieClipPlugin() {\n\t\tthrow(\"MovieClipPlugin cannot be instantiated.\")\n\t}\n\t\n\t/**\n\t * @property priority\n\t * @type {Number}\n\t * @static\n\t * @readonly\n\t **/\n\tMovieClipPlugin.priority = 100; // very high priority, should run first\n\t\n\t/**\n\t * @property ID\n\t * @type {String}\n\t * @static\n\t * @readonly\n\t **/\n\tMovieClipPlugin.ID = \"MovieClip\";\n\n\t/**\n\t * @method install\n\t * @static\n\t **/\n\tMovieClipPlugin.install = function() {\n\t\tcreatejs.Tween._installPlugin(MovieClipPlugin);\n\t};\n\t\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {*} value\n\t * @static\n\t **/\n\tMovieClipPlugin.init = function(tween, prop, value) {\n\t\tif (prop === \"startPosition\" && tween.target instanceof MovieClip) { tween._addPlugin(MovieClipPlugin); }\n\t};\n\t\n\t/**\n\t * @method step\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {Object} props\n\t * @static\n\t **/\n\tMovieClipPlugin.step = function(tween, step, props) {};\n\n\t/**\n\t * @method change\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {*} value\n\t * @param {Number} ratio\n\t * @param {Object} end\n\t * @return {*}\n\t * @static\n\t */\n\tMovieClipPlugin.change = function(tween, step, prop, value, ratio, end) {\n\t\tif (prop === \"startPosition\") { return (ratio === 1 ? step.props[prop] : step.prev.props[prop]); }\n\t};\n\n}());\n\n//##############################################################################\n// SpriteSheetUtils.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\t\r\n\t\r\n// constructor:\r\n\t/**\r\n\t * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\r\n\t * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\r\n\t * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\r\n\t * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\r\n\t * @class SpriteSheetUtils\r\n\t * @static\r\n\t **/\r\n\tfunction SpriteSheetUtils() {\r\n\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\r\n\t}\r\n\r\n\r\n// private static properties:\r\n\t/**\r\n\t * @property _workingCanvas\r\n\t * @static\r\n\t * @type HTMLCanvasElement | Object\r\n\t * @protected\r\n\t*/\r\n\t/**\r\n\t * @property _workingContext\r\n\t * @static\r\n\t * @type CanvasRenderingContext2D\r\n\t * @protected\r\n\t*/\r\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\r\n\tif (canvas.getContext) {\r\n\t\tSpriteSheetUtils._workingCanvas = canvas;\r\n\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\r\n\t\tcanvas.width = canvas.height = 1;\r\n\t}\r\n\r\n\r\n// public static methods:\r\n\t/**\r\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\r\n\t * to use a spritesheet frame as the source for a bitmap fill.\r\n\t *\r\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\r\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\r\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\r\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\r\n\t *\r\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\r\n\t * @method extractFrame\r\n\t * @static\r\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\r\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\r\n\t * name is specified, only the first frame of the animation will be extracted.\r\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\r\n\t*/\r\n\tSpriteSheetUtils.extractFrame = function(spriteSheet, frameOrAnimation) {\r\n\t\tif (isNaN(frameOrAnimation)) {\r\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\r\n\t\t}\r\n\t\tvar data = spriteSheet.getFrame(frameOrAnimation);\r\n\t\tif (!data) { return null; }\r\n\t\tvar r = data.rect;\r\n\t\tvar canvas = SpriteSheetUtils._workingCanvas;\r\n\t\tcanvas.width = r.width;\r\n\t\tcanvas.height = r.height;\r\n\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\r\n\t\tvar img = document.createElement(\"img\");\r\n\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\treturn img;\r\n\t};\r\n\r\n\t// SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\r\n\tSpriteSheetUtils.addFlippedFrames = createjs.deprecate(null, \"SpriteSheetUtils.addFlippedFrames\");\r\n\r\n\t// SpriteSheetUtils.addFlippedFrames is @deprecated. Remove for 1.1+\r\n\tSpriteSheetUtils.mergeAlpha = createjs.deprecate(null, \"SpriteSheetUtils.mergeAlpha\");\r\n\r\n\t\r\n// private static methods:\r\n\tSpriteSheetUtils._flip = function(spriteSheet, count, h, v) {\r\n\t\tvar imgs = spriteSheet._images;\r\n\t\tvar canvas = SpriteSheetUtils._workingCanvas;\r\n\t\tvar ctx = SpriteSheetUtils._workingContext;\r\n\t\tvar il = imgs.length/count;\r\n\t\tfor (var i=0;i<il;i++) {\r\n\t\t\tvar src = imgs[i];\r\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\r\n\t\t\tctx.setTransform(1,0,0,1,0,0);\r\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\r\n\t\t\tcanvas.width = src.width;\r\n\t\t\tcanvas.height = src.height;\r\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\r\n\t\t\tctx.drawImage(src,0,0);\r\n\t\t\tvar img = document.createElement(\"img\");\r\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\t\t// work around a strange bug in Safari:\r\n\t\t\timg.width = (src.width||src.naturalWidth);\r\n\t\t\timg.height = (src.height||src.naturalHeight);\r\n\t\t\timgs.push(img);\r\n\t\t}\r\n\r\n\t\tvar frames = spriteSheet._frames;\r\n\t\tvar fl = frames.length/count;\r\n\t\tfor (i=0;i<fl;i++) {\r\n\t\t\tsrc = frames[i];\r\n\t\t\tvar rect = src.rect.clone();\r\n\t\t\timg = imgs[src.image.__tmp+il*count];\r\n\r\n\t\t\tvar frame = {image:img,rect:rect,regX:src.regX,regY:src.regY};\r\n\t\t\tif (h) {\r\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\r\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\r\n\t\t\t}\r\n\t\t\tif (v) {\r\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\r\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\r\n\t\t\t}\r\n\t\t\tframes.push(frame);\r\n\t\t}\r\n\r\n\t\tvar sfx = \"_\"+(h?\"h\":\"\")+(v?\"v\":\"\");\r\n\t\tvar names = spriteSheet._animations;\r\n\t\tvar data = spriteSheet._data;\r\n\t\tvar al = names.length/count;\r\n\t\tfor (i=0;i<al;i++) {\r\n\t\t\tvar name = names[i];\r\n\t\t\tsrc = data[name];\r\n\t\t\tvar anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\r\n\t\t\tif (src.next) { anim.next += sfx; }\r\n\t\t\tframes = src.frames;\r\n\t\t\tfor (var j=0,l=frames.length;j<l;j++) {\r\n\t\t\t\tanim.frames.push(frames[j]+fl*count);\r\n\t\t\t}\r\n\t\t\tdata[anim.name] = anim;\r\n\t\t\tnames.push(anim.name);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcreatejs.SpriteSheetUtils = SpriteSheetUtils;\r\n}());\n\n//##############################################################################\n// SpriteSheetBuilder.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n\t * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n\t * render them at run time as SpriteSheets for better performance.\n\t *\n\t * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n\t * without locking the UI.\n\t *\n\t * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n\t * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n\t * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n\t * @class SpriteSheetBuilder\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n\tfunction SpriteSheetBuilder(framerate) {\n\t\tthis.EventDispatcher_constructor();\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\t\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t **/\n\t\tthis.maxHeight = 2048;\n\t\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t **/\n\t\tthis.spriteSheet = null;\n\t\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t **/\n\t\tthis.scale = 1;\n\t\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t**/\n\t\tthis.padding = 1;\n\t\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t **/\n\t\tthis.timeSlice = 0.3;\n\t\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate || 0;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._frames = [];\n\t\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._animations = {};\n\t\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._data = null;\n\t\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._nextFrameIndex = 0;\n\t\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._index = 0;\n\t\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._timerID = null;\n\t\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._scale = 1;\n\t}\n\tvar p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);\n\n// constants:\n\tSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n\tSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n// events:\n\t/**\n\t * Dispatched when a build completes.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when an asynchronous build has progress.\n\t * @event progress\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Number} progress The current progress value (0-1).\n\t * @since 0.6.0\n\t */\n\n\n// public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t **/\n\tp.addFrame = function(source, sourceRect, scale, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\tif (!rect) { return null; }\n\t\tscale = scale||1;\n\t\treturn this._frames.push({source:source, sourceRect:rect, scale:scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t};\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t **/\n\tp.addAnimation = function(name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = {frames:frames, next:next, speed:speed};\n\t};\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t **/\n\tp.addMovieClip = function(source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tvar rects = source.frameBounds;\n\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\tif (!rect && !rects) { return; }\n\n\t\tvar i, l, baseFrameIndex = this._frames.length;\n\t\tvar duration = source.timeline.duration;\n\t\tfor (i=0; i<duration; i++) {\n\t\t\tvar r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i:i, f:setupFunction, d:setupData});\n\t\t}\n\t\tvar labels = source.timeline._labels;\n\t\tvar lbls = [];\n\t\tfor (var n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort(function(a,b){ return a.index-b.index; });\n\t\t\tfor (i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tvar label = lbls[i].label;\n\t\t\t\tvar start = baseFrameIndex+lbls[i].index;\n\t\t\t\tvar end = baseFrameIndex+((i == l-1) ? duration : lbls[i+1].index);\n\t\t\t\tvar frames = [];\n\t\t\t\tfor (var j=start; j<end; j++) { frames.push(j); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t **/\n\tp.build = function() {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t};\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t **/\n\tp.buildAsync = function(timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tvar _this = this;\n\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t};\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t **/\n\tp.stopAsync = function() {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t};\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"SpriteSheetBuilder cannot be cloned.\");\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[SpriteSheetBuilder]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t **/\n\tp._startBuild = function() {\n\t\tvar pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tvar dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tvar frames = this._frames.slice();\n\t\tframes.sort(function(a,b) { return (a.height<=b.height) ? -1 : 1; });\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tvar y=0, x=0;\n\t\tvar img = 0;\n\t\twhile (frames.length) {\n\t\t\tvar o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._setupMovieClipFrame = function(source, data) {\n\t\tvar ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t};\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._getSize = function(size,max) {\n\t\tvar pow = 4;\n\t\twhile (Math.pow(2,++pow) < size){}\n\t\treturn Math.min(max,Math.pow(2,pow));\n\t};\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._fillRow = function(frames, y, img, dataFrames, pad) {\n\t\tvar w = this.maxWidth;\n\t\tvar maxH = this.maxHeight;\n\t\ty += pad;\n\t\tvar h = maxH-y;\n\t\tvar x = pad;\n\t\tvar height = 0;\n\t\tfor (var i=frames.length-1; i>=0; i--) {\n\t\t\tvar frame = frames[i];\n\t\t\tvar sc = this._scale*frame.scale;\n\t\t\tvar rect = frame.sourceRect;\n\t\t\tvar source = frame.source;\n\t\t\tvar rx = Math.floor(sc*rect.x-pad);\n\t\t\tvar ry = Math.floor(sc*rect.y-pad);\n\t\t\tvar rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tvar rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new createjs.Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t};\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t **/\n\tp._endBuild = function() {\n\t\tthis.spriteSheet = new createjs.SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * @method _run\n\t * @protected\n\t **/\n\tp._run = function() {\n\t\tvar ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tvar t = (new Date()).getTime()+ts;\n\t\tvar complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tvar _this = this;\n\t\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-ts);\n\t\t}\n\t\tvar p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tvar evt = new createjs.Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t};\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t **/\n\tp._drawNext = function() {\n\t\tvar frame = this._frames[this._index];\n\t\tvar sc = frame.scale*this._scale;\n\t\tvar rect = frame.rect;\n\t\tvar sourceRect = frame.sourceRect;\n\t\tvar canvas = this._data.images[frame.img];\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t};\n\n\n\tcreatejs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// DOMElement.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\t *\n\t * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n\t * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n\t * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n\t * drawn in front of or behind the canvas).\n\t *\n\t * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n\t * the DOM Object be added to a div that also contains the canvas so that they share the same position\n\t * on the page.\n\t *\n\t * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n\t * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n\t * content.\n\t *\n\t * <h4>Mouse Interaction</h4>\n\t *\n\t * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n\t * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n\t * the htmlElement (note, this does not support EventDispatcher)\n\t *\n\t *      var domElement = new createjs.DOMElement(htmlElement);\n\t *      domElement.htmlElement.onclick = function() {\n\t *          console.log(\"clicked\");\n\t *      }\n\t *\n\t * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n\t * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n\t * stale information.\n\t *\n\t * @class DOMElement\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n\t */\n\tfunction DOMElement(htmlElement) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\tif (typeof(htmlElement)==\"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\t\t\n\t\tvar style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\tvar p = createjs.extend(DOMElement, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tp.isVisible = function() {\n\t\treturn this.htmlElement != null;\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tp.draw = function(ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n\tp.cache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n\tp.uncache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n\tp.updateCache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n\tp.hitTest = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n\tp.localToGlobal = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n\tp.globalToLocal = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n\tp.localToLocal = function() {};\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n\tp.clone = function() {\n\t\tthrow(\"DOMElement cannot be cloned.\")\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function() {\n\t\treturn \"[DOMElement (name=\"+  this.name +\")]\";\n\t};\n\n\t/**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event click\n\t */\n\n     /**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n \t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event dblClick\n\t */\n\n     /**\n      * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n \t  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t  * @event mousedown\n\t  */\n\n     /**\n      * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n      * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n      * @event mouseover\n\t  */\n\n     /**\n      * Not applicable to DOMElement.\n\t  * @event tick\n\t  */\n\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\tp._tick = function(evtObj) {\n\t\tvar stage = this.stage;\n\t\tif(stage && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\t\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n\tp._handleDrawEnd = function(evt) {\n\t\tvar o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tvar style = o.style;\n\t\t\n\t\tvar props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\t\t\n\t\tvar visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\t\t\n\t\tvar oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tvar n = 10000; // precision\n\t\t\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tvar str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new createjs.DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\t\t\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t};\n\n\n\tcreatejs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Filter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n\t * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n\t * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myInstance.filters = [\n\t *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n\t *          new createjs.BlurFilter(5, 5, 10)\n\t *      ];\n\t *      myInstance.cache(0,0, 100, 100);\n\t *\n\t * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n\t * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n\t * will cause an object to feather outwards, resulting in a margin around the shape.\n\t *\n\t * <h4>EaselJS Filters</h4>\n\t * EaselJS comes with a number of pre-built filters:\n\t * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n\t *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n\t *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n\t * </ul>\n\t *\n\t * @class Filter\n\t * @constructor\n\t **/\n\tfunction Filter() {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @property usesContext\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @property _multiPass\n\t\t * @type {Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @property VTX_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processed template shader code. It will be parsed before being fed in into the shader compiler.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @property FRAG_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\tvar p = Filter.prototype;\n\n// public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t **/\n\tp.getBounds = function(rect) {\n\t\treturn rect;\n\t};\n\n\t/**\n\t * Assign any unique uniforms or other setup functionality here.\n\t * @method shaderParamSetup\n\t * @virtual\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be used to perform the render.\n\t */\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {};\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n\tp.applyFilter = function(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tvar imageData = ctx.getImageData(x, y, width, height);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._applyFilter(imageData)) {\n\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Filter]\";\n\t};\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Filter();\n\t};\n\t\n// private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t **/\n\tp._applyFilter = function(imageData) { return true; };\n\n\n\tcreatejs.Filter = Filter;\n}());\n\n//##############################################################################\n// BitmapCache.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n\t * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n\t *\n\t * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n\t * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n\t * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}} there is little benefit to performing \n\t * a cache as it is already a single image. Caching is best done on containers containing multiple complex parts that \n\t * do not move often, so that rendering the image instead will improve overall rendering speed. A cached object will \n\t * not visually update until explicitly told to do so with a call to update, much like a Stage. If a cache is being \n\t * updated every frame it is likely not improving rendering performance. Cache are best used when updates will be sparse.\n\t *\n\t * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need, \n\t * and to physically enable some effects. The BitmapCache is also responsible for applying filters to objects and \n\t * reads each {{#crossLink \"Filter\"}}{{/crossLink}} due to this relationship. Real-time Filters are not recommended \n\t * performance wise when dealing with a Context2D canvas. For best performance and to still allow for some visual \n\t * effects use a compositeOperation when possible.\n\t * @class BitmapCache\n\t * @constructor\n\t **/\n\tfunction BitmapCache() {\n\n\t\t// public:\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @property width\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @property height\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t * @todo Should the width and height be protected?\n\t\t **/\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @property x\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @property y\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t **/\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up or rotated.\n\t\t * Objects with decreased scales can save on rendering performance.\n\t\t * @property scale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t **/\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The x offset used for drawing into the cache itself, accounts for both transforms applied.\n\t\t * @property offX\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The y offset used for drawing into the cache itself, accounts for both transforms applied.\n\t\t * @property offY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs.\n\t\t * This can be useful to see if a cache has been updated.\n\t\t * @property cacheID\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.cacheID = 0;\n\n\t\t// protected:\n\t\t/**\n\t\t * The relative offset of the filter's x position, used for drawing the cache onto its container.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * The relative offset of the filter's y position, used for drawing the cache onto its container.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t **/\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately width*scale; however, filters can complicate the actual value.\n\t\t * @property _drawWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately height*scale; however, filters can complicate the actual value.\n\t\t * @property _drawHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._drawHeight = 0;\n\t}\n\tvar p = BitmapCache.prototype;\n\n\t/**\n\t * Returns the bounds that surround all applied filters, relies on each filter to describe how it changes bounds.\n\t * @method getFilterBounds\n\t * @param {DisplayObject} target The object to check the filter bounds for.\n\t * @param {Rectangle} [output=null] Optional parameter, if provided then calculated bounds will be applied to that object.\n\t * @return {Rectangle} bounds object representing the bounds with filters.\n\t * @static\n\t **/\n\tBitmapCache.getFilterBounds = function(target, output) {\n\t\tif(!output){ output = new createjs.Rectangle(); }\n\t\tvar filters = target.filters;\n\t\tvar filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor(var i=0; i<filterCount; i++) {\n\t\t\tvar f = filters[i];\n\t\t\tif(!f || !f.getBounds){ continue; }\n\t\t\tvar test = f.getBounds();\n\t\t\tif(!test){ continue; }\n\t\t\tif(i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t};\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[BitmapCache]\";\n\t};\n\n\t/**\n\t * Actually create the correct cache surface and properties associated with it. Caching and it's benefits are discussed\n\t * by the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} function and this class description. Here are the detailed\n\t * specifics of how to use the options object.\n\t *\n\t * - If options.useGL is set to \"new\" a StageGL is created and contained on this for use when rendering the cache.\n\t * - If options.useGL is set to \"stage\" if the current stage is a StageGL it will be used. If not then it will default to \"new\".\n\t * - If options.useGL is a StageGL instance it will not create one but use the one provided.\n\t * - If options.useGL is undefined a Context 2D cache will be performed.\n\t *\n\t * This means you can use any combination of StageGL and 2D with either, neither, or both the stage and cache being\n\t * WebGL. Using \"new\" with a StageGL display list is highly unrecommended, but still an option. It should be avoided\n\t * due to negative performance reasons and the Image loading limitation noted in the class complications above.\n\t *\n\t * When \"options.useGL\" is set to the parent stage of the target and WebGL, performance is increased by using\n\t * \"RenderTextures\" instead of canvas elements. These are internal Textures on the graphics card stored in the GPU.\n\t * Because they are no longer canvases you cannot perform operations you could with a regular canvas. The benefit\n\t * is that this avoids the slowdown of copying the texture back and forth from the GPU to a Canvas element.\n\t * This means \"stage\" is the recommended option when available.\n\t *\n\t * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw, i.e. do not use a\n\t * WebGL context cache when caching a Shape, Text, etc.\n\t * <h4>WebGL cache with a 2D context</h4>\n\t *\n\t *     var stage = new createjs.Stage();\n\t *     var bmp = new createjs.Bitmap(src);\n\t *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"new\"});          // no StageGL to use, so make one\n\t *\n\t *     var shape = new createjs.Shape();\n\t *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n\t *\n\t * <h4>WebGL cache with a WebGL context</h4>\n\t *\n\t *     var stageGL = new createjs.StageGL();\n\t *     var bmp = new createjs.Bitmap(src);\n\t *     bmp.cache(0, 0, bmp.width, bmp.height, 1, {gl: \"stage\"});       // use our StageGL to cache\n\t *\n\t *     var shape = new createjs.Shape();\n\t *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n\t *\n\t * You may wish to create your own StageGL instance to control factors like clear color, transparency, AA, and\n\t * others. If you do, pass a new instance in instead of \"true\", the library will automatically set the\n\t * {{#crossLink \"StageGL/isCacheControlled\"}}{{/crossLink}} to true on your instance. This will trigger it to behave\n\t * correctly, and not assume your main context is WebGL.\n\t *\n\t * @public\n\t * @method BitmapCache.cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using myShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and\n\t * rotate cached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options=undefined] Specify additional parameters for the cache logic\n\t * @param {undefined|\"new\"|\"stage\"|StageGL} [options.useGL=undefined] Select whether to use context 2D, or WebGL rendering, and\n\t * whether to make a new stage instance or use an existing one. See above for extensive details on use.\n\t * @for BitmapCache\n\t */\n\t p.define = function(target, x, y, width, height, scale, options) {\n\t\tif(!target){ throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis.target = target;\n\n\t\tthis.width =\t\twidth >= 1 ? width : 1;\n\t\tthis.height =\t\theight >= 1 ? height : 1;\n\t\tthis.x =\t\t\tx || 0;\n\t\tthis.y =\t\t\ty || 0;\n\t\tthis.scale =\t\tscale || 1;\n\n\t\tthis.update();\n\t};\n\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n\t * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n\t * @method update\n\t * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n\t **/\n\tp.update = function(compositeOperation) {\n\t\tif(!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tvar filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tvar surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif(!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t};\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t * @method release\n\t **/\n\tp.release = function() {\n\t\tif (this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT){ this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA){ this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB){ this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas){ this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else {\n\t\t\tvar stage = this.target.stage;\n\t\t\tif (stage instanceof createjs.StageGL){\n\t\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t\t}\n\t\t}\n\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t};\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t **/\n\tp.getCacheDataURL = function() {\n\t\tvar cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t};\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t **/\n\tp.draw = function(ctx) {\n\t\tif(!this.target) { return false; }\n\t\tctx.drawImage(this.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\t\t\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t};\n\n// private methods:\n\t/**\n\t * Create or resize the invisible canvas/surface that is needed for the display object(s) to draw to,\n\t * and in turn be used in their stead when drawing. The surface is resized to the size defined\n\t * by the width and height, factoring in scaling and filters. Adjust them to adjust the output size.\n\t * @method _updateSurface\n\t * @protected\n\t **/\n\tp._updateSurface = function() {\n\t\tif (!this._options || !this._options.useGL) {\n\t\t\tvar surface = this.target.cacheCanvas;\n\n\t\t\t// create it if it's missing\n\t\t\tif(!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage && this.target.stage.isWebGL)){\n\t\t\t\t\tvar error = \"Cannot use 'stage' for cache because the object's parent stage is \";\n\t\t\t\t\terror += this.target.stage ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\";\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\n\t\t\t} else if(this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new createjs.StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;\t// use this flag to control stage sizing and final output\n\n\t\t\t} else if(this._options.useGL instanceof createjs.StageGL) {\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this._options.useGL;\n\t\t\t\tthis._webGLCache.isCacheControlled = true;\t// use this flag to control stage sizing and final output\n\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tvar surface = this.target.cacheCanvas;\n\t\tvar stageGL = this._webGLCache;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tif (!stageGL.isCacheControlled) {\n\t\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @method _drawToCache\n\t * @protected\n\t **/\n\tp._drawToCache = function(compositeOperation) {\n\t\tvar surface = this.target.cacheCanvas;\n\t\tvar target = this.target;\n\t\tvar webGL = this._webGLCache;\n\n\t\tif (webGL){\n\t\t\t//TODO: auto split blur into an x/y pass\n\t\t\twebGL.cacheDraw(target, target.filters, this);\n\n\t\t\t// we may of swapped around which element the surface is, so we re-fetch it\n\t\t\tsurface = this.target.cacheCanvas;\n\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t} else {\n\t\t\tvar ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(ctx);\n\t\t\t}\n\t\t}\n\t\tsurface._invalid = true;\n\t};\n\n\t/**\n\t * Work through every filter and apply its individual visual transformation.\n\t * @method _applyFilters\n\t * @protected\n\t **/\n\tp._applyFilters = function(ctx) {\n\t\tvar filters = this.target.filters;\n\n\t\tvar w = this._drawWidth;\n\t\tvar h = this._drawHeight;\n\n\t\tvar data;\n\n\t\tvar i = 0, filter = filters[i];\n\t\tdo { // this is safe because we wouldn't be in apply filters without a filter count of at least 1\n\t\t\tif(filter.usesContext){\n\t\t\t\tif(data) {\n\t\t\t\t\tctx.putImageData(data, 0,0);\n\t\t\t\t\tdata = null;\n\t\t\t\t}\n\t\t\t\tfilter.applyFilter(ctx, 0,0, w,h);\n\t\t\t} else {\n\t\t\t\tif(!data) {\n\t\t\t\t\tdata = ctx.getImageData(0,0, w,h);\n\t\t\t\t}\n\t\t\t\tfilter._applyFilter(data);\n\t\t\t}\n\n\t\t\t// work through the multipass if it's there, otherwise move on\n\t\t\tfilter = filter._multiPass !== null ? filter._multiPass : filters[++i];\n\t\t} while (filter);\n\n\t\t//done\n\t\tif(data) {\n\t\t\tctx.putImageData(data, 0,0);\n\t\t}\n\t};\n\n\tcreatejs.BitmapCache = BitmapCache;\n}());\n\n//##############################################################################\n// BlurFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies a box blur to DisplayObjects in context 2D and a Gaussian blur in webgl. Note that this filter is fairly\n\t * intensive, particularly if the quality is set higher than 1.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n\t * method to account for the spread that the blur causes.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n\t *      shape.filters = [blurFilter];\n\t *      var bounds = blurFilter.getBounds();\n\t *\n\t *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class BlurFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t **/\n\tfunction BlurFilter( blurX, blurY, quality) {\n\t\tthis.Filter_constructor();\n\n\t\t// public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n\t\tthis._blurX = blurX;\n\t\tthis._blurXTable = [];\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n\t\tthis._blurY = blurY;\n\t\tthis._blurYTable = [];\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t **/\n\t\tthis._quality;\n\t\tthis._lastQuality = null;\n\n\t\t/**\n\t\t * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n\t\t */\n\t\tthis.FRAG_SHADER_TEMPLATE = (\n\t\t\t\"uniform float xWeight[{{blurX}}];\" +\n\t\t\t\"uniform float yWeight[{{blurY}}];\" +\n\t\t\t\"uniform vec2 textureOffset;\" +\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = vec4(0.0);\" +\n\n\t\t\t\t\"float xAdj = ({{blurX}}.0-1.0)/2.0;\" +\n\t\t\t\t\"float yAdj = ({{blurY}}.0-1.0)/2.0;\" +\n\t\t\t\t\"vec2 sampleOffset;\" +\n\n\t\t\t\t\"for(int i=0; i<{{blurX}}; i++) {\" +\n\t\t\t\t\t\"for(int j=0; j<{{blurY}}; j++) {\" +\n\t\t\t\t\t\t\"sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\" +\n\t\t\t\t\t\t\"color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\" +\n\t\t\t\t\t\"}\" +\n\t\t\t\t\"}\" +\n\n\t\t\t\t\"gl_FragColor = color.rgba;\" +\n\t\t\t\"}\"\n\t\t);\n\n\t\t// update the filter using the setters\n\t\tif(isNaN(quality) || quality < 1){ quality = 1; }\n\t\tthis.setQuality(quality|0);\n\t}\n\tvar p = createjs.extend(BlurFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\tp.getBlurX = function() { return this._blurX; };\n\tp.getBlurY = function() { return this._blurY; };\n\tp.setBlurX = function(value) {\n\t\tif(isNaN(value) || value < 0){ value = 0; }\n\t\tthis._blurX = value;\n\t};\n\tp.setBlurY = function(value) {\n\t\tif(isNaN(value) || value < 0){ value = 0; }\n\t\tthis._blurY = value;\n\t};\n\tp.getQuality = function() { return this._quality; };\n\tp.setQuality = function(value) {\n\t\tif(isNaN(value) || value < 0){ value = 0; }\n\t\tthis._quality = value | 0;\n\t};\n\tp._getShader = function() {\n\t\tvar xChange = this._lastBlurX !== this._blurX;\n\t\tvar yChange = this._lastBlurY !== this._blurY;\n\t\tvar qChange = this._lastQuality !== this._quality;\n\t\tif(xChange || yChange || qChange) {\n\t\t\tif(xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\tif(yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\tthis._updateShader();\n\t\t\tthis._lastBlurX = this._blurX;\n\t\t\tthis._lastBlurY = this._blurY;\n\t\t\tthis._lastQuality = this._quality;\n\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t};\n\tp._setShader = function() { this._compiledShader; };\n\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tblurX: { get: p.getBlurX, set: p.setBlurX },\n\t\t\tblurY: { get: p.getBlurY, set: p.setBlurY },\n\t\t\tquality: { get: p.getQuality, set: p.setQuality },\n\t\t\t_builtShader: { get: p._getShader, set: p._setShader}\n\t\t});\n\t} catch (e) { console.log(e); }\n\n\t/**\n\t * Internal lookup function to create gaussian distribution.\n\t * @method _getTable\n\t * @param {Number} spread How many steps in the curve.\n\t * @return {Array<Number>} An array with Math.ceil(spread*2) entries with appropriately distributed weights.\n\t */\n\tp._getTable = function(spread) {\n\t\tvar EDGE = 4.2;\n\t\tif(spread<=1) { return [1]; }\n\n\t\tvar result = [];\n\t\tvar count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tvar adjust = (count/2)|0;\n\t\tfor(var i = -adjust; i<=adjust; i++) {\n\t\t\tvar x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tvar factor = result.reduce(function(a, b) { return a + b; });\n\t\treturn result.map(function(currentValue, index, array) { return currentValue/factor; });\n\t};\n\n\t/**\n\t * Internal update function to create shader properties.\n\t * @method _updateShader\n\t */\n\tp._updateShader = function() {\n\t\tif(this._blurX === undefined || this._blurY === undefined){ return; }\n\t\tvar result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/\\{\\{blurX\\}\\}/g, (this._blurXTable.length).toFixed(0));\n\t\tresult = result.replace(/\\{\\{blurY\\}\\}/g, (this._blurYTable.length).toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t};\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t};\n\n// constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n// public methods:\n\t/** docced in super class **/\n\tp.getBounds = function (rect) {\n\t\tvar x = this.blurX|0, y = this.blurY| 0;\n\t\tif(x <= 0 && y <= 0) { return rect; }\n\t\tvar q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new createjs.Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[BlurFilter]\";\n\t};\n\n\n// private methods:\n\n\t/** docced in super class **/\n\tp._applyFilter = function (imageData) {\n\t\tvar radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tvar radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX == 0 && radiusY == 0) return false;\n\n\t\tvar iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tvar px = imageData.data;\n\t\tvar x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tvar divx = (radiusX + radiusX + 1) | 0;\n\t\tvar divy = (radiusY + radiusY + 1) | 0;\n\t\tvar w = imageData.width | 0;\n\t\tvar h = imageData.height | 0;\n\n\t\tvar w1 = (w - 1) | 0;\n\t\tvar h1 = (h - 1) | 0;\n\t\tvar rxp1 = (radiusX + 1) | 0;\n\t\tvar ryp1 = (radiusY + 1) | 0;\n\n\t\tvar ssx = {r:0,b:0,g:0,a:0};\n\t\tvar sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tvar ssy = {r:0,b:0,g:0,a:0};\n\t\tvar sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tvar si = null;\n\n\n\t\tvar mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tvar stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tvar mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tvar sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tvar ms = mtx;\n\t\t\tvar ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t};\n\n\tcreatejs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMapFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\t\n\t\n// constructor:\n\t/**\n\t * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n\t * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n\t *\n\t * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n\t * better performance.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n\t *\n\t *       var box = new createjs.Shape();\n\t *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n\t *       box.graphics.drawRect(0, 0, 100, 100);\n\t *       box.cache(0, 0, 100, 100);\n\t *\n\t *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *       bmp.filters = [\n\t *           new createjs.AlphaMapFilter(box.cacheCanvas)\n\t *       ];\n\t *       bmp.cache(0, 0, 100, 100);\n\t *       stage.addChild(bmp);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMapFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t **/\n\tfunction AlphaMapFilter(alphaMap) {\n\t\tthis.Filter_constructor();\n\t\n\t// public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis.alphaMap = alphaMap;\n\t\t\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis._alphaMap = null;\n\t\t\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t **/\n\t\tthis._mapData = null;\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform sampler2D uAlphaSampler;\"+\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\t\t\t\t\"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\t\"gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\" +\n\t\t\t\"}\"\n\t\t);\n\t}\n\tvar p = createjs.extend(AlphaMapFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t};\n\n// public methods:\n\t/** docced in super class **/\n\tp.clone = function () {\n\t\tvar o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function () {\n\t\treturn \"[AlphaMapFilter]\";\n\t};\n\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\t\t\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tvar data = imageData.data;\n\t\tvar map = this._mapData;\n\t\tfor(var i=0, l=data.length; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\t\t\n\t\treturn true;\n\t};\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t **/\n\tp._prepAlphaMap = function () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap == this._alphaMap && this._mapData) { return true; }\n\n\t\tthis._mapData = null;\n\t\tvar map = this._alphaMap = this.alphaMap;\n\t\tvar canvas = map;\n\t\tvar ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tvar imgData = ctx.getImageData(0, 0, map.width, map.height);\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis._mapData = imgData.data;\n\t\treturn true;\n\t};\n\n\n\tcreatejs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMaskFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n\t * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n\t * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n\t * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\t *\n\t * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n\t *\n\t *      var box = new createjs.Shape();\n\t *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n\t *      box.graphics.drawRect(0, 0, 100, 100);\n\t *      box.cache(0, 0, 100, 100);\n\t *\n\t *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *      bmp.filters = [\n\t *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n\t *      ];\n\t *      bmp.cache(0, 0, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMaskFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t **/\n\tfunction AlphaMaskFilter(mask) {\n\t\tthis.Filter_constructor();\n\t\n\t// public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis.mask = mask;\n\n\t\t/** docced in super class **/\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform sampler2D uAlphaSampler;\"+\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\t\t\t\t\"vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\" +\n\n\t\t\t\t\"gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\" +\n\t\t\t\"}\"\n\t\t);\n\t}\n\tvar p = createjs.extend(AlphaMaskFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t};\n\n// public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n\tp.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function () {\n\t\treturn \"[AlphaMaskFilter]\";\n\t};\n\n\n\tcreatejs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies a color transform to DisplayObjects.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n\t * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      shape.filters = [\n\t *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n\t *      ];\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorFilter\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @constructor\n\t * @extends Filter\n\t **/\n\tfunction ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n\t\tthis.Filter_constructor();\n\n\t// public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n\t\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n\t\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n\t\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n\t\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.redOffset = redOffset || 0;\n\t\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.greenOffset = greenOffset || 0;\n\t\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.blueOffset = blueOffset || 0;\n\t\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.alphaOffset = alphaOffset || 0;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform vec4 uColorMultiplier;\" +\n\t\t\t\"uniform vec4 uColorOffset;\" +\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\n\t\t\t\t\"gl_FragColor = (color * uColorMultiplier) + uColorOffset;\" +\n\t\t\t\"}\"\n\t\t);\n\n\t}\n\tvar p = createjs.extend(ColorFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[ColorFilter]\";\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t};\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function(imageData) {\n\t\tvar data = imageData.data;\n\t\tvar l = data.length;\n\t\tfor (var i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t};\n\n\n\tcreatejs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorMatrix.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n\t * Most methods return the instance to facilitate chained calls.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n\t * for an example of how to use ColorMatrix to change a DisplayObject's color.\n\t * @class ColorMatrix\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @constructor\n\t **/\n\tfunction ColorMatrix(brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\tvar p = ColorMatrix.prototype;\n\n// constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.DELTA_INDEX = [\n\t\t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n\t\t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n\t\t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n\t\t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n\t\t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n\t\t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n\t\t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n\t\t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n\t\t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n\t\t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n\t\t10.0\n\t];\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.IDENTITY_MATRIX = [\n\t\t1,0,0,0,0,\n\t\t0,1,0,0,0,\n\t\t0,0,1,0,0,\n\t\t0,0,0,1,0,\n\t\t0,0,0,0,1\n\t];\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length;\n\n\n// public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tp.setColor = function(brightness,contrast,saturation,hue) {\n\t\treturn this.reset().adjustColor(brightness,contrast,saturation,hue);\n\t};\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tp.reset = function() {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t};\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustColor = function(brightness,contrast,saturation,hue) {\n\t\tthis.adjustHue(hue);\n\t\tthis.adjustContrast(contrast);\n\t\tthis.adjustBrightness(brightness);\n\t\treturn this.adjustSaturation(saturation);\n\t};\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustBrightness = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustContrast = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,100);\n\t\tvar x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x == 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustSaturation = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,100);\n\t\tvar x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tvar lumR = 0.3086;\n\t\tvar lumG = 0.6094;\n\t\tvar lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustHue = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,180)/180*Math.PI;\n\t\tvar cosVal = Math.cos(value);\n\t\tvar sinVal = Math.sin(value);\n\t\tvar lumR = 0.213;\n\t\tvar lumG = 0.715;\n\t\tvar lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.concat = function(matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t **/\n\tp.clone = function() {\n\t\treturn (new ColorMatrix()).copy(this);\n\t};\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t **/\n\tp.toArray = function() {\n\t\tvar arr = [];\n\t\tfor (var i= 0, l=ColorMatrix.LENGTH; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t};\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.copy = function(matrix) {\n\t\tvar l = ColorMatrix.LENGTH;\n\t\tfor (var i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[ColorMatrix]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n\tp._multiplyMatrix = function(matrix) {\n\t\tvar i, j, k, col = [];\n\n\t\tfor (i=0;i<5;i++) {\n\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\tvar val=0;\n\t\t\t\tfor (k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t **/\n\tp._cleanValue = function(value, limit) {\n\t\treturn Math.min(limit,Math.max(-limit,value));\n\t};\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n\tp._fixMatrix = function(matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0,matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length,ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0,ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t};\n\n\n\tcreatejs.ColorMatrix = ColorMatrix;\n}());\n\n//##############################################################################\n// ColorMatrixFilter.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n\t * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n\t * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n\t *      shape.filters = [\n\t *          new createjs.ColorMatrixFilter(matrix)\n\t *      ];\n\t *\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorMatrixFilter\n\t * @constructor\n\t * @extends Filter\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t **/\n\tfunction ColorMatrixFilter(matrix) {\n\t\tthis.Filter_constructor();\n\n\t// public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t **/\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = (\n\t\t\t\"uniform mat4 uColorMatrix;\" +\n\t\t\t\"uniform vec4 uColorMatrixOffset;\" +\n\n\t\t\t\"void main(void) {\" +\n\t\t\t\t\"vec4 color = texture2D(uSampler, vRenderCoord);\" +\n\n\t\t\t\t\"mat4 m = uColorMatrix;\" +\n\t\t\t\t\"vec4 newColor = vec4(0,0,0,0);\" +\n\t\t\t\t\"newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\" +\n\t\t\t\t\"newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\" +\n\t\t\t\t\"newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\" +\n\t\t\t\t\"newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\" +\n\n\t\t\t\t\"gl_FragColor = newColor + uColorMatrixOffset;\" +\n\t\t\t\"}\"\n\t\t);\n\t}\n\tvar p = createjs.extend(ColorMatrixFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t/** docced in super class **/\n\tp.shaderParamSetup = function(gl, stage, shaderProgram) {\n\t\tvar mat = this.matrix;\n\t\tvar colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t};\n\n// public methods:\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[ColorMatrixFilter]\";\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t};\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function(imageData) { \n\t\tvar data = imageData.data;\n\t\tvar l = data.length;\n\t\tvar r,g,b,a;\n\t\tvar mtx = this.matrix;\n\t\tvar m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tvar m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tvar m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tvar m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (var i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\t\treturn true;\n\t};\n\n\tcreatejs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n}());\n\n//##############################################################################\n// Touch.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n **/\n\tfunction Touch() {\n\t\tthrow \"Touch cannot be instantiated\";\n\t}\n\n\n// public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t **/\n\tTouch.isSupported = function() {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t};\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t **/\n\tTouch.enable = function(stage, singleTouch, allowDefault) {\n\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\treturn true;\n\t};\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t **/\n\tTouch.disable = function(stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\t\t\n\t\tdelete stage.__touch;\n\t};\n\n\n// Private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IOS_enable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tvar f = stage.__touch.f = function(e) { Touch._IOS_handleEvent(stage,e); };\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t};\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IOS_disable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tvar f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t};\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t **/\n\tTouch._IOS_handleEvent = function(stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tvar touches = e.changedTouches;\n\t\tvar type = e.type;\n\t\tfor (var i= 0,l=touches.length; i<l; i++) {\n\t\t\tvar touch = touches[i];\n\t\t\tvar id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type == \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type == \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type == \"touchend\" || type == \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IE_enable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tvar f = stage.__touch.f = function(e) { Touch._IE_handleEvent(stage,e); };\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t};\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IE_disable = function(stage) {\n\t\tvar f = stage.__touch.f;\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t **/\n\tTouch._IE_handleEvent = function(stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tvar type = e.type;\n\t\tvar id = e.pointerId;\n\t\tvar ids = stage.__touch.activeIDs;\n\n\t\tif (type == \"MSPointerDown\" || type == \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type == \"MSPointerMove\" || type == \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\"\n\t\t\t\t\t|| type == \"pointerup\" || type == \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tTouch._handleStart = function(stage, id, e, x, y) {\n\t\tvar props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tvar ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t};\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tTouch._handleMove = function(stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t};\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t **/\n\tTouch._handleEnd = function(stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tvar props = stage.__touch;\n\t\tvar ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t};\n\n\n\tcreatejs.Touch = Touch;\n}());\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of\n\t * the library.\n\t * @class EaselJS\n\t **/\n\tvar s = createjs.EaselJS = createjs.EaselJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"1.0.0\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Thu, 14 Sep 2017 19:47:53 GMT\"; // injected by build process\n\n})();\n"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,QAAQ,CAACyB,SAAS,GAAG,UAASC,cAAc,EAAEC,IAAI,EAAE;EACnD,YAAY;;EACZ,OAAO,YAAW;IACjB,IAAIC,GAAG,GAAG,iCAAiC,GAACD,IAAI,GAAC,uBAAuB;IACxEE,OAAO,KAAKA,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC,GAAGC,OAAO,CAACE,GAAG,CAACH,GAAG,CAAC,CAAC;IAChE,OAAOF,cAAc,IAAIA,cAAc,CAACM,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC/D,CAAC;AACF,CAAC;;AAED;AACA;AACA;;AAEAlC,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAE,CAAC,CAAC;AAEpC,aAAW;EACX,YAAY;;EAEb;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASkC,KAAKA,CAACC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAE;IAG1C;IACC;AACF;AACA;AACA;AACA;IACE,IAAI,CAACF,IAAI,GAAGA,IAAI;;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACG,MAAM,GAAG,IAAI;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,IAAI;;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,CAAC;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACJ,OAAO,GAAG,CAAC,CAACA,OAAO;;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,CAAC,CAACA,UAAU;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACI,SAAS,GAAI,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;;IAEvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASyF,MAAMA,CAAA,EAAG;IACjB,MAAM,gCAAgC;EACvC;;EAGD;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCA,MAAM,CAACC,WAAW,GAAG,SAAS;;EAE9B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCD,MAAM,CAACE,GAAG,GAAG,KAAK;;EAElB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCF,MAAM,CAACG,OAAO,GAAG,SAAS;;EAG3B;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGA;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCH,MAAM,CAACI,UAAU,GAAG,IAAI;;EAExB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCJ,MAAM,CAACK,QAAQ,GAAG,CAAC;;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCL,MAAM,CAACM,MAAM,GAAG,KAAK;;EAGtB;EACC;EACAN,MAAM,CAAC1B,mBAAmB,GAAG,IAAI;EACjC0B,MAAM,CAACxB,uBAAuB,GAAG,IAAI;EACrCwB,MAAM,CAACtB,aAAa,GAAG,IAAI;EAC3BsB,MAAM,CAACvB,gBAAgB,GAAG,IAAI;EAC9BuB,MAAM,CAAC/B,UAAU,GAAG,IAAI;EACxB1D,QAAQ,CAACyD,eAAe,CAACG,UAAU,CAAC6B,MAAM,CAAC,CAAC,CAAC;EAC7CA,MAAM,CAACO,iBAAiB,GAAGP,MAAM,CAAC5B,gBAAgB;EAClD4B,MAAM,CAAC5B,gBAAgB,GAAG,YAAW;IACpC,CAAC4B,MAAM,CAACQ,OAAO,IAAER,MAAM,CAACS,IAAI,CAAC,CAAC;IAC9B,OAAOT,MAAM,CAACO,iBAAiB,CAAChE,KAAK,CAACyD,MAAM,EAAExD,SAAS,CAAC;EACzD,CAAC;;EAGF;EACC;AACD;AACA;AACA;AACA;AACA;EACCwD,MAAM,CAACQ,OAAO,GAAG,KAAK;;EAEtB;AACD;AACA;AACA;AACA;AACA;EACCR,MAAM,CAACU,UAAU,GAAG,CAAC;;EAErB;AACD;AACA;AACA;AACA;AACA;EACCV,MAAM,CAACW,WAAW,GAAC,CAAC;;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;EACCX,MAAM,CAACY,MAAM,GAAG,CAAC;;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;EACCZ,MAAM,CAACa,YAAY,GAAG,CAAC;;EAEvB;AACD;AACA;AACA;AACA;AACA;EACCb,MAAM,CAACc,SAAS,GAAG,EAAE;;EAErB;AACD;AACA;AACA;AACA;AACA;EACCd,MAAM,CAACe,SAAS,GAAG,CAAC;;EAEpB;AACD;AACA;AACA;AACA;AACA;EACCf,MAAM,CAACgB,MAAM,GAAG,IAAI;;EAEpB;AACD;AACA;AACA;AACA;AACA;EACChB,MAAM,CAACiB,UAAU,GAAG,IAAI;;EAExB;AACD;AACA;AACA;AACA;AACA;AACA;EACCjB,MAAM,CAACkB,QAAQ,GAAG,IAAI;;EAEtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACClB,MAAM,CAACmB,IAAI,GAAG,IAAI;;EAGnB;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACCnB,MAAM,CAACoB,YAAY,GAAG,UAASC,QAAQ,EAAE;IACxCrB,MAAM,CAACc,SAAS,GAAGO,QAAQ;IAC3B,IAAI,CAACrB,MAAM,CAACQ,OAAO,EAAE;MAAE;IAAQ;IAC/BR,MAAM,CAACsB,UAAU,CAAC,CAAC;EACpB,CAAC;EACD;EACAtB,MAAM,CAACuB,WAAW,GAAGhH,QAAQ,CAACyB,SAAS,CAACgE,MAAM,CAACoB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Q,QAAQ,GAAG,YAAW;IACvB,OAAO,YAAY;EACpB,CAAC;;EAGF;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCR,CAAC,CAAC2b,EAAE,GAAG3b,CAAC,CAAC+V,MAAM;;EAEf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC/V,CAAC,CAAC4b,EAAE,GAAG5b,CAAC,CAACiW,MAAM;;EAEf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCjW,CAAC,CAAC6b,EAAE,GAAG7b,CAAC,CAACmW,KAAK;;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCnW,CAAC,CAAC8b,EAAE,GAAG9b,CAAC,CAAC+W,aAAa;;EAEtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC/W,CAAC,CAAC+b,EAAE,GAAG/b,CAAC,CAAC2W,gBAAgB;;EAEzB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC3W,CAAC,CAAC+J,CAAC,GAAG/J,CAAC,CAACsW,GAAG;;EAEX;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCtW,CAAC,CAAC2L,CAAC,GAAG3L,CAAC,CAAC6N,IAAI;;EAEZ;AACD;AACA;AACA;AACA;AACA;AACA;EACC7N,CAAC,CAACgc,EAAE,GAAGhc,CAAC,CAACuX,SAAS;;EAElB;AACD;AACA;AACA;AACA;AACA;AACA;EACCvX,CAAC,CAACiK,CAAC,GAAGjK,CAAC,CAACyU,KAAK;;EAEb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzU,CAAC,CAAC4E,CAAC,GAAG5E,CAAC,CAACyX,SAAS;;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzX,CAAC,CAACic,EAAE,GAAGjc,CAAC,CAAC4X,uBAAuB;;EAEhC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5X,CAAC,CAACkc,EAAE,GAAGlc,CAAC,CAACkY,uBAAuB;;EAEhC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACClY,CAAC,CAACmc,EAAE,GAAGnc,CAAC,CAACsY,eAAe;;EAExB;AACD;AACA;AACA;AACA;AACA;AACA;EACCtY,CAAC,CAACoc,EAAE,GAAGpc,CAAC,CAACyY,OAAO;;EAEhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzY,CAAC,CAACqc,EAAE,GAAGrc,CAAC,CAAC0Y,cAAc;;EAEvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC1Y,CAAC,CAACsc,EAAE,GAAGtc,CAAC,CAACiZ,aAAa;;EAEtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCjZ,CAAC,CAACuc,CAAC,GAAGvc,CAAC,CAACqZ,WAAW;;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCrZ,CAAC,CAACwc,EAAE,GAAGxc,CAAC,CAACwZ,yBAAyB;;EAElC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCxZ,CAAC,CAACyc,EAAE,GAAGzc,CAAC,CAACyZ,yBAAyB;;EAElC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzZ,CAAC,CAAC0c,EAAE,GAAG1c,CAAC,CAAC0Z,iBAAiB;;EAE1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC1Z,CAAC,CAAC2c,EAAE,GAAG3c,CAAC,CAAC2Z,SAAS;;EAElB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC3Z,CAAC,CAAC4c,EAAE,GAAG5c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ACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACgT,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,EAAE,GAAGljB,QAAQ,CAACsB,GAAG,CAACE,GAAG,CAAC,CAAC;;IAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC2hB,YAAY,GAAG,IAAI;;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACzhB,IAAI,GAAG,IAAI;;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACyD,MAAM,GAAG,IAAI;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACqJ,IAAI,GAAG,CAAC;;IAEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,IAAI,GAAG,CAAC;;IAEb;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACJ,QAAQ,GAAG,CAAC;;IAEjB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACF,MAAM,GAAG,CAAC;;IAEf;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,MAAM,GAAG,CAAC;;IAEf;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACE,KAAK,GAAG,CAAC;;IAEd;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,KAAK,GAAG,CAAC;;IAEd;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACyB,MAAM,GAAG,IAAI;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACF,OAAO,GAAG,IAAI;;IAEnB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACxD,CAAC,GAAG,CAAC;;IAEV;AACF;AACA;AACA;AACA;IACE,IAAI,CAACE,CAAC,GAAG,CAAC;;IAEV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC4W,eAAe,GAAG,IAAI;;IAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACnT,kBAAkB,GAAG,IAAI;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACoT,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,IAAI,GAAG,IAAI;;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC9R,OAAO,GAAG,IAAI;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACU,MAAM,GAAG,IAAI;;IAGnB;IACC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACqR,MAAM,GAAG,IAAIzjB,QAAQ,CAAC8P,YAAY,CAAC,CAAC;;IAEzC;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC4T,UAAU,GAAG,IAAI1jB,QAAQ,CAACqQ,SAAS,CAAC,CAAC;;IAE1C;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACsT,OAAO,GAAG,IAAI;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,iBAAiB,GAAGb,aAAa,CAACc,aAAa;EACrD;EACA,IAAI7gB,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAAC8iB,aAAa,EAAE/iB,QAAQ,CAACyD,eAAe,CAAC;;EAEjE;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACCsf,aAAa,CAACe,aAAa,GAAG,CAAC,OAAO,EAAC,UAAU,EAAC,WAAW,EAAC,UAAU,EAAC,WAAW,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,CAAC;;EAEhI;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCf,aAAa,CAACgB,yBAAyB,GAAG,KAAK;;EAE/C;AACD;AACA;AACA;AACA;AACA;AACA;EACChB,aAAa,CAACiB,mBAAmB,GAAG,KAAK,CAAC,CAAC;;EAE3C;AACD;AACA;AACA;AACA;AACA;AACA;EACCjB,aAAa,CAACc,aAAa,GAAG,CAAC;;EAE/B;AACD;AACA;AACA;AACA;AACA;AACA;EACCd,aAAa,CAACkB,eAAe,GAAG,CAAC;;EAEjC;AACD;AACA;AACA;AACA;AACA;AACA;EACClB,aAAa,CAACmB,eAAe,GAAG,CAAC;;EAEjC;AACD;AACA;AACA;AACA;AACA;EACC;AACD;AACA;AACA;AACA;AACA;EACC,IAAIpZ,MAAM,GAAG9K,QAAQ,CAAC+K,YAAY,GAAC/K,QAAQ,CAAC+K,YAAY,CAAC,CAAC,GAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7F,IAAIH,MAAM,CAACU,UAAU,EAAE;IACtBuX,aAAa,CAACoB,cAAc,GAAGrZ,MAAM;IACrCiY,aAAa,CAACqB,eAAe,GAAGtZ,MAAM,CAACU,UAAU,CAAC,IAAI,CAAC;IACvDV,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACM,MAAM,GAAG,CAAC;EACjC;;EAED;EACC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AA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AE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC/V,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,OAAOya,GAAG;EACX,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCljB,CAAC,CAACM,GAAG,GAAG,UAASC,KAAK,EAAE;IACvB,KAAK,IAAIzC,CAAC,IAAIyC,KAAK,EAAE;MAAE,IAAI,CAACzC,CAAC,CAAC,GAAGyC,KAAK,CAACzC,CAAC,CAAC;IAAE;IAC3C,OAAO,IAAI;EACZ,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCkC,CAAC,CAACojB,SAAS,GAAG,YAAW;IACxB,IAAI,IAAI,CAACzC,OAAO,EAAE;MAAE,OAAO,IAAI,CAACD,UAAU,CAAC7T,IAAI,CAAC,IAAI,CAAC8T,OAAO,CAAC;IAAE;IAC/D,IAAIX,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIA,WAAW,EAAE;MAChB,IAAI9T,KAAK,GAAG,IAAI,CAACmX,WAAW;MAC5B,OAAO,IAAI,CAAC3C,UAAU,CAACrW,SAAS,CAAC,IAAI,CAACiZ,aAAa,EAAE,IAAI,CAACC,aAAa,EAAEvD,WAAW,CAAC9X,KAAK,GAACgE,KAAK,EAAE8T,WAAW,CAAC5X,MAAM,GAAC8D,KAAK,CAAC;IAC5H;IACA,OAAO,IAAI;EACZ,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACClM,CAAC,CAACwjB,oBAAoB,GAAG,YAAW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AI,GAAGwW,MAAM,CAAChkB,KAAK,CAAC,CAAC;MAAE;IAC/B;IACA,OAAOwN,IAAI;EACZ,CAAC;EAGD7Q,QAAQ,CAACgoB,SAAS,GAAGhoB,QAAQ,CAACO,OAAO,CAACynB,SAAS,EAAE,eAAe,CAAC;AAClE,CAAC,EAAC,CAAC;;AAEH;AACA;AACA;;AAEAjoB,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAE,CAAC,CAAC;AAEpC,aAAW;EACX,YAAY;;EAGb;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASirB,KAAKA,CAACngB,MAAM,EAAE;IACtB,IAAI,CAACogB,qBAAqB,CAAC,CAAC;;IAG7B;IACC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,SAAS,GAAG,IAAI;;IAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACrgB,MAAM,GAAI,OAAOA,MAAM,IAAI,QAAQ,GAAIE,QAAQ,CAACogB,cAAc,CAACtgB,MAAM,CAAC,GAAGA,MAAM;;IAEpF;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACugB,MAAM,GAAG,CAAC;;IAEf;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,MAAM,GAAG,CAAC;;IAEf;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACzO,QAAQ,GAAG,IAAI;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC0O,kBAAkB,GAAG,KAAK;;IAE/B;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,KAAK;;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG,IAAI;;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,gBAAgB,GAAG,KAAK;;IAG7B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;AACF;AACA;AACA;AACA;AACA;;IAGC;IACC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;;IAEtB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,iBAAiB,GAAG,IAAI;;IAE7B;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,oBAAoB,GAAG,IAAI;;IAEhC;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,IAAI;;IAGvB;IACC,IAAI,CAACC,eAAe,CAAC,IAAI,CAAC;EAC3B;EACA,IAAIlpB,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAACgrB,KAAK,EAAEjrB,QAAQ,CAACgoB,SAAS,CAAC;;EAEnD;EACC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;;EAGA;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACChlB,CAAC,CAACmpB,cAAc,GAAG,YAAW;IAC7B,OAAO,IAAI,CAACH,UAAU;EACvB,CAAC;EACDhpB,CAAC,CAACopB,cAAc,GAAG,U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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS8wB,OAAOA,CAAChmB,MAAM,EAAEsa,OAAO,EAAE;IACjC,IAAI,CAAC2L,iBAAiB,CAACjmB,MAAM,CAAC;IAE9B,IAAIsa,OAAO,KAAKpP,SAAS,EAAE;MAC1B,IAAI,OAAOoP,OAAO,KAAK,QAAQ,EAAC;QAAE,MAAM,wBAAwB;MAAG;MACnE,IAAI4L,WAAW,GAAG5L,OAAO,CAAC4L,WAAW;MACrC,IAAIC,WAAW,GAAG7L,OAAO,CAAC6L,WAAW;MACrC,IAAIC,SAAS,GAAG9L,OAAO,CAAC8L,SAAS;MACjC,IAAIC,cAAc,GAAG/L,OAAO,CAAC+L,cAAc;MAC3C,IAAIC,SAAS,GAAGhM,OAAO,CAACgM,SAAS;IAClC;;IAEF;IACE;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,KAAK;;IAEzB;IACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,eAAe,GAAGH,cAAc,IAAE,KAAK;;IAE5C;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACI,UAAU,GAAGL,SAAS,IAAE,KAAK;;IAElC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACM,YAAY,GAAGP,WAAW,IAAE,KAAK;;IAEtC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACQ,YAAY,GAAGT,WAAW,IAAE,KAAK;;IAEtC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACU,UAAU,GAAG1b,SAAS;IAC3B,IAAI,CAACob,SAAS,GAAGA,SAAS,CAAC,CAAC;;IAE5B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACO,cAAc,GAAG,CAAC;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,eAAe,GAAG,CAAC;;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,iBAAiB,GAAG,IAAI;;IAE7B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,IAAI;;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG;MAACpjB,CAAC,EAAE,IAAI;MAAEiJ,CAAC,EAAE,IAAI;MAAE5K,CAAC,EAAE,IAAI;MAAED,CAAC,EAAE;IAAI,CAAC;;IAEvD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACilB,iBAAiB,GAAGlB,OAAO,CAACmB,sBAAsB,CAAC,CAAc;;IAEtE;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,IAAI;;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,SAAS,GAAG,IAAI;;IAErB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,qBAAqB,GAAG,IAAI;;IAEjC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,IAAI,GAAG,IAAI;;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,iBAAiB,GAAG,IAAI;;IAE7B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ,GAAG,IAAI;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,mBAAmB,GAAG,IAAI;;IAE/B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG,IAAI;;IAExB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,kBAAkB,GAAG,EAAE;;IAE5B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;;IAErB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,cAAc,GAAG,EAAE;;IAExB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,EAAE;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,kBAAkB,GAAG,CAAC;;IAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,kBAAkB,GAAG,CAAC,CAAC;;IAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ,GAAG,CAAC;;IAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,OAAO,GAAG,CAAC;;IAEhB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,cAAc,GAAG,EAAE;;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,CAAC;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,kBAAkB,GAAG,CAAC;;IAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,iBAAiB,GAAG,KAAK;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,eAAe,GAAG,IAAIvzB,QAAQ,CAACgoB,SAAS,CAAC,CAAC;;IAE/C;IACA,IAAI,CAACwL,gBAAgB,CAAC,CAAC;EACxB;EACA,IAAIxwB,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAAC6wB,OAAO,EAAE9wB,QAAQ,CAACirB,KAAK,CAAC;;EAEjD;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC6F,OAAO,CAAC2C,YAAY,GAAG,UAAUC,WAAW,EAAEpxB,MAAM,EAAEqxB,UAAU,EAAE;IACjE,IAAI,CAACD,WAAW,IAAI,CAACA,WAAW,CAACpgB,OAAO,EAAE;MAAE,OAAO,IAAI;IAAE;IACzD,IAAIhR,MAAM,KAAK0T,SAAS,EAAE;MAAE1T,MAAM,GAAG,CAAC,CAAC;IAAE;IACzC,IAAIqxB,UAAU,KAAK3d,SAAS,EAAE;MAAE2d,UAAU,GAAG,KAAK;IAAE;IAEpD,IAAIC,KAAK,GAAItxB,MAAM,IAAI,CAAC,CAAC,IAAIqxB,UAAU,GAAGrxB,MAAM,GAAG,CAAE;IACrD,IAAIuxB,GAAG,GAAIvxB,MAAM,IAAI,CAAC,CAAC,IAAIqxB,UAAU,GAAGrxB,MAAM,GAAC,CAAC,GAAGoxB,WAAW,CAACpgB,OAAO,CAACjS,MAAO;IAC9E,KAAK,IAAIF,CAAC,GAACyyB,KAAK,EAAEzyB,CAAC,GAAC0yB,GAAG,EAAE1yB,CAAC,EAAE,EAAE;MAC7B,IAAIyG,CAAC,GAAG8rB,WAAW,CAACpgB,OAAO,CAACnS,CAAC,CAAC;MAC9B,IAAIyG,CAAC,CAACksB,MAAM,IAAIlsB,CAAC,CAAC2N,KAAK,CAACrK,KAAK,IAAI,CAAC,IAAItD,CAAC,CAAC2N,KAAK,CAACnK,MAAM,IAAI,CAAC,EAAE;QAAE;MAAU;MAEvE,IAAIuD,CAAC,GAAG/G,CAAC,CAACiJ,IAAI;MACdjJ,CAAC,CAACksB,MAAM,GAAG;QACVnhB,CAAC,EAAEhE,CAAC,CAAClC,CAAC,GAAG7E,CAAC,CAAC2N,KAAK,CAACnK,MAAM;QACvBhK,CAAC,EAAEuN,CAAC,CAACpC,CAAC,GAAG3E,CAAC,CAAC2N,KAAK,CAACrK,KAAK;QACtB8B,CAAC,EAAE,CAAC2B,CAAC,CAAClC,CAAC,GAAGkC,CAAC,CAACvD,MAAM,IAAIxD,CAAC,CAAC2N,KAAK,CAACnK,MAAM;QACpCuD,CAAC,EAAE,CAACA,CAAC,CAACpC,CAAC,GAAGoC,CAAC,CAACzD,KAAK,IAAItD,CAAC,CAAC2N,KAAK,CAACrK;MAC9B,CAAC;IACF;IAEA,OAAOwoB,WAAW,CAACpgB,OAAO,CAAEhR,MAAM,IAAI,CAAC,CAAC,GAAIA,MAAM,GAAG,CAAC,CAAC,CAACwxB,MAAM,IAAI;MAACnhB,CAAC,EAAC,CAAC;MAAEvR,CAAC,EAAC,CAAC;MAAE4L,CAAC,EAAC,CAAC;MAAE2B,CAAC,EAAC;IAAC,CAAC;EACvF,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACCmiB,OAAO,CAACiD,aAAa,GAAG,UAAUxoB,GAAG,EAAE;IACtC,OAAOA,GAAG,IACTA,GAAG,YAAYyoB,qBAAqB,IACpC,OAAOA,qBAAqB,KAAK,WAAW;EAC9C,CAAC;;EAEF;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACClD,OAAO,CAACmD,qBAAqB,GAAG,CAAC;;EAEjC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCnD,OAAO,CAACoD,iBAAiB,GAAG,CAAC;;EAE7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCpD,OAAO,CAACmB,sBAAsB,GAAG,KAAK;;EAEtC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCnB,OAAO,CAACqD,mBAAmB,GAAG5rB,IAAI,CAAC6rB,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;;EAE7C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCtD,OAAO,CAACuD,OAAO,GAAG;IAAC1hB,CAAC,EAAC,CAAC;IAAEvR,CAAC,EAAC,CAAC;IAAE4L,CAAC,EAAC,CAAC;IAAE2B,CAAC,EAAC;EAAC,CAAC;EAEtC,IAAI;IACH;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEmiB,OAAO,CAACwD,UAAU,GAAG,IAAIC,YAAY,CAAC,CACrC,CAAC,CAAC,EAAI,CAAC;IAAG;IACV,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,CAAC,EAAG,CAAC,CAAC;IAAG;IACV,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAG,CAAC,CAAC;IAAG;IACT,CAAC,CAAC,EAAG,CAAC,CAAC,CAAE;IAAA,CACT,CAAC;;IAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEzD,OAAO,CAAC0D,QAAQ,GAAG,IAAID,YAAY,CAAC,CAClC,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC,CAAE;IAAA,CACT,CAAC;;IAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEzD,OAAO,CAAC2D,aAAa,GAAG,IAAIF,YAAY,CAAC,CACvC,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC;IAAG;IACT,CAAC,EAAI,CAAC,CAAE;IAAA,CACT,CAAC;EACH,CAAC,CAAC,OAAMpvB,CAAC,EAAE,CAAE;;EAEb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC2rB,OAAO,CAAC4D,sBAAsB,GAC7B,0BAA0B,GAC1B,6BAA6B,GAC7B,iCAAiC,GACjC,gCACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5D,OAAO,CAAC6D,qBAAqB,GAC5B7D,OAAO,CAAC4D,sBAAsB,GAC9B,gCAAgC,GAChC,4BAA4B,GAC5B,oCAAoC,GACpC,mCAAmC,GACnC,uBACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5D,OAAO,CAAC8D,uBAAuB,GAC9B9D,OAAO,CAAC4D,sBAAsB,GAC9B,wCACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5D,OAAO,CAAC+D,mBAAmB,GAC1B,mBAAmB;EAClB;EACA;EACA;EACA,qBAAqB,GACpB,qDAAqD,GACrD,qDAAqD,GACrD,gBAAgB,GAChB,KAAK,GACN,IAAI,GACJ,2BAA2B,GAC3B,6BAA6B,GAC7B,6BAA6B,GAC9B,GACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC/D,OAAO,CAACgE,qBAAqB,GAC5B,mBAAmB,GAClB,wCAAwC,GAExC,2BAA2B,GAC1B,gDAAgD,GAChD,gBAAgB,GACjB,GAAG,GAEH,eAAe,GAChB,GACA;EACDhE,OAAO,CAACiE,yBAAyB,GAChC,uDACA;EACDjE,OAAO,CAACkE,8BAA8B,GACrC,wBAAwB;EAAI;EAC3B,+DAA+D,GAChE,UAAU,GACT,0CAA0C,GAC3C,GACA;;EAED;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACClE,OAAO,CAACmE,oBAAoB,GAC3BnE,OAAO,CAAC+D,mBACR;EACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC/D,OAAO,CAACoE,sBAAsB,GAC7BpE,OAAO,CAACgE,qBACR;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACChE,OAAO,CAACqE,oBAAoB,GAC3B,0BAA0B,GAE1B,kCAAkC,GAClC,mCACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCrE,OAAO,CAACsE,mBAAmB,GAC1BtE,OAAO,CAACqE,oBAAoB,GAC5B,gCAAgC,GAChC,4BAA4B,GAC5B,yBACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCrE,OAAO,CAACuE,qBAAqB,GAC5BvE,OAAO,CAACqE,oBAAoB,GAC5B,6BACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCrE,OAAO,CAACwE,iBAAiB,GACxB,mBAAmB,GAClB,mEAAmE,GACnE,4BAA4B,GAC5B,mEAAmE,GACpE,GACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCxE,OAAO,CAACyE,mBAAmB,GAC1B,mBAAmB,GAClB,iDAAiD,GACjD,uBAAuB,GACxB,GACA;;EAEF;EACC;AACD;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;;EAEA;EACCvyB,CAAC,CAACwyB,YAAY,GAAG,YAAY;IAC5B,OAAO,CAAC,CAAC,IAAI,CAAC1D,aAAa;EAC5B,CAAC;EAED9uB,CAAC,CAACyyB,cAAc,GAAG,UAAUruB,KAAK,EAAE;IACnCA,KAAK,GAAGqa,KAAK,CAACra,KAAK,CAAC,GAAC,IAAI,G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AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACoL,qBAAqB,GAAG,CAAC;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC58B,SAAS,GAAG,CAAC;;IAGnB;IACC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC68B,UAAU,GAAG,IAAI;;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,IAAI;;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG,KAAK;;IAEzB;AACF;AACA;IACE,IAAI,CAAC5gB,iBAAiB,GAAG5jB,QAAQ,CAAC+iB,aAAa,CAACkB,eAAe;IAE/D,IAAIkgB,gBAAgB,IAAI,IAAI,EAAE;MAAE,IAAI,CAACvxB,WAAW,CAACuxB,gBAAgB,CAAC;IAAE;EACrE;EACA,IAAInhC,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAACikC,MAAM,EAAElkC,QAAQ,CAAC+iB,aAAa,CAAC;;EAEvD;AACD;AACA;AACA;AACA;AACA;EACC/f,CAAC,CAACY,UAAU,GAAGsgC,MAAM,CAAC,CAAC;;EAGxB;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAGA;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACClhC,CAAC,CAAC0hB,SAAS,GAAG,YAAW;IACxB,IAAI6D,UAAU,GAAG,IAAI,CAACvF,WAAW,IAAI,IAAI,CAACiW,WAAW,CAAC7lB,QAAQ;IAC9D,OAAO,CAAC,EAAE,IAAI,CAACrD,OAAO,IAAI,IAAI,CAACC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC5B,MAAM,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,CAAC,IAAIka,UAAU,CAAC;EAChG,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCvlB,CAAC,CAACyV,IAAI,G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CumC,QAAQ,GAAGvmC,KAAK,CAACwC,MAAM,GAAG,IAAI;;IAEpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACgkC,QAAQ,GAAG,IAAI/pC,QAAQ,CAACgqC,QAAQ,CAACzmC,KAAK,CAAC;;IAG7C;IACC;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC0mC,YAAY,GAAG,CAAC;;IAErB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;;IAExB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACC,aAAa,CAACx/B,IAAI,CAAC,IAAI,CAAC;;IAGxD;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACy/B,EAAE,GAAG,CAAC;;IAEX;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;EACnB;EACA,IAAItnC,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAACqpC,SAAS,EAAEtpC,QAAQ,CAACgoB,SAAS,CAAC;;EAGvD;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCshB,SAAS,CAACK,WAAW,GAAG,aAAa;;EAErC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCL,SAAS,CAACiB,YAAY,GAAG,QAAQ;;EAEjC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCjB,SAAS,CAACkB,OAAO,GAAG,SAAS;;EAG9B;EACClB,SAAS,CAACC,MAAM,GAAG,KAAK;;EAGzB;EACCD,SAAS,CAACpjC,IAAI,GAAG,YAAW;IAC3B,IAAIojC,SAAS,CAACC,MAAM,EAAE;MAAE;IAAQ;IAChC;IACAkB,eAAe,CAACC,OAAO,CAAC,CAAC;IACzBpB,SAAS,CAACC,MAAM,GAAG,IAAI;EACxB,CAAC;;EAGF;EACC;AACD;AACA;AACA;AACA;AACA;EAC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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASiuC,kBAAkBA,CAACxmC,SAAS,EAAE;IACtC,IAAI,CAAC0L,2BAA2B,CAAC,CAAC;;IAEnC;IACC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACsyB,QAAQ,GAAG,IAAI;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACyI,SAAS,GAAG,IAAI;;IAErB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACjV,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC/pB,KAAK,GAAG,CAAC;;IAEd;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACi/B,OAAO,GAAG,CAAC;;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,SAAS,GAAG,GAAG;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC5mC,SAAS,GAAGA,SAAS,IAAI,CAAC;;IAGhC;IACC;AACF;AACA;AACA;AACA;IACE,IAAI,CAAC6L,OAAO,GAAG,EAAE;;IAEjB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACD,WAAW,GAAG,CAAC,CAAC;;IAErB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACG,KAAK,GAAG,IAAI;;IAEjB;AACF;AACA;AACA;AACA;IACE,IAAI,CAAC86B,eAAe,GAAG,CAAC;;IAExB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,MAAM,GAAG,CAAC;;IAEf;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ,GAAG,IAAI;;IAEpB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,MAAM,GAAG,CAAC;EAChB;EACA,IAAIzrC,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAACguC,kBAAkB,EAAEjuC,Q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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASqlB,WAAWA,CAAA,EAAG;IAEtB;IACA;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACna,KAAK,GAAG8K,SAAS;;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC5K,MAAM,GAAG4K,SAAS;;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACzJ,CAAC,GAAGyJ,SAAS;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACvJ,CAAC,GAAGuJ,SAAS;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC9G,KAAK,GAAG,CAAC;;IAEd;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC6e,IAAI,GAAG,CAAC;;IAEb;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACK,IAAI,GAAG,CAAC;;IAEb;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC3J,OAAO,GAAG,CAAC;;IAEhB;IACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC0e,WAAW,GAAG,CAAC;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,CAAC;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACmP,eAAe,GAAG,CAAC;;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,IAAI;;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC1Q,UAAU,GAAG,CAAC;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,CAAC;EACrB;EACA,IAAI/+B,CAAC,GAAGqiB,WAAW,CAAC/kB,SAAS;;EAE7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC+kB,WAAW,CAACotB,eAAe,GAAG,UAASnwC,MAAM,EAAEs5B,MAAM,EAAE;IACtD,IAAG,CAACA,MAAM,EAAC;MAAEA,MAAM,GAAG,IAAI57B,QAAQ,CAACqQ,SAAS,CAAC,CAAC;IAAE;IAChD,IAAIkT,OAAO,GAAGjhB,MAAM,CAACihB,OAAO;IAC5B,IAAIye,WAAW,GAAGze,OAAO,IAAIA,OAAO,CAACliB,MAAM;IAC3C,IAAI,CAAC,CAAC2gC,WAAW,IAAI,CAAC,EAAE;MAAE,OAAOpG,MAAM;IAAE;IAEzC,KAAI,IAAIz6B,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC6gC,WAAW,EAAE7gC,CAAC,EAAE,EAAE;MAChC,IAAIyG,CAAC,GAAG2b,OAAO,CAACpiB,CAAC,CAAC;MAClB,IAAG,CAACyG,CAAC,IAAI,CAACA,CAAC,CAACwe,SAAS,EAAC;QAAE;MAAU;MAClC,IAAIssB,IAAI,GAAG9qC,CAAC,CAACwe,SAAS,CAAC,CAAC;MACxB,IAAG,CAACssB,IAAI,EAAC;QAAE;MAAU;MACrB,IAAGvxC,CAAC,IAAE,CAAC,EAAE;QACRy6B,MAAM,CAACvuB,SAAS,CAACqlC,IAAI,CAACnmC,CAAC,EAAEmmC,IAAI,CAACjmC,CAAC,EAAEimC,IAAI,CAACxnC,KAAK,EAAEwnC,IAAI,CAACtnC,MAAM,CAAC;MAC1D,CAAC,MAAM;QACNwwB,MAAM,CAAC37B,MAAM,CAACyyC,IAAI,CAACnmC,CAAC,EAAEmmC,IAAI,CAACjmC,CAAC,EAAEimC,IAAI,CAACxnC,KAAK,EAAEwnC,IAAI,CAACtnC,MAAM,CAAC;MACvD;IACD;IAEA,OAAOwwB,MAAM;EACd,CAAC;;EAEF;EACC;AACD;AACA;AACA;AACA;EACC54B,CAAC,CAACQ,QAAQ,GAAG,YAAW;IACvB,OAAO,eAAe;EACvB,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACER,CAAC,CAACsiB,MAAM,GAAG,UAAShjB,MAAM,EAAEiK,CAAC,EAAEE,CAAC,EAAEvB,KAAK,EAAEE,MAAM,EAAE8D,KAAK,EAAEkW,OAAO,EAAE;IACjE,IAAG,CAAC9iB,MAAM,EAAC;MAAE,MAAM,oBAAoB;IAAE;IACzC,IAAI,CAACqwC,QAAQ,GAAGvtB,OAAO;IACvB,IAAI,CAAC9iB,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAAC4I,KAAK,GAAIA,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC;IACpC,IAAI,CAACE,MAAM,GAAIA,MAAM,IAAI,CAAC,GAAGA,MAAM,GAAG,CAAC;IACvC,IAAI,CAACmB,CAAC,GAAKA,CAAC,IAAI,CAAC;IACjB,IAAI,CAACE,CAAC,GAAKA,CAAC,IAAI,CAAC;IACjB,IAAI,CAACyC,KAAK,GAAIA,KAAK,IAAI,CAAC;IAExB,IAAI,CAACsW,MAAM,CAAC,CAAC;EACd,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCxiB,CAAC,CAACwiB,MAAM,GAAG,UAAStV,kBAAkB,EAAE;IACvC,IAAG,CAAC,IAAI,CAAC5N,MAAM,EAAE;MAAE,MAAM,yCAAyC;IAAE;IAEpE,IAAIswC,YAAY,GAAGvtB,WAAW,CAACotB,eAAe,CAAC,IAAI,CAACnwC,MAAM,CAAC;IAC3D,IAAIuwC,OAAO,GAAG,IAAI,CAACvwC,MAAM,CAAC0gB,WAAW;IAErC,IAAI,CAAC8e,UAAU,GAAGv5B,IAAI,CAAC0xB,IAAI,CAAC,IAAI,CAAC/uB,KAAK,GAAC,IAAI,CAACgE,KAAK,CAAC,GAAG0jC,YAAY,CAAC1nC,KAAK;IACvE,IAAI,CAAC62B,WAAW,GAAGx5B,IAAI,CAAC0xB,IAAI,CAAC,IAAI,CAAC7uB,MAAM,GAAC,IAAI,CAAC8D,KAAK,CAAC,GAAG0jC,YAAY,CAACxnC,MAAM;IAE1E,IAAG,CAACynC,OAAO,IAAI,IAAI,CAAC/Q,UAAU,IAAI+Q,OAAO,CAAC3nC,KAAK,IAAI,IAAI,CAAC62B,WAAW,IAAI8Q,OAAO,CAACznC,MAAM,EAAE;MACtF,IAAI,CAAC0nC,cAAc,CAAC,CAAC;IACtB;IAEA,IAAI,CAAC3P,WAAW,GAAGyP,YAAY,CAACrmC,CAAC;IACjC,IAAI,CAAC62B,WAAW,GAAGwP,YAAY,CAACnmC,CAAC;IACjC,IAAI,CAACshB,IAAI,GAAG,IAAI,CAACxhB,CAAC,GAAC,IAAI,CAAC2C,KAAK,GAAG,IAAI,CAACi0B,WAAW;IAChD,IAAI,CAAC/U,IAAI,GAAG,IAAI,CAAC3hB,CAAC,GAAC,IAAI,CAACyC,KAAK,GAAG,IAAI,CAACk0B,WAAW;IAEhD,IAAI,CAAC2P,YAAY,CAAC7iC,kBAAkB,CAAC;IAErC,IAAI,CAACuU,OAAO,GAAG,IAAI,CAACA,OAAO,GAAC,IAAI,CAACA,OAAO,GAAC,CAAC,GAAC,CAAC;EAC7C,CAAC;;EAED;AACD;AACA;AACA;EACCzhB,CAAC,CAAC0iB,OAAO,GAAG,YAAW;IACtB,IAAI,IAAI,CAACstB,WAAW,EAAE;MACrB;MACA,IAAI,CAAC,IAAI,CAACA,WAAW,CAAC1f,iBAAiB,EAAE;QACxC,IAAI,IAAI,CAAC8E,QAAQ,EAAC;UAAE,IAAI,CAACA,QAAQ,GAAGpiB,SAAS;QAAE;QAC/C,IAAI,IAAI,CAACqiB,KAAK,EAAC;UAAE,IAAI,CAAC2a,WAAW,CAACha,kBAAkB,CAAC,IAAI,CAACX,KAAK,CAAC;QAAE;QAClE,IAAI,IAAI,CAACM,KAAK,EAAC;UAAE,IAAI,CAACqa,WAAW,CAACha,kBAAkB,CAAC,IAAI,CAACL,KAAK,CAAC;QAAE;QAClE,IAAI,IAAI,CAACr2B,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC0gB,WAAW,EAAC;UAAE,IAAI,CAACgwB,WAAW,CAACha,kBAAkB,CAAC,IAAI,CAAC12B,MAAM,CAAC0gB,WAAW,CAAC;QAAE;MAC5G;MACA;MACA,IAAI,CAACgwB,WAAW,GAAG,KAAK;IACzB,CAAC,MAAM;MACN,IAAIxuB,KAAK,GAAG,IAAI,CAACliB,MAAM,CAACkiB,KAAK;MAC7B,IAAIA,KAAK,YAAYxkB,QAAQ,CAAC8wB,OAAO,EAAC;QACrCtM,KAAK,CAACoU,cAAc,CAAC,IAAI,CAACt2B,MAAM,CAAC0gB,WAAW,CAAC;MAC9C;IACD;IAEA,IAAI,CAAC1gB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC0gB,WAAW,GAAG,IAAI;IAC5C,IAAI,CAACyB,OAAO,GAAG,IAAI,CAAC8tB,eAAe,GAAG,IAAI,CAACC,aAAa,GAAGx8B,SAAS;IACpE,IAAI,CAAC9K,KAAK,GAAG,IAAI,CAACE,MAAM,GAAG,IAAI,CAACmB,CAAC,GAAG,IAAI,CAACE,CAAC,GAAG,IAAI,CAACshB,IAAI,GAAG,IAAI,CAACK,IAAI,GAAG,CAAC;IACtE,IAAI,CAAClf,KAAK,GAAG,CAAC;EACf,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACClM,CAAC,CAAC2iB,eAAe,GAAG,YAAW;IAC9B,IAAI3C,WAAW,GAAG,IAAI,CAAC1gB,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC0gB,WAAW;IACxD,IAAI,CAACA,WAAW,EAAE;MAAE,OAAO,IAAI;IAAE;IACjC,IAAI,IAAI,CAACyB,OAAO,IAAI,IAAI,CAAC8tB,eAAe,EAAE;MACzC,IAAI,CAACA,eAAe,GAAG,IAAI,CAAC9tB,OAAO;MACnC,IAAI,CAAC+tB,aAAa,GAAGxvB,WAAW,CAACuJ,SAAS,GAACvJ,WAAW,CAACuJ,SAAS,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC;IAC1E;;IACA,OAAO,IAAI,CAACimB,aAAa;EAC1B,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;EACCxvC,CAAC,CAACyV,IAAI,GAAG,UAASlN,GAAG,EAAE;IACtB,IAAG,CAAC,IAAI,CAACjJ,MAAM,EAAE;MAAE,OAAO,KAAK;IAAE;IACjCiJ,GAAG,CAACG,SAAS,CAAC,IAAI,CAACpJ,MAAM,CAAC0gB,WAAW,EACpC,IAAI,CAACzW,CAAC,GAAI,IAAI,CAAC42B,WAAW,GAAC,IAAI,CAACj0B,KAAM,EAAG,IAAI,CAACzC,CAAC,GAAI,IAAI,CAAC22B,WAAW,GAAC,IAAI,CAACl0B,KAAM,EAC/E,IAAI,CAAC4yB,UAAU,GAAC,IAAI,CAAC5yB,KAAK,EAAM,IAAI,CAAC6yB,WAAW,GAAC,IAAI,CAAC7yB,KACvD,CAAC;IACD,OAAO,IAAI;EACZ,CAAC;;EAEF;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACClM,CAAC,CAAC8vC,cAAc,GAAG,YAAW;IAC7B,IAAI,CAAC,IAAI,CAACH,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACM,KAAK,EAAE;MAC3C,IAAIJ,OAAO,GAAG,IAAI,CAACvwC,MAAM,CAAC0gB,WAAW;;MAErC;MACA,IAAG,CAAC6vB,OAAO,EAAE;QACZA,OAAO,GAAG,IAAI,CAACvwC,MAAM,CAAC0gB,WAAW,GAAGhjB,QAAQ,CAAC+K,YAAY,GAAC/K,QAAQ,CAAC+K,YAAY,CAAC,CAAC,GAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACnH;;MAEA;MACA4nC,OAAO,CAAC3nC,KAAK,GAAG,IAAI,CAAC42B,UAAU;MAC/B+Q,OAAO,CAACznC,MAAM,GAAG,IAAI,CAAC22B,WAAW;MACjC;IACD;;IAEA;IACA,IAAI,CAAC,IAAI,CAACiR,WAAW,EAAE;MACtB,IAAI,IAAI,CAACL,QAAQ,CAACM,KAAK,KAAK,OAAO,EAAE;QACpC,IAAG,EAAE,IAAI,CAAC3wC,MAAM,CAACkiB,KAAK,IAAI,IAAI,CAACliB,MAAM,CAACkiB,KAAK,CAACoR,OAAO,CAAC,EAAC;UACpD,IAAIkG,KAAK,GAAG,oEAAoE;UAChFA,KAAK,IAAI,IAAI,CAACx5B,MAAM,CAACkiB,KAAK,GAAG,YAAY,GAAG,gDAAgD;UAC5F,MAAMsX,KAAK;QACZ;QACA,IAAI,CAACx5B,MAAM,CAAC0gB,WAAW,GAAG,IAAI,CAAC,CAAC;QAChC,IAAI,CAACgwB,WAAW,GAAG,IAAI,CAAC1wC,MAAM,CAACkiB,KAAK;MAErC,CAAC,MAAM,IAAG,IAAI,CAACmuB,QAAQ,CAACM,KAAK,KAAK,KAAK,EAAE;QACxC,IAAI,CAAC3wC,MAAM,CAAC0gB,WAAW,GAAGhY,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC+nC,WAAW,GAAG,IAAIhzC,QAAQ,CAAC8wB,OAAO,CAAC,IAAI,CAACxuB,MAAM,CAAC0gB,WAAW,EAAE;UAACkO,SAAS,EAAE,IAAI;UAAED,WAAW,EAAE,IAAI;UAAEG,SAAS,EAAE,CAAC;QAAC,CAAC,CAAC;QACrH,IAAI,CAAC4hB,WAAW,CAAC1f,iBAAiB,GAAG,IAAI,CAAC,CAAC;MAE5C,CAAC,MAAM,IAAG,IAAI,CAACqf,QAAQ,CAACM,KAAK,YAAYjzC,QAAQ,CAAC8wB,OAAO,EAAE;QAC1D,IAAI,CAACxuB,MAAM,CAAC0gB,WAAW,GAAG,IAAI,CAAC,CAAC;QAChC,IAAI,CAACgwB,WAAW,GAAG,IAAI,CAACL,QAAQ,CAACM,KAAK;QACtC,IAAI,CAACD,WAAW,CAAC1f,iBAAiB,GAAG,IAAI,CAAC,CAAC;MAE5C,CAAC,MAAM;QACN,MAAM,uFAAuF,GAAE,IAAI,CAACqf,QAAQ,CAACM,KAAK;MACnH;IACD;;IAEA;IACA,IAAIJ,OAAO,GAAG,IAAI,CAACvwC,MAAM,CAAC0gB,WAAW;IACrC,IAAIkwB,OAAO,GAAG,IAAI,CAACF,WAAW;;IAE9B;IACA,IAAIE,OAAO,CAAC5f,iBAAiB,EAAE;MAC9Buf,OAAO,CAAC3nC,KAAK,GAAG,IAAI,CAAC42B,UAAU;MAC/B+Q,OAAO,CAACznC,MAAM,GAAG,IAAI,CAAC22B,WAAW;MACjCmR,OAAO,CAAC9b,cAAc,CAAC,IAAI,CAAC0K,UAAU,EAAE,IAAI,CAACC,WAAW,CAAC;IAC1D;IACA,IAAI,IAAI,CAACz/B,MAAM,CAACihB,OAAO,EAAE;MACxB;MACA2vB,OAAO,CAAChb,sBAAsB,CAAC,IAAI,CAAC51B,MAAM,EAAE,IAAI,CAACw/B,UAAU,EAAC,IAAI,CAACC,WAAW,CAAC;MAC7EmR,OAAO,CAAChb,sBAAsB,CAAC,IAAI,CAAC51B,MAAM,EAAE,IAAI,CAACw/B,UAAU,EAAC,IAAI,CAACC,WAAW,CAAC;IAC9E,CAAC,MAAM;MACN;MACA,IAAI,CAACmR,OAAO,CAAC5f,iBAAiB,EAAE;QAC/B4f,OAAO,CAAChb,sBAAsB,CAAC,IAAI,CAAC51B,MAAM,EAAE,IAAI,CAACw/B,UAAU,EAAC,IAAI,CAACC,WAAW,CAAC;MAC9E;IACD;EACD,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC/+B,CAAC,CAAC+vC,YAAY,GAAG,UAAS7iC,kBAAkB,EAAE;IAC7C,IAAI2iC,OAAO,GAAG,IAAI,CAACvwC,MAAM,CAAC0gB,WAAW;IACrC,IAAI1gB,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAI6wC,KAAK,GAAG,IAAI,CAACH,WAAW;IAE5B,IAAIG,KAAK,EAAC;MACT;MACAA,KAAK,CAACtb,SAAS,CAACv1B,MAAM,EAAEA,MAAM,CAACihB,OAAO,EAAE,IAAI,CAAC;;MAE7C;MACAsvB,OAAO,GAAG,IAAI,CAACvwC,MAAM,CAAC0gB,WAAW;MAEjC6vB,OAAO,CAAC3nC,KAAK,GAAG,IAAI,CAAC42B,UAAU;MAC/B+Q,OAAO,CAACznC,MAAM,GAAG,IAAI,CAAC22B,WAAW;IAClC,CAAC,MAAM;MACN,IAAIx2B,GAAG,GAAGsnC,OAAO,CAACrnC,UAAU,CAAC,IAAI,CAAC;MAElC,IAAI,CAAC0E,kBAAkB,EAAE;QACxB3E,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACq2B,UAAU,GAAC,CAAC,EAAE,IAAI,CAACC,WAAW,GAAC,CAAC,CAAC;MAC3D;MAEAx2B,GAAG,CAACuV,IAAI,CAAC,CAAC;MACVvV,GAAG,CAAC2Z,wBAAwB,GAAGhV,kBAAkB;MACjD3E,GAAG,CAAC+V,YAAY,CAAC,IAAI,CAACpS,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACA,KAAK,EAAE,CAAC,IAAI,CAACi0B,WAAW,EAAC,CAAC,IAAI,CAACC,WAAW,CAAC;MAChF73B,GAAG,CAAC4D,SAAS,CAAC,CAAC,IAAI,CAAC5C,CAAC,EAAE,CAAC,IAAI,CAACE,CAAC,CAAC;MAC/BnK,MAAM,CAACmW,IAAI,CAAClN,GAAG,EAAE,IAAI,CAAC;MACtBA,GAAG,CAACyV,OAAO,CAAC,CAAC;MAGb,IAAI1e,MAAM,CAACihB,OAAO,IAAIjhB,MAAM,CAACihB,OAAO,CAACliB,MAAM,EAAE;QAC5C,IAAI,CAAC+xC,aAAa,CAAC7nC,GAAG,CAAC;MACxB;IACD;IACAsnC,OAAO,CAACrS,QAAQ,GAAG,IAAI;EACxB,CAAC;;EAED;AACD;AACA;AACA;AACA;EACCx9B,CAAC,CAACowC,aAAa,GAAG,UAAS7nC,GAAG,EAAE;IAC/B,IAAIgY,OAAO,GAAG,IAAI,CAACjhB,MAAM,CAACihB,OAAO;IAEjC,IAAIxZ,CAAC,GAAG,IAAI,CAAC+3B,UAAU;IACvB,IAAIznB,CAAC,GAAG,IAAI,CAAC0nB,WAAW;IAExB,IAAIl9B,IAAI;IAER,IAAI1D,CAAC,GAAG,CAAC;MAAEq4B,MAAM,GAAGjW,OAAO,CAACpiB,CAAC,CAAC;IAC9B,GAAG;MAAE;MACJ,IAAGq4B,MAAM,CAACwY,WAAW,EAAC;QACrB,IAAGntC,IAAI,EAAE;UACR0G,GAAG,CAACqhB,YAAY,CAAC/nB,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC;UAC3BA,IAAI,GAAG,IAAI;QACZ;QACA20B,MAAM,CAACyY,WAAW,CAAC1mC,GAAG,EAAE,CAAC,EAAC,CAAC,EAAExB,CAAC,EAACsQ,CAAC,CAAC;MAClC,CAAC,MAAM;QACN,IAAG,CAACxV,IAAI,EAAE;UACTA,IAAI,GAAG0G,GAAG,CAAC2b,YAAY,CAAC,CAAC,EAAC,CAAC,EAAEnd,CAAC,EAACsQ,CAAC,CAAC;QAClC;QACAmf,MAAM,CAAC8Y,YAAY,CAACztC,IAAI,CAAC;MAC1B;;MAEA;MACA20B,MAAM,GAAGA,MAAM,CAAC2I,UAAU,KAAK,IAAI,GAAG3I,MAAM,CAAC2I,UAAU,GAAG5e,OAAO,CAAC,EAAEpiB,CAAC,CAAC;IACvE,CAAC,QAAQq4B,MAAM;;IAEf;IACA,IAAG30B,IAAI,EAAE;MACR0G,GAAG,CAACqhB,YAAY,CAAC/nB,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC;IAC5B;EACD,CAAC;EAED7E,QAAQ,CAACqlB,WAAW,GAAGA,WAAW;AACnC,CAAC,EAAC,CAAC;;AAEH;AACA;AACA;;AAEAtlB,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAE,CAAC,CAAC;AAEpC,aAAW;EACX,YAAY;;EAGb;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASqzC,UAAUA,CAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAC3C,IAAI,CAACC,kBAAkB,CAAC,CAAC;;IAEzB;IACA;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,MAAM,GAAGJ,KAAK;IACnB,IAAI,CAACK,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,MAAM,GAAGN,KAAK;IACnB,IAAI,CAACO,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ;IACb,IAAI,CAACC,YAAY,GAAG,IAAI;;IAExB;AACF;AACA;IACE,IAAI,CAACC,oBAAoB,GACxB,mCAAmC,GACnC,mCAAmC,GACnC,6BAA6B,GAC7B,mBAAmB,GAClB,yBAAyB,GAEzB,qCAAqC,GACrC,qCAAqC,GACrC,oBAAoB,GAEpB,kCAAkC,GACjC,kCAAkC,GACjC,qFAAqF,GACrF,yEAAyE,GAC1E,GAAG,GACJ,GAAG,GAEH,4BAA4B,GAC7B,GACA;;IAED;IACA,IAAGzyB,KAAK,CAAC+xB,OAAO,CAAC,IAAIA,OAAO,GAAG,CAAC,EAAC;MAAEA,OAAO,GAAG,CAAC;IAAE;IAChD,IAAI,CAACW,UAAU,CAACX,OAAO,GAAC,CAAC,CAAC;EAC3B;EACA,IAAIxwC,CAAC,GAAGhD,QAAQ,CAACC,MAAM,CAACozC,UAAU,EAAErzC,QAAQ,CAAC+xC,MAAM,CAAC;;EAEpD;EACA;;EAEA/uC,CAAC,CAACoxC,QAAQ,GAAG,YAAW;IAAE,OAAO,IAAI,CAACV,MAAM;EAAE,CAAC;EAC/C1wC,CAAC,CAACqxC,QAAQ,GAAG,YAAW;IAAE,OAAO,IAAI,CAACR,MAAM;EAAE,CAAC;EAC/C7wC,CAAC,CAACsxC,QAAQ,GAAG,UAASltC,KAAK,EAAE;IAC5B,IAAGqa,KAAK,CAACra,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAC;MAAEA,KAAK,GAAG,CAAC;IAAE;IAC1C,IAAI,CAACssC,MAAM,GAAGtsC,KAAK;EACpB,CAAC;EACDpE,CAAC,CAACuxC,QAAQ,GAAG,UAASntC,KAAK,EAAE;IAC5B,IAAGqa,KAAK,CAACra,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAC;MAAEA,KAAK,GAAG,CAAC;IAAE;IAC1C,IAAI,CAACysC,MAAM,GAAGzsC,KAAK;EACpB,CAAC;EACDpE,CAAC,CAACwxC,UAAU,GAAG,YAAW;IAAE,OAAO,IAAI,CAACR,QAAQ;EAAE,CAAC;EACnDhxC,CAAC,CAACmxC,UAAU,GAAG,UAAS/sC,KAAK,EAAE;IAC9B,IAAGqa,KAAK,CAACra,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAC;MAAEA,KAAK,GAAG,CAAC;IAAE;IAC1C,IAAI,CAAC4sC,QAAQ,GAAG5sC,KAAK,GAAG,CAAC;EAC1B,CAAC;EACDpE,CAAC,CAACyxC,UAAU,GAAG,YAAW;IACzB,IAAIC,OAAO,GAAG,IAAI,CAACd,UAAU,KAAK,IAAI,CAACF,MAAM;IAC7C,IAAIiB,OAAO,GAAG,IAAI,CAACZ,UAAU,KAAK,IAAI,CAACF,MAAM;IAC7C,IAAIe,OAAO,GAAG,IAAI,CAACX,YAAY,KAAK,IAAI,CAACD,QAAQ;IACjD,IAAGU,OAAO,IAAIC,OAAO,IAAIC,OAAO,EAAE;MACjC,IAAGF,OAAO,IAAIE,OAAO,EAAE;QAAE,IAAI,CAACjB,WAAW,GAAG,IAAI,CAACkB,SAAS,CAAC,IAAI,CAACnB,MAAM,GAAG,IAAI,CAACM,QAAQ,CAAC;MAAE;MACzF,IAAGW,OAAO,IAAIC,OAAO,EAAE;QAAE,IAAI,CAACd,WAAW,GAAG,IAAI,CAACe,SAAS,CAAC,IAAI,CAAChB,MAAM,GAAG,IAAI,CAACG,QAAQ,CAAC;MAAE;MACzF,IAAI,CAACc,aAAa,CAAC,CAAC;MACpB,IAAI,CAAClB,UAAU,GAAG,IAAI,CAACF,MAAM;MAC7B,IAAI,CAACK,UAAU,GAAG,IAAI,CAACF,MAAM;MAC7B,IAAI,CAACI,YAAY,GAAG,IAAI,CAACD,QAAQ;MACjC,OAAOh+B,SAAS,CAAC,CAAC;IACnB;;IACA,OAAO,IAAI,CAAC++B,eAAe;EAC5B,CAAC;EACD/xC,CAAC,CAACgyC,UAAU,GAAG,YAAW;IAAE,IAAI,CAACD,eAAe;EAAE,CAAC;EAEnD,IAAI;IACHp0C,MAAM,CAAC6G,gBAAgB,CAACxE,CAAC,EAAE;MAC1BswC,KAAK,EAAE;QAAE9xC,GAAG,EAAEwB,CAAC,CAACoxC,QAAQ;QAAE9wC,GAAG,EAAEN,CAAC,CAACsxC;MAAS,CAAC;MAC3Cf,KAAK,EAAE;QAAE/xC,GAAG,EAAEwB,CAAC,CAACqxC,QAAQ;QAAE/wC,GAAG,EAAEN,CAAC,CAACuxC;MAAS,CAAC;MAC3Cf,OAAO,EAAE;QAAEhyC,GAAG,EAAEwB,CAAC,CAACwxC,UAAU;QAAElxC,GAAG,EAAEN,CAAC,CAACmxC;MAAW,CAAC;MACjDza,YAAY,EAAE;QAAEl4B,GAAG,EAAEwB,CAAC,CAACyxC,UAAU;QAAEnxC,GAAG,EAAEN,CAAC,CAACgyC;MAAU;IACrD,CAAC,CAAC;EACH,CAAC,CAAC,OAAO7vC,CAAC,EAAE;IAAEtD,OAAO,CAACE,GAAG,CAACoD,CAAC,CAAC;EAAE;;EAE9B;AACD;AACA;AACA;AACA;AACA;EACCnC,CAAC,CAAC6xC,SAAS,GAAG,UAASI,MAAM,EAAE;IAC9B,IAAIC,IAAI,GAAG,GAAG;IACd,IAAGD,MAAM,IAAE,CAAC,EAAE;MAAE,OAAO,CAAC,CAAC,CAAC;IAAE;IAE5B,IAAIlqB,MAAM,GAAG,EAAE;IACf,IAAIrV,KAAK,GAAGnN,IAAI,CAAC0xB,IAAI,CAACgb,MAAM,GAAC,CAAC,CAAC;IAC/Bv/B,KAAK,IAAKA,KAAK,GAAC,CAAC,GAAE,CAAC,GAAC,CAAC;IACtB,IAAI8hB,MAAM,GAAI9hB,KAAK,GAAC,CAAC,GAAE,CAAC;IACxB,KAAI,IAAIvU,CAAC,GAAG,CAACq2B,MAAM,EAAEr2B,CAAC,IAAEq2B,MAAM,EAAEr2B,CAAC,EAAE,EAAE;MACpC,IAAIoL,CAAC,GAAIpL,CAAC,GAACq2B,MAAM,GAAE0d,IAAI;MACvBnqB,MAAM,CAACrmB,IAAI,CAAC,CAAC,GAAC6D,IAAI,CAACmH,IAAI,CAAC,CAAC,GAACnH,IAAI,CAACgF,EAAE,CAAC,GAAGhF,IAAI,CAAC6rB,GAAG,CAAC7rB,IAAI,CAAC4sC,CAAC,EAAE,EAAE5sC,IAAI,CAAC6rB,GAAG,CAAC7nB,CAAC,EAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;IAC3E;IACA,IAAI6oC,MAAM,GAAGrqB,MAAM,CAACsqB,MAAM,CAAC,UAAStoC,CAAC,EAAEC,CAAC,EAAE;MAAE,OAAOD,CAAC,GAAGC,CAAC;IAAE,CAAC,CAAC;IAC5D,OAAO+d,MAAM,CAACuqB,GAAG,CAAC,UAASC,YAAY,EAAExsB,KAAK,EAAE9nB,KAAK,EAAE;MAAE,OAAOs0C,YAAY,GAACH,MAAM;IAAE,CAAC,CAAC;EACxF,CAAC;;EAED;AACD;AACA;AACA;EACCpyC,CAAC,CAAC8xC,aAAa,GAAG,YAAW;IAC5B,IAAG,IAAI,CAACpB,MAAM,KAAK19B,SAAS,IAAI,IAAI,CAAC69B,MAAM,KAAK79B,SAAS,EAAC;MAAE;IAAQ;IACpE,IAAI+U,MAAM,GAAG,IAAI,CAACmpB,oBAAoB;IACtCnpB,MAAM,GAAGA,MAAM,CAACmT,OAAO,CAAC,gBAAgB,EAAG,IAAI,CAACyV,WAAW,CAACtyC,MAAM,CAAEm0C,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/EzqB,MAAM,GAAGA,MAAM,CAACmT,OAAO,CAAC,gBAAgB,EAAG,IAAI,CAAC4V,WAAW,CAACzyC,MAAM,CAAEm0C,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/E,IAAI,CAAC1b,gBAAgB,GAAG/O,MAAM;EAC/B,CAAC;;EAED;EACA/nB,CAAC,CAAC22B,gBAAgB,GAAG,UAAS1D,EAAE,EAAEzR,KAAK,EAAEmY,aAAa,EAAE;IACvD;IACA1G,EAAE,CAACwf,UAAU,CACZxf,EAAE,CAACuH,kBAAkB,CAACb,aAAa,EAAE,SAAS,CAAC,EAC/C,IAAI,CAACgX,WACN,CAAC;IACD1d,EAAE,CAACwf,UAAU,CACZxf,EAAE,CAACuH,kBAAkB,CAACb,aAAa,EAAE,SAAS,CAAC,EAC/C,IAAI,CAACmX,WACN,CAAC;;IAED;IACA7d,EAAE,CAACyf,SAAS,CACXzf,EAAE,CAACuH,kBAAkB,CAACb,aAAa,EAAE,eAAe,CAAC,EACrD,CAAC,IAAEnY,KAAK,CAACmN,cAAc,GAAC,IAAI,CAACqiB,QAAQ,CAAC,EAAE,CAAC,IAAExvB,KAAK,CAACoN,eAAe,GAAC,IAAI,CAACoiB,QAAQ,CAC/E,CAAC;EACF,CAAC;;EAEF;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACCX,UAAU,CAACsC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;;EAEpuC;AACD;AACA;AACA;AACA;AACA;AACA;EACCtC,UAAU,CAACuC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EA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"},"metadata":{},"sourceType":"script"}