{"ast":null,"code":"/*!\n* SoundJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  /**\n   * Static class holding library specific information such as the version and buildDate of the library.\n   * The SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\n   * for information on using sound.\n   * @class SoundJS\n   **/\n  var s = createjs.SoundJS = createjs.SoundJS || {};\n\n  /**\n   * The version string for this release.\n   * @property version\n   * @type String\n   * @static\n   **/\n  s.version = /*=version*/\"1.0.0\"; // injected by build process\n\n  /**\n   * The build date for this release in UTC format.\n   * @property buildDate\n   * @type String\n   * @static\n   **/\n  s.buildDate = /*=date*/\"Tue, 10 Oct 2017 12:24:35 GMT\"; // injected by build process\n})();\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function (subclass, superclass) {\n  \"use strict\";\n\n  function o() {\n    this.constructor = subclass;\n  }\n  o.prototype = superclass.prototype;\n  return subclass.prototype = new o();\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function (subclass, prefix) {\n  \"use strict\";\n\n  var subP = subclass.prototype,\n    supP = Object.getPrototypeOf && Object.getPrototypeOf(subP) || subP.__proto__;\n  if (supP) {\n    subP[(prefix += \"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n    for (var n in supP) {\n      if (subP.hasOwnProperty(n) && typeof supP[n] == \"function\") {\n        subP[prefix + n] = supP[n];\n      }\n    }\n  }\n  return subclass;\n};\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function (fallbackMethod, name) {\n  \"use strict\";\n\n  return function () {\n    var msg = \"Deprecated property or method '\" + name + \"'. See docs for info.\";\n    console && (console.warn ? console.warn(msg) : console.log(msg));\n    return fallbackMethod && fallbackMethod.apply(this, arguments);\n  };\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement) {\n  \"use strict\";\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (searchElement === array[i]) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n//##############################################################################\n// proxy.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function () {\n  \"use strict\";\n\n  /**\n   * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n   * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n   * method gets called in the correct scope.\n   *\n   * Additional arguments can be passed that will be applied to the function when it is called.\n   *\n   * <h4>Example</h4>\n   *\n   *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n   *\n   *      function myHandler(arg1, arg2) {\n   *           // This gets called when myObject.myCallback is executed.\n   *      }\n   *\n   * @method proxy\n   * @param {Function} method The function to call\n   * @param {Object} scope The scope to call the method name on\n   * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n   * @public\n   * @static\n   */\n  createjs.proxy = function (method, scope) {\n    var aArgs = Array.prototype.slice.call(arguments, 2);\n    return function () {\n      return method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n    };\n  };\n})();\n\n//##############################################################################\n// BrowserDetect.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * @class Utility Methods\n */\n(function () {\n  \"use strict\";\n\n  /**\n   * An object that determines the current browser, version, operating system, and other environment\n   * variables via user agent string.\n   *\n   * Used for audio because feature detection is unable to detect the many limitations of mobile devices.\n   *\n   * <h4>Example</h4>\n   *\n   *      if (createjs.BrowserDetect.isIOS) { // do stuff }\n   *\n   * @property BrowserDetect\n   * @type {Object}\n   * @param {Boolean} isFirefox True if our browser is Firefox.\n   * @param {Boolean} isOpera True if our browser is opera.\n   * @param {Boolean} isChrome True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\n   * completely different browser with different abilities.\n   * @param {Boolean} isIOS True if our browser is safari for iOS devices (iPad, iPhone, and iPod).\n   * @param {Boolean} isAndroid True if our browser is Android.\n   * @param {Boolean} isBlackberry True if our browser is Blackberry.\n   * @constructor\n   * @static\n   */\n  function BrowserDetect() {\n    throw \"BrowserDetect cannot be instantiated\";\n  }\n  ;\n  var agent = BrowserDetect.agent = window.navigator.userAgent;\n  BrowserDetect.isWindowPhone = agent.indexOf(\"IEMobile\") > -1 || agent.indexOf(\"Windows Phone\") > -1;\n  BrowserDetect.isFirefox = agent.indexOf(\"Firefox\") > -1;\n  BrowserDetect.isOpera = window.opera != null;\n  BrowserDetect.isChrome = agent.indexOf(\"Chrome\") > -1; // NOTE that Chrome on Android returns true but is a completely different browser with different abilities\n  BrowserDetect.isIOS = (agent.indexOf(\"iPod\") > -1 || agent.indexOf(\"iPhone\") > -1 || agent.indexOf(\"iPad\") > -1) && !BrowserDetect.isWindowPhone;\n  BrowserDetect.isAndroid = agent.indexOf(\"Android\") > -1 && !BrowserDetect.isWindowPhone;\n  BrowserDetect.isBlackberry = agent.indexOf(\"Blackberry\") > -1;\n  createjs.BrowserDetect = BrowserDetect;\n})();\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\r\n   * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n   *\r\n   * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n   * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n   * \r\n   * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n   * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n   * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n   * \r\n   * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n   * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n   * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n   * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n   * \r\n   * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n   * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n   * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n   *\r\n   * <h4>Example</h4>\r\n   * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n   *\r\n   *      EventDispatcher.initialize(MyClass.prototype);\r\n   *\r\n   * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n   *\r\n   *      instance.addEventListener(\"eventName\", handlerMethod);\r\n   *      function handlerMethod(event) {\r\n   *          console.log(event.target + \" Was Clicked\");\r\n   *      }\r\n   *\r\n   * <b>Maintaining proper scope</b><br />\r\n   * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n   * method to subscribe to events simplifies this.\r\n   *\r\n   *      instance.addEventListener(\"click\", function(event) {\r\n   *          console.log(instance == this); // false, scope is ambiguous.\r\n   *      });\r\n   *      \r\n   *      instance.on(\"click\", function(event) {\r\n   *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n   *      });\r\n   * \r\n   * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n   * scope.\r\n   *\r\n   * <b>Browser support</b>\r\n   * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n   * requires modern browsers (IE9+).\r\n   *      \r\n   *\r\n   * @class EventDispatcher\r\n   * @constructor\r\n   **/\n  function EventDispatcher() {\n    // private properties:\n    /**\r\n     * @protected\r\n     * @property _listeners\r\n     * @type Object\r\n     **/\n    this._listeners = null;\n\n    /**\r\n     * @protected\r\n     * @property _captureListeners\r\n     * @type Object\r\n     **/\n    this._captureListeners = null;\n  }\n  var p = EventDispatcher.prototype;\n\n  // static public methods:\n  /**\r\n   * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n   * \r\n   * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n   * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n   * \r\n   * @method initialize\r\n   * @static\r\n   * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n   * prototype.\r\n   **/\n  EventDispatcher.initialize = function (target) {\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  };\n\n  // public methods:\n  /**\r\n   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n   * multiple callbacks getting fired.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.addEventListener(\"click\", handleClick);\r\n   *      function handleClick(event) {\r\n   *         // Click happened.\r\n   *      }\r\n   *\r\n   * @method addEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function | Object} Returns the listener for chaining or assignment.\r\n   **/\n  p.addEventListener = function (type, listener, useCapture) {\n    var listeners;\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n    var arr = listeners[type];\n    if (arr) {\n      this.removeEventListener(type, listener, useCapture);\n    }\n    arr = listeners[type]; // remove may have deleted the array\n    if (!arr) {\n      listeners[type] = [listener];\n    } else {\n      arr.push(listener);\n    }\n    return listener;\n  };\n\n  /**\r\n   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n   * only run once, associate arbitrary data with the listener, and remove the listener.\r\n   * \r\n   * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n   * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n   * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n   * to `on` with the same params will create multiple listeners.\r\n   * \r\n   * <h4>Example</h4>\r\n   * \r\n   * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n   * \t\tfunction handleClick(evt, data) {\r\n   * \t\t\tdata.count -= 1;\r\n   * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n   * \t\t\tif (data.count == 0) {\r\n   * \t\t\t\talert(\"clicked 3 times!\");\r\n   * \t\t\t\tmyBtn.off(\"click\", listener);\r\n   * \t\t\t\t// alternately: evt.remove();\r\n   * \t\t\t}\r\n   * \t\t}\r\n   * \r\n   * @method on\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n   * the event is dispatched.\r\n   * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n   * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n   * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n   * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n   **/\n  p.on = function (type, listener, scope, once, data, useCapture) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n    scope = scope || this;\n    return this.addEventListener(type, function (evt) {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  };\n\n  /**\r\n   * Removes the specified event listener.\r\n   *\r\n   * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n   * closure will not work.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      displayObject.removeEventListener(\"click\", handleClick);\r\n   *\r\n   * @method removeEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n  p.removeEventListener = function (type, listener, useCapture) {\n    var listeners = useCapture ? this._captureListeners : this._listeners;\n    if (!listeners) {\n      return;\n    }\n    var arr = listeners[type];\n    if (!arr) {\n      return;\n    }\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete listeners[type];\n        } // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  };\n\n  /**\r\n   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n   * .on method.\r\n   * \r\n   * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n   * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n   *\r\n   * @method off\r\n   * @param {String} type The string type of the event.\r\n   * @param {Function | Object} listener The listener function or object.\r\n   * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n   **/\n  p.off = p.removeEventListener;\n\n  /**\r\n   * Removes all listeners for the specified type, or all listeners of all types.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Remove all listeners\r\n   *      displayObject.removeAllEventListeners();\r\n   *\r\n   *      // Remove all click listeners\r\n   *      displayObject.removeAllEventListeners(\"click\");\r\n   *\r\n   * @method removeAllEventListeners\r\n   * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n   **/\n  p.removeAllEventListeners = function (type) {\n    if (!type) {\n      this._listeners = this._captureListeners = null;\n    } else {\n      if (this._listeners) {\n        delete this._listeners[type];\n      }\n      if (this._captureListeners) {\n        delete this._captureListeners[type];\n      }\n    }\n  };\n\n  /**\r\n   * Dispatches the specified event to all listeners.\r\n   *\r\n   * <h4>Example</h4>\r\n   *\r\n   *      // Use a string event\r\n   *      this.dispatchEvent(\"complete\");\r\n   *\r\n   *      // Use an Event instance\r\n   *      var event = new createjs.Event(\"progress\");\r\n   *      this.dispatchEvent(event);\r\n   *\r\n   * @method dispatchEvent\r\n   * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n   * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n   * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n   * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n   **/\n  p.dispatchEvent = function (eventObj, bubbles, cancelable) {\n    if (typeof eventObj == \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      var listeners = this._listeners;\n      if (!bubbles && (!listeners || !listeners[eventObj])) {\n        return true;\n      }\n      eventObj = new createjs.Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    }\n\n    // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n    try {\n      eventObj.target = this;\n    } catch (e) {} // try/catch allows redispatching of native events\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      var top = this,\n        list = [top];\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n      var i,\n        l = list.length;\n\n      // capture & atTarget\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      }\n      // bubbling\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n    return !eventObj.defaultPrevented;\n  };\n\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type.\r\n   * @method hasEventListener\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n   **/\n  p.hasEventListener = function (type) {\n    var listeners = this._listeners,\n      captureListeners = this._captureListeners;\n    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  };\n\n  /**\r\n   * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n   * specified type is dispatched from this object, it will trigger at least one listener.\r\n   * \r\n   * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n   * event flow for a listener, not just this object.\r\n   * @method willTrigger\r\n   * @param {String} type The string type of the event.\r\n   * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n   **/\n  p.willTrigger = function (type) {\n    var o = this;\n    while (o) {\n      if (o.hasEventListener(type)) {\n        return true;\n      }\n      o = o.parent;\n    }\n    return false;\n  };\n\n  /**\r\n   * @method toString\r\n   * @return {String} a string representation of the instance.\r\n   **/\n  p.toString = function () {\n    return \"[EventDispatcher]\";\n  };\n\n  // private methods:\n  /**\r\n   * @method _dispatchEvent\r\n   * @param {Object | Event} eventObj\r\n   * @param {Object} eventPhase\r\n   * @protected\r\n   **/\n  p._dispatchEvent = function (eventObj, eventPhase) {\n    var l,\n      arr,\n      listeners = eventPhase <= 2 ? this._captureListeners : this._listeners;\n    if (eventObj && listeners && (arr = listeners[eventObj.type]) && (l = arr.length)) {\n      try {\n        eventObj.currentTarget = this;\n      } catch (e) {}\n      try {\n        eventObj.eventPhase = eventPhase | 0;\n      } catch (e) {}\n      eventObj.removed = false;\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n      for (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        var o = arr[i];\n        if (o.handleEvent) {\n          o.handleEvent(eventObj);\n        } else {\n          o(eventObj);\n        }\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase == 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n    if (eventPhase === 2) {\n      this._dispatchEvent(eventObj, 2.1);\n    }\n  };\n  createjs.EventDispatcher = EventDispatcher;\n})();\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n   * Contains properties and methods shared by all events for use with\n   * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n   * \n   * Note that Event objects are often reused, so you should never\n   * rely on an event object's state outside of the call stack it was received in.\n   * @class Event\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @constructor\n   **/\n  function Event(type, bubbles, cancelable) {\n    // public properties:\n    /**\n     * The type of event.\n     * @property type\n     * @type String\n     **/\n    this.type = type;\n\n    /**\n     * The object that generated an event.\n     * @property target\n     * @type Object\n     * @default null\n     * @readonly\n    */\n    this.target = null;\n\n    /**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     * @property currentTarget\n     * @type Object\n     * @default null\n     * @readonly\n    */\n    this.currentTarget = null;\n\n    /**\n     * For bubbling events, this indicates the current event phase:<OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     * @property eventPhase\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n    this.eventPhase = 0;\n\n    /**\n     * Indicates whether the event will bubble through the display list.\n     * @property bubbles\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.bubbles = !!bubbles;\n\n    /**\n     * Indicates whether the default behaviour of this event can be cancelled via\n     * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n     * @property cancelable\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.cancelable = !!cancelable;\n\n    /**\n     * The epoch time at which this event was created.\n     * @property timeStamp\n     * @type Number\n     * @default 0\n     * @readonly\n    */\n    this.timeStamp = new Date().getTime();\n\n    /**\n     * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property defaultPrevented\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.defaultPrevented = false;\n\n    /**\n     * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n     * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n     * @property propagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.propagationStopped = false;\n\n    /**\n     * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n     * on this event.\n     * @property immediatePropagationStopped\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.immediatePropagationStopped = false;\n\n    /**\n     * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n     * @property removed\n     * @type Boolean\n     * @default false\n     * @readonly\n    */\n    this.removed = false;\n  }\n  var p = Event.prototype;\n\n  // public methods:\n  /**\n   * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n   * cancel the default behaviour associated with the event.\n   * @method preventDefault\n   **/\n  p.preventDefault = function () {\n    this.defaultPrevented = this.cancelable && true;\n  };\n\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopPropagation\n   **/\n  p.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n\n  /**\n   * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n   * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n   * Mirrors the DOM event standard.\n   * @method stopImmediatePropagation\n   **/\n  p.stopImmediatePropagation = function () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  /**\n   * Causes the active listener to be removed via removeEventListener();\n   * \n   * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n   * \t\t\t// do stuff...\n   * \t\t\tevt.remove(); // removes this listener.\n   * \t\t});\n   * \n   * @method remove\n   **/\n  p.remove = function () {\n    this.removed = true;\n  };\n\n  /**\n   * Returns a clone of the Event instance.\n   * @method clone\n   * @return {Event} a clone of the Event instance.\n   **/\n  p.clone = function () {\n    return new Event(this.type, this.bubbles, this.cancelable);\n  };\n\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the instance.\n   * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n    return this;\n  };\n\n  /**\n   * Returns a string representation of this object.\n   * @method toString\n   * @return {String} a string representation of the instance.\n   **/\n  p.toString = function () {\n    return \"[Event (type=\" + this.type + \")]\";\n  };\n  createjs.Event = Event;\n})();\n\n//##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n   * @class ErrorEvent\n   * @param {String} [title] The error title\n   * @param {String} [message] The error description\n   * @param {Object} [data] Additional error data\n   * @constructor\n   */\n  function ErrorEvent(title, message, data) {\n    this.Event_constructor(\"error\");\n\n    /**\n     * The short error title, which indicates the type of error that occurred.\n     * @property title\n     * @type String\n     */\n    this.title = title;\n\n    /**\n     * The verbose error message, containing details about the error.\n     * @property message\n     * @type String\n     */\n    this.message = message;\n\n    /**\n     * Additional data attached to an error.\n     * @property data\n     * @type {Object}\n     */\n    this.data = data;\n  }\n  var p = createjs.extend(ErrorEvent, createjs.Event);\n  p.clone = function () {\n    return new createjs.ErrorEvent(this.title, this.message, this.data);\n  };\n  createjs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n})();\n\n//##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function (scope) {\n  \"use strict\";\n\n  // constructor\n  /**\n   * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n   * @class ProgressEvent\n   * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n   * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n   * a percentage (between 0 and 1), it can be omitted.\n   * @todo Consider having this event be a \"fileprogress\" event as well\n   * @constructor\n   */\n  function ProgressEvent(loaded, total) {\n    this.Event_constructor(\"progress\");\n\n    /**\n     * The amount that has been loaded (out of a total amount)\n     * @property loaded\n     * @type {Number}\n     */\n    this.loaded = loaded;\n\n    /**\n     * The total \"size\" of the load.\n     * @property total\n     * @type {Number}\n     * @default 1\n     */\n    this.total = total == null ? 1 : total;\n\n    /**\n     * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n     * @property progress\n     * @type {Number}\n     * @default 0\n     */\n    this.progress = total == 0 ? 0 : this.loaded / this.total;\n  }\n  ;\n  var p = createjs.extend(ProgressEvent, createjs.Event);\n\n  /**\n   * Returns a clone of the ProgressEvent instance.\n   * @method clone\n   * @return {ProgressEvent} a clone of the Event instance.\n   **/\n  p.clone = function () {\n    return new createjs.ProgressEvent(this.loaded, this.total);\n  };\n  createjs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n})(window);\n\n//##############################################################################\n// LoadItem.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n   * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n   * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n   * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n   * @class LoadItem\n   * @constructor\n   * @since 0.6.0\n   */\n  function LoadItem() {\n    /**\n     * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n     * string (recommended), or an HTML tag.\n     * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n     * @property src\n     * @type {String}\n     * @default null\n     */\n    this.src = null;\n\n    /**\n     * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n     * be set manually. This is helpful in cases where a file does not have an extension.\n     * @property type\n     * @type {String}\n     * @default null\n     */\n    this.type = null;\n\n    /**\n     * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n     * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n     * @property id\n     * @type {String}\n     * @default null\n     */\n    this.id = null;\n\n    /**\n     * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n     * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n     * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n     * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n     * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n     * @property maintainOrder\n     * @type {Boolean}\n     * @default false\n     */\n    this.maintainOrder = false;\n\n    /**\n     * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n     * @property callback\n     * @type {String}\n     * @default null\n     */\n    this.callback = null;\n\n    /**\n     * An arbitrary data object, which is included with the loaded object.\n     * @property data\n     * @type {Object}\n     * @default null\n     */\n    this.data = null;\n\n    /**\n     * The request method used for HTTP calls. Both {{#crossLink \"Methods/GET:property\"}}{{/crossLink}} or\n     * {{#crossLink \"Methods/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n     * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n     * @property method\n     * @type {String}\n     * @default GET\n     */\n    this.method = createjs.Methods.GET;\n\n    /**\n     * An object hash of name/value pairs to send to the server.\n     * @property values\n     * @type {Object}\n     * @default null\n     */\n    this.values = null;\n\n    /**\n     * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n     * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n     * default headers by including them in your headers object.\n     * @property headers\n     * @type {Object}\n     * @default null\n     */\n    this.headers = null;\n\n    /**\n     * Enable credentials for XHR requests.\n     * @property withCredentials\n     * @type {Boolean}\n     * @default false\n     */\n    this.withCredentials = false;\n\n    /**\n     * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n     * based files (json, xml, text, css, js).\n     * @property mimeType\n     * @type {String}\n     * @default null\n     */\n    this.mimeType = null;\n\n    /**\n     * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n     * @property crossOrigin\n     * @type {boolean}\n     * @default Anonymous\n     */\n    this.crossOrigin = null;\n\n    /**\n     * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n     * (level one) loading, as XHR (level 2) provides its own timeout event.\n     * @property loadTimeout\n     * @type {Number}\n     * @default 8000 (8 seconds)\n     */\n    this.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n  }\n  ;\n  var p = LoadItem.prototype = {};\n  var s = LoadItem;\n\n  /**\n   * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n   * (level one) loading, as XHR (level 2) provides its own timeout event.\n   * @property LOAD_TIMEOUT_DEFAULT\n   * @type {number}\n   * @static\n   */\n  s.LOAD_TIMEOUT_DEFAULT = 8000;\n\n  /**\n   * Create a LoadItem.\n   * <ul>\n   *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n   *     <li>LoadItem instances are returned as-is</li>\n   *     <li>Objects are returned with any needed properties added</li>\n   * </ul>\n   * @method create\n   * @param {LoadItem|String|Object} value The load item value\n   * @returns {LoadItem|Object}\n   * @static\n   */\n  s.create = function (value) {\n    if (typeof value == \"string\") {\n      var item = new LoadItem();\n      item.src = value;\n      return item;\n    } else if (value instanceof s) {\n      return value;\n    } else if (value instanceof Object && value.src) {\n      if (value.loadTimeout == null) {\n        value.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n      }\n      return value;\n    } else {\n      throw new Error(\"Type not recognized.\");\n    }\n  };\n\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * <h4>Example</h4>\n   *\n   *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n   * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n  */\n  p.set = function (props) {\n    for (var n in props) {\n      this[n] = props[n];\n    }\n    return this;\n  };\n  createjs.LoadItem = s;\n})();\n\n//##############################################################################\n// Methods.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  var s = {};\n\n  /**\n   * Defines a POST request, use for a method value when loading data.\n   * @property POST\n   * @type {string}\n   * @default post\n   * @static\n   */\n  s.POST = \"POST\";\n\n  /**\n   * Defines a GET request, use for a method value when loading data.\n   * @property GET\n   * @type {string}\n   * @default get\n   * @static\n   */\n  s.GET = \"GET\";\n  createjs.Methods = s;\n})();\n\n//##############################################################################\n// Types.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  var s = {};\n\n  /**\n   * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n   * @property BINARY\n   * @type {String}\n   * @default binary\n   * @static\n   * @since 0.6.0\n   */\n  s.BINARY = \"binary\";\n\n  /**\n   * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n   * &lt;style&gt; tag when loaded with tags.\n   * @property CSS\n   * @type {String}\n   * @default css\n   * @static\n   * @since 0.6.0\n   */\n  s.CSS = \"css\";\n\n  /**\n   * The preload type for font files.\n   * @property FONT\n   * @type {String}\n   * @default font\n   * @static\n   * @since 0.9.0\n   */\n  s.FONT = \"font\";\n\n  /**\n   * The preload type for fonts specified with CSS (such as Google fonts)\n   * @property FONTCSS\n   * @type {String}\n   * @default fontcss\n   * @static\n   * @since 0.9.0\n   */\n  s.FONTCSS = \"fontcss\";\n\n  /**\n   * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n   * @property IMAGE\n   * @type {String}\n   * @default image\n   * @static\n   * @since 0.6.0\n   */\n  s.IMAGE = \"image\";\n\n  /**\n   * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n   * &lt;script&gt; tag.\n   *\n   * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n   * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n   * only tag-loaded scripts are injected.\n   * @property JAVASCRIPT\n   * @type {String}\n   * @default javascript\n   * @static\n   * @since 0.6.0\n   */\n  s.JAVASCRIPT = \"javascript\";\n\n  /**\n   * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n   * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n   * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n   * must contain a matching wrapper function.\n   * @property JSON\n   * @type {String}\n   * @default json\n   * @static\n   * @since 0.6.0\n   */\n  s.JSON = \"json\";\n\n  /**\n   * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n   * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n   * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n   * property is set to.\n   * @property JSONP\n   * @type {String}\n   * @default jsonp\n   * @static\n   * @since 0.6.0\n   */\n  s.JSONP = \"jsonp\";\n\n  /**\n   * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n   * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n   * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n   * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n   * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n   * @property MANIFEST\n   * @type {String}\n   * @default manifest\n   * @static\n   * @since 0.6.0\n   */\n  s.MANIFEST = \"manifest\";\n\n  /**\n   * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n   * &lt;audio&gt; tag.\n   * @property SOUND\n   * @type {String}\n   * @default sound\n   * @static\n   * @since 0.6.0\n   */\n  s.SOUND = \"sound\";\n\n  /**\n   * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n   * &lt;video&gt; tag.\n   * @property VIDEO\n   * @type {String}\n   * @default video\n   * @static\n   * @since 0.6.0\n   */\n  s.VIDEO = \"video\";\n\n  /**\n   * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n   * @property SPRITESHEET\n   * @type {String}\n   * @default spritesheet\n   * @static\n   * @since 0.6.0\n   */\n  s.SPRITESHEET = \"spritesheet\";\n\n  /**\n   * The preload type for SVG files.\n   * @property SVG\n   * @type {String}\n   * @default svg\n   * @static\n   * @since 0.6.0\n   */\n  s.SVG = \"svg\";\n\n  /**\n   * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n   * loaded as raw text.\n   * @property TEXT\n   * @type {String}\n   * @default text\n   * @static\n   * @since 0.6.0\n   */\n  s.TEXT = \"text\";\n\n  /**\n   * The preload type for xml files. XML is loaded into an XML document.\n   * @property XML\n   * @type {String}\n   * @default xml\n   * @static\n   * @since 0.6.0\n   */\n  s.XML = \"xml\";\n  createjs.Types = s;\n})();\n\n//##############################################################################\n// Elements.js\n//##############################################################################\n\n(function () {\n  /**\n   * Convenience methods for creating various elements used by PrelaodJS.\n   *\n   * @class DomUtils\n   */\n  var s = {};\n  s.a = function () {\n    return s.el(\"a\");\n  };\n  s.svg = function () {\n    return s.el(\"svg\");\n  };\n  s.object = function () {\n    return s.el(\"object\");\n  };\n  s.image = function () {\n    return s.el(\"image\");\n  };\n  s.img = function () {\n    return s.el(\"img\");\n  };\n  s.style = function () {\n    return s.el(\"style\");\n  };\n  s.link = function () {\n    return s.el(\"link\");\n  };\n  s.script = function () {\n    return s.el(\"script\");\n  };\n  s.audio = function () {\n    return s.el(\"audio\");\n  };\n  s.video = function () {\n    return s.el(\"video\");\n  };\n  s.text = function (value) {\n    return document.createTextNode(value);\n  };\n  s.el = function (name) {\n    return document.createElement(name);\n  };\n  createjs.Elements = s;\n})();\n\n//##############################################################################\n// DomUtils.js\n//##############################################################################\n\n(function () {\n  /**\n   * A few utilities for interacting with the dom.\n   * @class DomUtils\n   */\n  var s = {\n    container: null\n  };\n  s.appendToHead = function (el) {\n    s.getHead().appendChild(el);\n  };\n  s.appendToBody = function (el) {\n    if (s.container == null) {\n      s.container = document.createElement(\"div\");\n      s.container.id = \"preloadjs-container\";\n      var style = s.container.style;\n      style.visibility = \"hidden\";\n      style.position = \"absolute\";\n      style.width = s.container.style.height = \"10px\";\n      style.overflow = \"hidden\";\n      style.transform = style.msTransform = style.webkitTransform = style.oTransform = \"translate(-10px, -10px)\"; //LM: Not working\n      s.getBody().appendChild(s.container);\n    }\n    s.container.appendChild(el);\n  };\n  s.getHead = function () {\n    return document.head || document.getElementsByTagName(\"head\")[0];\n  };\n  s.getBody = function () {\n    return document.body || document.getElementsByTagName(\"body\")[0];\n  };\n  s.removeChild = function (el) {\n    if (el.parent) {\n      el.parent.removeChild(el);\n    }\n  };\n\n  /**\n   * Check if item is a valid HTMLImageElement\n   * @method isImageTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n  s.isImageTag = function (item) {\n    return item instanceof HTMLImageElement;\n  };\n\n  /**\n   * Check if item is a valid HTMLAudioElement\n   * @method isAudioTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n  s.isAudioTag = function (item) {\n    if (window.HTMLAudioElement) {\n      return item instanceof HTMLAudioElement;\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * Check if item is a valid HTMLVideoElement\n   * @method isVideoTag\n   * @param {Object} item\n   * @returns {Boolean}\n   * @static\n   */\n  s.isVideoTag = function (item) {\n    if (window.HTMLVideoElement) {\n      return item instanceof HTMLVideoElement;\n    } else {\n      return false;\n    }\n  };\n  createjs.DomUtils = s;\n})();\n\n//##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n(function () {\n  /**\n   * Utilities that assist with parsing load items, and determining file types, etc.\n   * @class RequestUtils\n   */\n  var s = {};\n\n  /**\n   * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n   * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n   * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n   * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n   * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n   * @method isBinary\n   * @param {String} type The item type.\n   * @return {Boolean} If the specified type is binary.\n   * @static\n   */\n  s.isBinary = function (type) {\n    switch (type) {\n      case createjs.Types.IMAGE:\n      case createjs.Types.BINARY:\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  /**\n   * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n   * @method isText\n   * @param {String} type The item type.\n   * @return {Boolean} If the specified type is text.\n   * @static\n   */\n  s.isText = function (type) {\n    switch (type) {\n      case createjs.Types.TEXT:\n      case createjs.Types.JSON:\n      case createjs.Types.MANIFEST:\n      case createjs.Types.XML:\n      case createjs.Types.CSS:\n      case createjs.Types.SVG:\n      case createjs.Types.JAVASCRIPT:\n      case createjs.Types.SPRITESHEET:\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  /**\n   * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n   * if it is an unusual extension.\n   * @method getTypeByExtension\n   * @param {String} extension The file extension to use to determine the load type.\n   * @return {String} The determined load type (for example, `createjs.Types.IMAGE`). Will return `null` if\n   * the type can not be determined by the extension.\n   * @static\n   */\n  s.getTypeByExtension = function (extension) {\n    if (extension == null) {\n      return createjs.Types.TEXT;\n    }\n    switch (extension.toLowerCase()) {\n      case \"jpeg\":\n      case \"jpg\":\n      case \"gif\":\n      case \"png\":\n      case \"webp\":\n      case \"bmp\":\n        return createjs.Types.IMAGE;\n      case \"ogg\":\n      case \"mp3\":\n      case \"webm\":\n        return createjs.Types.SOUND;\n      case \"mp4\":\n      case \"webm\":\n      case \"ts\":\n        return createjs.Types.VIDEO;\n      case \"json\":\n        return createjs.Types.JSON;\n      case \"xml\":\n        return createjs.Types.XML;\n      case \"css\":\n        return createjs.Types.CSS;\n      case \"js\":\n        return createjs.Types.JAVASCRIPT;\n      case 'svg':\n        return createjs.Types.SVG;\n      default:\n        return createjs.Types.TEXT;\n    }\n  };\n  createjs.RequestUtils = s;\n})();\n\n//##############################################################################\n// URLUtils.js\n//##############################################################################\n\n(function () {\n  /**\n   * Utilities that assist with parsing load items, and determining file types, etc.\n   * @class URLUtils\n   */\n  var s = {};\n\n  /**\n   * The Regular Expression used to test file URLS for an absolute path.\n   * @property ABSOLUTE_PATH\n   * @type {RegExp}\n   * @static\n   */\n  s.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n\n  /**\n   * The Regular Expression used to test file URLS for a relative path.\n   * @property RELATIVE_PATH\n   * @type {RegExp}\n   * @static\n   */\n  s.RELATIVE_PATT = /^[./]*?\\//i;\n\n  /**\n   * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n   * removed.\n   * @property EXTENSION_PATT\n   * @type {RegExp}\n   * @static\n   */\n  s.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n\n  /**\n   * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n   * <ul>\n   *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n   *     `//networkPath`)</li>\n   *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n   *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n   *     the file path is expected to follow the format `name.ext`.</li>\n   * </ul>\n   *\n   * @method parseURI\n   * @param {String} path\n   * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n   * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n   * \tas well as an optional 'extension` property, which is the lowercase extension.\n   *\n   * @static\n   */\n  s.parseURI = function (path) {\n    var info = {\n      absolute: false,\n      relative: false,\n      protocol: null,\n      hostname: null,\n      port: null,\n      pathname: null,\n      search: null,\n      hash: null,\n      host: null\n    };\n    if (path == null) {\n      return info;\n    }\n\n    // Inject the path parts.\n    var parser = createjs.Elements.a();\n    parser.href = path;\n    for (var n in info) {\n      if (n in parser) {\n        info[n] = parser[n];\n      }\n    }\n\n    // Drop the query string\n    var queryIndex = path.indexOf(\"?\");\n    if (queryIndex > -1) {\n      path = path.substr(0, queryIndex);\n    }\n\n    // Absolute\n    var match;\n    if (s.ABSOLUTE_PATT.test(path)) {\n      info.absolute = true;\n\n      // Relative\n    } else if (s.RELATIVE_PATT.test(path)) {\n      info.relative = true;\n    }\n\n    // Extension\n    if (match = path.match(s.EXTENSION_PATT)) {\n      info.extension = match[1].toLowerCase();\n    }\n    return info;\n  };\n\n  /**\n   * Formats an object into a query string for either a POST or GET request.\n   * @method formatQueryString\n   * @param {Object} data The data to convert to a query string.\n   * @param {Array} [query] Existing name/value pairs to append on to this query.\n   * @static\n   */\n  s.formatQueryString = function (data, query) {\n    if (data == null) {\n      throw new Error(\"You must specify data.\");\n    }\n    var params = [];\n    for (var n in data) {\n      params.push(n + \"=\" + escape(data[n]));\n    }\n    if (query) {\n      params = params.concat(query);\n    }\n    return params.join(\"&\");\n  };\n\n  /**\n   * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n   * @method buildURI\n   * @param {String} src The source path to add values to.\n   * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n   * path will be preserved.\n   * @returns {string} A formatted string that contains the path and the supplied parameters.\n   * @static\n   */\n  s.buildURI = function (src, data) {\n    if (data == null) {\n      return src;\n    }\n    var query = [];\n    var idx = src.indexOf(\"?\");\n    if (idx != -1) {\n      var q = src.slice(idx + 1);\n      query = query.concat(q.split(\"&\"));\n    }\n    if (idx != -1) {\n      return src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n    } else {\n      return src + \"?\" + this.formatQueryString(data, query);\n    }\n  };\n\n  /**\n   * @method isCrossDomain\n   * @param {LoadItem|Object} item A load item with a `src` property.\n   * @return {Boolean} If the load item is loading from a different domain than the current location.\n   * @static\n   */\n  s.isCrossDomain = function (item) {\n    var target = createjs.Elements.a();\n    target.href = item.src;\n    var host = createjs.Elements.a();\n    host.href = location.href;\n    var crossdomain = target.hostname != \"\" && (target.port != host.port || target.protocol != host.protocol || target.hostname != host.hostname);\n    return crossdomain;\n  };\n\n  /**\n   * @method isLocal\n   * @param {LoadItem|Object} item A load item with a `src` property\n   * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n   * well.\n   * @static\n   */\n  s.isLocal = function (item) {\n    var target = createjs.Elements.a();\n    target.href = item.src;\n    return target.hostname == \"\" && target.protocol == \"file:\";\n  };\n  createjs.URLUtils = s;\n})();\n\n//##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor\n  /**\n   * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n   * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n   * @class AbstractLoader\n   * @param {LoadItem|object|string} loadItem The item to be loaded.\n   * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n   * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n   * other, so this is a suggested directive.\n   * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n   * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n   * @extends EventDispatcher\n   */\n  function AbstractLoader(loadItem, preferXHR, type) {\n    this.EventDispatcher_constructor();\n\n    // public properties\n    /**\n     * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n     * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n     * @property loaded\n     * @type {Boolean}\n     * @default false\n     */\n    this.loaded = false;\n\n    /**\n     * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n     * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n     * instead.\n     * @property canceled\n     * @type {Boolean}\n     * @default false\n     * @readonly\n     */\n    this.canceled = false;\n\n    /**\n     * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n     *\n     * <h4>Example</h4>\n     *\n     *     var queue = new createjs.LoadQueue();\n     *     queue.loadFile(\"largeImage.png\");\n     *     queue.on(\"progress\", function() {\n     *         console.log(\"Progress:\", queue.progress, event.progress);\n     *     });\n     *\n     * @property progress\n     * @type {Number}\n     * @default 0\n     */\n    this.progress = 0;\n\n    /**\n     * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n     * supported types.\n     * @property type\n     * @type {String}\n     */\n    this.type = type;\n\n    /**\n     * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n     * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n     * can be overridden to provide custom formatting.\n     *\n     * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n     * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n     * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n     * called in the current scope, as well as the success and error callbacks.\n     *\n     * <h4>Example asynchronous resultFormatter</h4>\n     *\n     * \tfunction _formatResult(loader) {\n     * \t\treturn function(success, error) {\n     * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n     * \t\t\tsuccess(result);\n     * \t\t}\n     * \t}\n     * @property resultFormatter\n     * @type {Function}\n     * @default null\n     */\n    this.resultFormatter = null;\n\n    // protected properties\n    /**\n     * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n     * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n     * @property _item\n     * @type {LoadItem|Object}\n     * @private\n     */\n    if (loadItem) {\n      this._item = createjs.LoadItem.create(loadItem);\n    } else {\n      this._item = null;\n    }\n\n    /**\n     * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n     * @property _preferXHR\n     * @type {Boolean}\n     * @private\n     */\n    this._preferXHR = preferXHR;\n\n    /**\n     * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n     * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n     * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n     * @property _result\n     * @type {Object|String}\n     * @private\n     */\n    this._result = null;\n\n    /**\n     * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n     * method, and passing `true`.\n     * @property _rawResult\n     * @type {Object|String}\n     * @private\n     */\n    this._rawResult = null;\n\n    /**\n     * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n     * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n     * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n     * @property _loadItems\n     * @type {null}\n     * @protected\n     */\n    this._loadedItems = null;\n\n    /**\n     * The attribute the items loaded using tags use for the source.\n     * @type {string}\n     * @default null\n     * @private\n     */\n    this._tagSrcAttribute = null;\n\n    /**\n     * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n     * @property _tag\n     * @type {Object}\n     * @private\n     */\n    this._tag = null;\n  }\n  ;\n  var p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n  var s = AbstractLoader;\n\n  // Remove these @deprecated properties after 1.0\n  try {\n    Object.defineProperties(s, {\n      POST: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.POST;\n        }, \"AbstractLoader.POST\")\n      },\n      GET: {\n        get: createjs.deprecate(function () {\n          return createjs.Methods.GET;\n        }, \"AbstractLoader.GET\")\n      },\n      BINARY: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.BINARY;\n        }, \"AbstractLoader.BINARY\")\n      },\n      CSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.CSS;\n        }, \"AbstractLoader.CSS\")\n      },\n      FONT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONT;\n        }, \"AbstractLoader.FONT\")\n      },\n      FONTCSS: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.FONTCSS;\n        }, \"AbstractLoader.FONTCSS\")\n      },\n      IMAGE: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.IMAGE;\n        }, \"AbstractLoader.IMAGE\")\n      },\n      JAVASCRIPT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JAVASCRIPT;\n        }, \"AbstractLoader.JAVASCRIPT\")\n      },\n      JSON: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSON;\n        }, \"AbstractLoader.JSON\")\n      },\n      JSONP: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.JSONP;\n        }, \"AbstractLoader.JSONP\")\n      },\n      MANIFEST: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.MANIFEST;\n        }, \"AbstractLoader.MANIFEST\")\n      },\n      SOUND: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SOUND;\n        }, \"AbstractLoader.SOUND\")\n      },\n      VIDEO: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.VIDEO;\n        }, \"AbstractLoader.VIDEO\")\n      },\n      SPRITESHEET: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SPRITESHEET;\n        }, \"AbstractLoader.SPRITESHEET\")\n      },\n      SVG: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.SVG;\n        }, \"AbstractLoader.SVG\")\n      },\n      TEXT: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.TEXT;\n        }, \"AbstractLoader.TEXT\")\n      },\n      XML: {\n        get: createjs.deprecate(function () {\n          return createjs.Types.XML;\n        }, \"AbstractLoader.XML\")\n      }\n    });\n  } catch (e) {}\n\n  // Events\n  /**\n   * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n   * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n   * @event progress\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n   * @event loadstart\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.3.1\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n   * @event complete\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n   * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n   * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n   * @event error\n   * @since 0.3.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n   * This enables loaders to maintain internal queues, and surface file load errors.\n   * @event fileerror\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"fileerror\")\n   * @param {LoadItem|object} The item that encountered the error\n   * @since 0.6.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n   * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n   * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n   * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n   * @event fileload\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"fileload\")\n   * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n   * object will contain that value as a `src` property.\n   * @param {Object} result The HTML tag or parsed result of the loaded item.\n   * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n   * to a usable object.\n   * @since 0.6.0\n   */\n\n  /**\n   * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n   * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n   * @event initialize\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type (\"initialize\")\n   * @param {AbstractLoader} loader The loader that has been initialized.\n   */\n\n  /**\n   * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n   * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n   * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n   * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n   * @method getItem\n   * @return {Object} The manifest item that this loader is responsible for loading.\n   * @since 0.6.0\n   */\n  p.getItem = function () {\n    return this._item;\n  };\n\n  /**\n   * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n   * event is dispatched.\n   * @method getResult\n   * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n   * data (if it exists).\n   * @return {Object}\n   * @since 0.6.0\n   */\n  p.getResult = function (raw) {\n    return raw ? this._rawResult : this._result;\n  };\n\n  /**\n   * Return the `tag` this object creates or uses for loading.\n   * @method getTag\n   * @return {Object} The tag instance\n   * @since 0.6.0\n   */\n  p.getTag = function () {\n    return this._tag;\n  };\n\n  /**\n   * Set the `tag` this item uses for loading.\n   * @method setTag\n   * @param {Object} tag The tag instance\n   * @since 0.6.0\n   */\n  p.setTag = function (tag) {\n    this._tag = tag;\n  };\n\n  /**\n   * Begin loading the item. This method is required when using a loader by itself.\n   *\n   * <h4>Example</h4>\n   *\n   *      var queue = new createjs.LoadQueue();\n   *      queue.on(\"complete\", handleComplete);\n   *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n   *      queue.load();\n   *\n   * @method load\n   */\n  p.load = function () {\n    this._createRequest();\n    this._request.on(\"complete\", this, this);\n    this._request.on(\"progress\", this, this);\n    this._request.on(\"loadStart\", this, this);\n    this._request.on(\"abort\", this, this);\n    this._request.on(\"timeout\", this, this);\n    this._request.on(\"error\", this, this);\n    var evt = new createjs.Event(\"initialize\");\n    evt.loader = this._request;\n    this.dispatchEvent(evt);\n    this._request.load();\n  };\n\n  /**\n   * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n   * the background), but events will not longer be dispatched.\n   * @method cancel\n   */\n  p.cancel = function () {\n    this.canceled = true;\n    this.destroy();\n  };\n\n  /**\n   * Clean up the loader.\n   * @method destroy\n   */\n  p.destroy = function () {\n    if (this._request) {\n      this._request.removeAllEventListeners();\n      this._request.destroy();\n    }\n    this._request = null;\n    this._item = null;\n    this._rawResult = null;\n    this._result = null;\n    this._loadItems = null;\n    this.removeAllEventListeners();\n  };\n\n  /**\n   * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n   * to expose items it loads internally.\n   * @method getLoadedItems\n   * @return {Array} A list of the items loaded by the loader.\n   * @since 0.6.0\n   */\n  p.getLoadedItems = function () {\n    return this._loadedItems;\n  };\n\n  // Private methods\n  /**\n   * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n   * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n   * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n   * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n   * @method _createRequest\n   * @protected\n   */\n  p._createRequest = function () {\n    if (!this._preferXHR) {\n      this._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n    } else {\n      this._request = new createjs.XHRRequest(this._item);\n    }\n  };\n\n  /**\n   * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n   * by loaders that require tag loading.\n   * @method _createTag\n   * @param {String} src The tag source\n   * @return {HTMLElement} The tag that was created\n   * @protected\n   */\n  p._createTag = function (src) {\n    return null;\n  };\n\n  /**\n   * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendLoadStart\n   * @protected\n   */\n  p._sendLoadStart = function () {\n    if (this._isCanceled()) {\n      return;\n    }\n    this.dispatchEvent(\"loadstart\");\n  };\n\n  /**\n   * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n   * @method _sendProgress\n   * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n   * and <code>total</code> properties.\n   * @protected\n   */\n  p._sendProgress = function (value) {\n    if (this._isCanceled()) {\n      return;\n    }\n    var event = null;\n    if (typeof value == \"number\") {\n      this.progress = value;\n      event = new createjs.ProgressEvent(this.progress);\n    } else {\n      event = value;\n      this.progress = value.loaded / value.total;\n      event.progress = this.progress;\n      if (isNaN(this.progress) || this.progress == Infinity) {\n        this.progress = 0;\n      }\n    }\n    this.hasEventListener(\"progress\") && this.dispatchEvent(event);\n  };\n\n  /**\n   * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n   * @method _sendComplete\n   * @protected\n   */\n  p._sendComplete = function () {\n    if (this._isCanceled()) {\n      return;\n    }\n    this.loaded = true;\n    var event = new createjs.Event(\"complete\");\n    event.rawResult = this._rawResult;\n    if (this._result != null) {\n      event.result = this._result;\n    }\n    this.dispatchEvent(event);\n  };\n\n  /**\n   * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n   * event for details on the event payload.\n   * @method _sendError\n   * @param {ErrorEvent} event The event object containing specific error properties.\n   * @protected\n   */\n  p._sendError = function (event) {\n    if (this._isCanceled() || !this.hasEventListener(\"error\")) {\n      return;\n    }\n    if (event == null) {\n      event = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n    }\n\n    this.dispatchEvent(event);\n  };\n\n  /**\n   * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n   * do not cause issues after the queue has been cleaned up.\n   * @method _isCanceled\n   * @return {Boolean} If the loader has been canceled.\n   * @protected\n   */\n  p._isCanceled = function () {\n    if (window.createjs == null || this.canceled) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n   * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n   * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n   * @property resultFormatter\n   * @type Function\n   * @return {Object} The formatted result\n   * @since 0.6.0\n   */\n  p.resultFormatter = null;\n\n  /**\n   * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n   * this method can be overridden for custom behaviours.\n   * @method handleEvent\n   * @param {Event} event The event that the internal request dispatches.\n   * @protected\n   * @since 0.6.0\n   */\n  p.handleEvent = function (event) {\n    switch (event.type) {\n      case \"complete\":\n        this._rawResult = event.target._response;\n        var result = this.resultFormatter && this.resultFormatter(this);\n        // The resultFormatter is asynchronous\n        if (result instanceof Function) {\n          result.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this));\n          // The result formatter is synchronous\n        } else {\n          this._result = result || this._rawResult;\n          this._sendComplete();\n        }\n        break;\n      case \"progress\":\n        this._sendProgress(event);\n        break;\n      case \"error\":\n        this._sendError(event);\n        break;\n      case \"loadstart\":\n        this._sendLoadStart();\n        break;\n      case \"abort\":\n      case \"timeout\":\n        if (!this._isCanceled()) {\n          this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n        }\n        break;\n    }\n  };\n\n  /**\n   * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n   * functions.\n   * @method _resultFormatSuccess\n   * @param {Object} result The formatted result\n   * @private\n   */\n  p._resultFormatSuccess = function (result) {\n    this._result = result;\n    this._sendComplete();\n  };\n\n  /**\n   * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n   * functions.\n   * @method _resultFormatSuccess\n   * @param {Object} error The error event\n   * @private\n   */\n  p._resultFormatFailed = function (event) {\n    this._sendError(event);\n  };\n\n  /**\n   * @method toString\n   * @return {String} a string representation of the instance.\n   */\n  p.toString = function () {\n    return \"[PreloadJS AbstractLoader]\";\n  };\n  createjs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n})();\n\n//##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor\n  /**\n   * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n   * handle HTML media elements, such as Video and Audio.\n   * @class AbstractMediaLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n   * @extends AbstractLoader\n   * @constructor\n   */\n  function AbstractMediaLoader(loadItem, preferXHR, type) {\n    this.AbstractLoader_constructor(loadItem, preferXHR, type);\n\n    // public properties\n    this.resultFormatter = this._formatResult;\n\n    // protected properties\n    this._tagSrcAttribute = \"src\";\n    this.on(\"initialize\", this._updateXHR, this);\n  }\n  ;\n  var p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);\n\n  // static properties\n  // public methods\n  p.load = function () {\n    // TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n    if (!this._tag) {\n      this._tag = this._createTag(this._item.src);\n    }\n    this._tag.preload = \"auto\";\n    this._tag.load();\n    this.AbstractLoader_load();\n  };\n\n  // protected methods\n  /**\n   * Creates a new tag for loading if it doesn't exist yet.\n   * @method _createTag\n   * @private\n   */\n  p._createTag = function () {};\n  p._createRequest = function () {\n    if (!this._preferXHR) {\n      this._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n    } else {\n      this._request = new createjs.XHRRequest(this._item);\n    }\n  };\n\n  // protected methods\n  /**\n   * Before the item loads, set its mimeType and responseType.\n   * @property _updateXHR\n   * @param {Event} event\n   * @private\n   */\n  p._updateXHR = function (event) {\n    // Only exists for XHR\n    if (event.loader.setResponseType) {\n      event.loader.setResponseType(\"blob\");\n    }\n  };\n\n  /**\n   * The result formatter for media files.\n   * @method _formatResult\n   * @param {AbstractLoader} loader\n   * @returns {HTMLVideoElement|HTMLAudioElement}\n   * @private\n   */\n  p._formatResult = function (loader) {\n    this._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n    this._tag.onstalled = null;\n    if (this._preferXHR) {\n      var URL = window.URL || window.webkitURL;\n      var result = loader.getResult(true);\n      loader.getTag().src = URL.createObjectURL(result);\n    }\n    return loader.getTag();\n  };\n  createjs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n})();\n\n//##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n   * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n   * hood to get data.\n   * @class AbstractRequest\n   * @param {LoadItem} item\n   * @constructor\n   */\n  var AbstractRequest = function (item) {\n    this._item = item;\n  };\n  var p = createjs.extend(AbstractRequest, createjs.EventDispatcher);\n\n  // public methods\n  /**\n   * Begin a load.\n   * @method load\n   */\n  p.load = function () {};\n\n  /**\n   * Clean up a request.\n   * @method destroy\n   */\n  p.destroy = function () {};\n\n  /**\n   * Cancel an in-progress request.\n   * @method cancel\n   */\n  p.cancel = function () {};\n  createjs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n})();\n\n//##############################################################################\n// TagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor\n  /**\n   * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n   * @class TagRequest\n   * @param {LoadItem} loadItem\n   * @param {HTMLElement} tag\n   * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n   */\n  function TagRequest(loadItem, tag, srcAttribute) {\n    this.AbstractRequest_constructor(loadItem);\n\n    // protected properties\n    /**\n     * The HTML tag instance that is used to load.\n     * @property _tag\n     * @type {HTMLElement}\n     * @protected\n     */\n    this._tag = tag;\n\n    /**\n     * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n     * @property _tagSrcAttribute\n     * @type {String}\n     * @protected\n     */\n    this._tagSrcAttribute = srcAttribute;\n\n    /**\n     * A method closure used for handling the tag load event.\n     * @property _loadedHandler\n     * @type {Function}\n     * @private\n     */\n    this._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\n    /**\n     * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n     * @property _addedToDOM\n     * @type {Boolean}\n     * @private\n     */\n    this._addedToDOM = false;\n  }\n  ;\n  var p = createjs.extend(TagRequest, createjs.AbstractRequest);\n\n  // public methods\n  p.load = function () {\n    this._tag.onload = createjs.proxy(this._handleTagComplete, this);\n    this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n    this._tag.onerror = createjs.proxy(this._handleError, this);\n    var evt = new createjs.Event(\"initialize\");\n    evt.loader = this._tag;\n    this.dispatchEvent(evt);\n    this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    this._tag[this._tagSrcAttribute] = this._item.src;\n\n    // wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n    if (this._tag.parentNode == null) {\n      createjs.DomUtils.appendToBody(this._tag);\n      this._addedToDOM = true;\n    }\n  };\n  p.destroy = function () {\n    this._clean();\n    this._tag = null;\n    this.AbstractRequest_destroy();\n  };\n\n  // private methods\n  /**\n   * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n   * and LINK tags), but other cases may exist.\n   * @method _handleReadyStateChange\n   * @private\n   */\n  p._handleReadyStateChange = function () {\n    clearTimeout(this._loadTimeout);\n    // This is strictly for tags in browsers that do not support onload.\n    var tag = this._tag;\n\n    // Complete is for old IE support.\n    if (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n      this._handleTagComplete();\n    }\n  };\n\n  /**\n   * Handle any error events from the tag.\n   * @method _handleError\n   * @protected\n   */\n  p._handleError = function () {\n    this._clean();\n    this.dispatchEvent(\"error\");\n  };\n\n  /**\n   * Handle the tag's onload callback.\n   * @method _handleTagComplete\n   * @private\n   */\n  p._handleTagComplete = function () {\n    this._rawResult = this._tag;\n    this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n    this._clean();\n    this.dispatchEvent(\"complete\");\n  };\n\n  /**\n   * The tag request has not loaded within the time specified in loadTimeout.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n  p._handleTimeout = function () {\n    this._clean();\n    this.dispatchEvent(new createjs.Event(\"timeout\"));\n  };\n\n  /**\n   * Remove event listeners, but don't destroy the request object\n   * @method _clean\n   * @private\n   */\n  p._clean = function () {\n    this._tag.onload = null;\n    this._tag.onreadystatechange = null;\n    this._tag.onerror = null;\n    if (this._addedToDOM && this._tag.parentNode != null) {\n      this._tag.parentNode.removeChild(this._tag);\n    }\n    clearTimeout(this._loadTimeout);\n  };\n\n  /**\n   * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n   * that is already in a load, but not complete.\n   * @method _handleStalled\n   * @private\n   */\n  p._handleStalled = function () {\n    //Ignore, let the timeout take care of it. Sometimes its not really stopped.\n  };\n  createjs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n})();\n\n//##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor\n  /**\n   * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n   * @class MediaTagRequest\n   * @param {LoadItem} loadItem\n   * @param {HTMLAudioElement|HTMLVideoElement} tag\n   * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n   * @constructor\n   */\n  function MediaTagRequest(loadItem, tag, srcAttribute) {\n    this.AbstractRequest_constructor(loadItem);\n\n    // protected properties\n    this._tag = tag;\n    this._tagSrcAttribute = srcAttribute;\n    this._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n  }\n  ;\n  var p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n  var s = MediaTagRequest;\n\n  // public methods\n  p.load = function () {\n    var sc = createjs.proxy(this._handleStalled, this);\n    this._stalledCallback = sc;\n    var pc = createjs.proxy(this._handleProgress, this);\n    this._handleProgress = pc;\n    this._tag.addEventListener(\"stalled\", sc);\n    this._tag.addEventListener(\"progress\", pc);\n\n    // This will tell us when audio is buffered enough to play through, but not when its loaded.\n    // The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n    this._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n    this.TagRequest_load();\n  };\n\n  // private methods\n  p._handleReadyStateChange = function () {\n    clearTimeout(this._loadTimeout);\n    // This is strictly for tags in browsers that do not support onload.\n    var tag = this._tag;\n\n    // Complete is for old IE support.\n    if (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n      this._handleTagComplete();\n    }\n  };\n  p._handleStalled = function () {\n    //Ignore, let the timeout take care of it. Sometimes its not really stopped.\n  };\n\n  /**\n   * An XHR request has reported progress.\n   * @method _handleProgress\n   * @param {Object} event The XHR progress event.\n   * @private\n   */\n  p._handleProgress = function (event) {\n    if (!event || event.loaded > 0 && event.total == 0) {\n      return; // Sometimes we get no \"total\", so just ignore the progress event.\n    }\n\n    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n    this.dispatchEvent(newEvent);\n  };\n\n  // protected methods\n  p._clean = function () {\n    this._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n    this._tag.removeEventListener(\"stalled\", this._stalledCallback);\n    this._tag.removeEventListener(\"progress\", this._progressCallback);\n    this.TagRequest__clean();\n  };\n  createjs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n})();\n\n//##############################################################################\n// XHRRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor\n  /**\n   * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n   * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n   * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n   * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n   * cross-domain loading.\n   * @class XHRRequest\n   * @constructor\n   * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n   * for an overview of supported file properties.\n   * @extends AbstractLoader\n   */\n  function XHRRequest(item) {\n    this.AbstractRequest_constructor(item);\n\n    // protected properties\n    /**\n     * A reference to the XHR request used to load the content.\n     * @property _request\n     * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n     * @private\n     */\n    this._request = null;\n\n    /**\n     * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n     * typically IE9).\n     * @property _loadTimeout\n     * @type {Number}\n     * @private\n     */\n    this._loadTimeout = null;\n\n    /**\n     * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n     * the version, so we use capabilities to make a best guess.\n     * @property _xhrLevel\n     * @type {Number}\n     * @default 1\n     * @private\n     */\n    this._xhrLevel = 1;\n\n    /**\n     * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n     * null until the file is loaded.\n     * @property _response\n     * @type {mixed}\n     * @private\n     */\n    this._response = null;\n\n    /**\n     * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n     * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n     * want to access the raw content as it was loaded.\n     * @property _rawResponse\n     * @type {String|Object}\n     * @private\n     */\n    this._rawResponse = null;\n    this._canceled = false;\n\n    // Setup our event handlers now.\n    this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n    this._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n    this._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n    this._handleErrorProxy = createjs.proxy(this._handleError, this);\n    this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n    this._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n    this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n    if (!this._createXHR(item)) {\n      //TODO: Throw error?\n    }\n  }\n  ;\n  var p = createjs.extend(XHRRequest, createjs.AbstractRequest);\n\n  // static properties\n  /**\n   * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n   * @property ACTIVEX_VERSIONS\n   * @type {Array}\n   * @since 0.4.2\n   * @private\n   */\n  XHRRequest.ACTIVEX_VERSIONS = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.5.0\", \"Msxml2.XMLHTTP.4.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n\n  // Public methods\n  /**\n   * Look up the loaded result.\n   * @method getResult\n   * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n   * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n   * returned instead.\n   * @return {Object} A result object containing the content that was loaded, such as:\n   * <ul>\n   *      <li>An image tag (&lt;image /&gt;) for images</li>\n   *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n   *      HTML head.</li>\n   *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n   *      <li>Raw text for TEXT</li>\n   *      <li>A formatted JavaScript object defined by JSON</li>\n   *      <li>An XML document</li>\n   *      <li>An binary arraybuffer loaded by XHR</li>\n   * </ul>\n   * Note that if a raw result is requested, but not found, the result will be returned instead.\n   */\n  p.getResult = function (raw) {\n    if (raw && this._rawResponse) {\n      return this._rawResponse;\n    }\n    return this._response;\n  };\n\n  // Overrides abstract method in AbstractRequest\n  p.cancel = function () {\n    this.canceled = true;\n    this._clean();\n    this._request.abort();\n  };\n\n  // Overrides abstract method in AbstractLoader\n  p.load = function () {\n    if (this._request == null) {\n      this._handleError();\n      return;\n    }\n\n    //Events\n    if (this._request.addEventListener != null) {\n      this._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n      this._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n      this._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n      this._request.addEventListener(\"error\", this._handleErrorProxy, false);\n      this._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false);\n\n      // Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n      this._request.addEventListener(\"load\", this._handleLoadProxy, false);\n      this._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n    } else {\n      // IE9 support\n      this._request.onloadstart = this._handleLoadStartProxy;\n      this._request.onprogress = this._handleProgressProxy;\n      this._request.onabort = this._handleAbortProxy;\n      this._request.onerror = this._handleErrorProxy;\n      this._request.ontimeout = this._handleTimeoutProxy;\n\n      // Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n      this._request.onload = this._handleLoadProxy;\n      this._request.onreadystatechange = this._handleReadyStateChangeProxy;\n    }\n\n    // Set up a timeout if we don't have XHR2\n    if (this._xhrLevel == 1) {\n      this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n    }\n\n    // Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n    try {\n      if (!this._item.values) {\n        this._request.send();\n      } else {\n        this._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n      }\n    } catch (error) {\n      this.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n    }\n  };\n  p.setResponseType = function (type) {\n    // Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n    if (type === 'blob') {\n      type = window.URL ? 'blob' : 'arraybuffer';\n      this._responseType = type;\n    }\n    this._request.responseType = type;\n  };\n\n  /**\n   * Get all the response headers from the XmlHttpRequest.\n   *\n   * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n   * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n   * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n   * pair.\n   * @method getAllResponseHeaders\n   * @return {String}\n   * @since 0.4.1\n   */\n  p.getAllResponseHeaders = function () {\n    if (this._request.getAllResponseHeaders instanceof Function) {\n      return this._request.getAllResponseHeaders();\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get a specific response header from the XmlHttpRequest.\n   *\n   * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n   * header, unless the field name is Set-Cookie or Set-Cookie2.\n   * @method getResponseHeader\n   * @param {String} header The header name to retrieve.\n   * @return {String}\n   * @since 0.4.1\n   */\n  p.getResponseHeader = function (header) {\n    if (this._request.getResponseHeader instanceof Function) {\n      return this._request.getResponseHeader(header);\n    } else {\n      return null;\n    }\n  };\n\n  // protected methods\n  /**\n   * The XHR request has reported progress.\n   * @method _handleProgress\n   * @param {Object} event The XHR progress event.\n   * @private\n   */\n  p._handleProgress = function (event) {\n    if (!event || event.loaded > 0 && event.total == 0) {\n      return; // Sometimes we get no \"total\", so just ignore the progress event.\n    }\n\n    var newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n    this.dispatchEvent(newEvent);\n  };\n\n  /**\n   * The XHR request has reported a load start.\n   * @method _handleLoadStart\n   * @param {Object} event The XHR loadStart event.\n   * @private\n   */\n  p._handleLoadStart = function (event) {\n    clearTimeout(this._loadTimeout);\n    this.dispatchEvent(\"loadstart\");\n  };\n\n  /**\n   * The XHR request has reported an abort event.\n   * @method handleAbort\n   * @param {Object} event The XHR abort event.\n   * @private\n   */\n  p._handleAbort = function (event) {\n    this._clean();\n    this.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n  };\n\n  /**\n   * The XHR request has reported an error event.\n   * @method _handleError\n   * @param {Object} event The XHR error event.\n   * @private\n   */\n  p._handleError = function (event) {\n    this._clean();\n    this.dispatchEvent(new createjs.ErrorEvent(event.message));\n  };\n\n  /**\n   * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n   * event, so we must monitor the readyStateChange to determine if the file is loaded.\n   * @method _handleReadyStateChange\n   * @param {Object} event The XHR readyStateChange event.\n   * @private\n   */\n  p._handleReadyStateChange = function (event) {\n    if (this._request.readyState == 4) {\n      this._handleLoad();\n    }\n  };\n\n  /**\n   * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n   * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n   *\n   * Note that This method uses {{#crossLink \"_checkError\"}}{{/crossLink}} to determine if the server has returned an\n   * error code.\n   * @method _handleLoad\n   * @param {Object} event The XHR load event.\n   * @private\n   */\n  p._handleLoad = function (event) {\n    if (this.loaded) {\n      return;\n    }\n    this.loaded = true;\n    var error = this._checkError();\n    if (error) {\n      this._handleError(error);\n      return;\n    }\n    this._response = this._getResponse();\n    // Convert arraybuffer back to blob\n    if (this._responseType === 'arraybuffer') {\n      try {\n        this._response = new Blob([this._response]);\n      } catch (e) {\n        // Fallback to use BlobBuilder if Blob constructor is not supported\n        // Tested on Android 2.3 ~ 4.2 and iOS5 safari\n        window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n        if (e.name === 'TypeError' && window.BlobBuilder) {\n          var builder = new BlobBuilder();\n          builder.append(this._response);\n          this._response = builder.getBlob();\n        }\n      }\n    }\n    this._clean();\n    this.dispatchEvent(new createjs.Event(\"complete\"));\n  };\n\n  /**\n   * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n   * callback.\n   * @method _handleTimeout\n   * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n   * @private\n   */\n  p._handleTimeout = function (event) {\n    this._clean();\n    this.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n  };\n\n  // Protected\n  /**\n   * Determine if there is an error in the current load.\n   * Currently this checks the status of the request for problem codes, and not actual response content:\n   * <ul>\n   *     <li>Status codes between 400 and 599 (HTTP error range)</li>\n   *     <li>A status of 0, but *only when the application is running on a server*. If the application is running\n   *     on `file:`, then it may incorrectly treat an error on local (or embedded applications) as a successful\n   *     load.</li>\n   * </ul>\n   * @method _checkError\n   * @return {Error} An error with the status code in the `message` argument.\n   * @private\n   */\n  p._checkError = function () {\n    var status = parseInt(this._request.status);\n    if (status >= 400 && status <= 599) {\n      return new Error(status);\n    } else if (status == 0) {\n      if (/^https?:/.test(location.protocol)) {\n        return new Error(0);\n      }\n      return null; // Likely an embedded app.\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n   * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n   * @method _getResponse\n   * @private\n   */\n  p._getResponse = function () {\n    if (this._response != null) {\n      return this._response;\n    }\n    if (this._request.response != null) {\n      return this._request.response;\n    }\n\n    // Android 2.2 uses .responseText\n    try {\n      if (this._request.responseText != null) {\n        return this._request.responseText;\n      }\n    } catch (e) {}\n\n    // When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n    try {\n      if (this._request.responseXML != null) {\n        return this._request.responseXML;\n      }\n    } catch (e) {}\n    return null;\n  };\n\n  /**\n   * Create an XHR request. Depending on a number of factors, we get totally different results.\n   * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n   *      <li>XMLHttpRequest are created when available.</li>\n   *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n   *      <li>Text requests override the mime type if possible</li>\n   *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n   *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n   * @method _createXHR\n   * @param {Object} item The requested item that is being loaded.\n   * @return {Boolean} If an XHR request or equivalent was successfully created.\n   * @private\n   */\n  p._createXHR = function (item) {\n    // Check for cross-domain loads. We can't fully support them, but we can try.\n    var crossdomain = createjs.URLUtils.isCrossDomain(item);\n    var headers = {};\n\n    // Create the request. Fallback to whatever support we have.\n    var req = null;\n    if (window.XMLHttpRequest) {\n      req = new XMLHttpRequest();\n      // This is 8 or 9, so use XDomainRequest instead.\n      if (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n        req = new XDomainRequest();\n      }\n    } else {\n      // Old IE versions use a different approach\n      for (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n        var axVersion = s.ACTIVEX_VERSIONS[i];\n        try {\n          req = new ActiveXObject(axVersion);\n          break;\n        } catch (e) {}\n      }\n      if (req == null) {\n        return false;\n      }\n    }\n\n    // Default to utf-8 for Text requests.\n    if (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n      item.mimeType = \"text/plain; charset=utf-8\";\n    }\n\n    // IE9 doesn't support overrideMimeType(), so we need to check for it.\n    if (item.mimeType && req.overrideMimeType) {\n      req.overrideMimeType(item.mimeType);\n    }\n\n    // Determine the XHR level\n    this._xhrLevel = typeof req.responseType === \"string\" ? 2 : 1;\n    var src = null;\n    if (item.method == createjs.Methods.GET) {\n      src = createjs.URLUtils.buildURI(item.src, item.values);\n    } else {\n      src = item.src;\n    }\n\n    // Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n    req.open(item.method || createjs.Methods.GET, src, true);\n    if (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n      headers[\"Origin\"] = location.origin;\n    }\n\n    // To send data we need to set the Content-type header)\n    if (item.values && item.method == createjs.Methods.POST) {\n      headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    }\n    if (!crossdomain && !headers[\"X-Requested-With\"]) {\n      headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n    }\n    if (item.headers) {\n      for (var n in item.headers) {\n        headers[n] = item.headers[n];\n      }\n    }\n    for (n in headers) {\n      req.setRequestHeader(n, headers[n]);\n    }\n    if (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n      req.withCredentials = item.withCredentials;\n    }\n    this._request = req;\n    return true;\n  };\n\n  /**\n   * A request has completed (or failed or canceled), and needs to be disposed.\n   * @method _clean\n   * @private\n   */\n  p._clean = function () {\n    clearTimeout(this._loadTimeout);\n    if (this._request.removeEventListener != null) {\n      this._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n      this._request.removeEventListener(\"progress\", this._handleProgressProxy);\n      this._request.removeEventListener(\"abort\", this._handleAbortProxy);\n      this._request.removeEventListener(\"error\", this._handleErrorProxy);\n      this._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n      this._request.removeEventListener(\"load\", this._handleLoadProxy);\n      this._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n    } else {\n      this._request.onloadstart = null;\n      this._request.onprogress = null;\n      this._request.onabort = null;\n      this._request.onerror = null;\n      this._request.ontimeout = null;\n      this._request.onload = null;\n      this._request.onreadystatechange = null;\n    }\n  };\n  p.toString = function () {\n    return \"[PreloadJS XHRRequest]\";\n  };\n  createjs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n})();\n\n//##############################################################################\n// SoundLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor\n  /**\n   * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n   * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n   * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n   * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n   * @class SoundLoader\n   * @param {LoadItem|Object} loadItem\n   * @param {Boolean} preferXHR\n   * @extends AbstractMediaLoader\n   * @constructor\n   */\n  function SoundLoader(loadItem, preferXHR) {\n    this.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND);\n\n    // protected properties\n    if (createjs.DomUtils.isAudioTag(loadItem)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n      this._tag = loadItem;\n    } else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n      this._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n    }\n    if (this._tag != null) {\n      this._preferXHR = false;\n    }\n  }\n  ;\n  var p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n  var s = SoundLoader;\n\n  // static methods\n  /**\n   * Determines if the loader can load a specific item. This loader can only load items that are of type\n   * {{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}.\n   * @method canLoadItem\n   * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n   * @returns {Boolean} Whether the loader can load the item.\n   * @static\n   */\n  s.canLoadItem = function (item) {\n    return item.type == createjs.Types.SOUND;\n  };\n\n  // protected methods\n  p._createTag = function (src) {\n    var tag = createjs.Elements.audio();\n    tag.autoplay = false;\n    tag.preload = \"none\";\n\n    //LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n    tag.src = src;\n    return tag;\n  };\n  createjs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n})();\n\n//##############################################################################\n// AudioSprite.js\n//##############################################################################\n\n//  NOTE this is \"Class\" is purely to document audioSprite Setup and usage.\n\n/**\n * <strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\n * out here for quick reference.</strong>\n *\n * Audio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\n * Audio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\n * time. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\n * accidentally playing bits of the neighbouring clips.\n *\n * <strong>Benefits of Audio Sprites:</strong>\n * <ul>\n *     <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n *     <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n *     sounds that could be loaded at once.</li>\n *     <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\n * where the network round trip for each file can add significant latency.</li>\n * </ul>\n *\n * <strong>Drawbacks of Audio Sprites</strong>\n * <ul>\n *     <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n * \t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n * \t\tit.</li>\n *     <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n *     (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n *     `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n *     sounds, the audio may not yet have downloaded fully.</li>\n *     <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n * \t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n * </ul>\n *\n * <h4>Example</h4>\n *\n *\t\tcreatejs.Sound.initializeDefaultPlugins();\n *\t\tvar assetsPath = \"./assets/\";\n *\t\tvar sounds = [{\n *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n *\t\t\t\taudioSprite: [\n *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n *\t\t\t\t]}\n *\t\t\t}\n *\t\t];\n *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n *\t\t// after load is complete\n *\t\tcreatejs.Sound.play(\"sound2\");\n *\n * You can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n *\n * \t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n *\n * The excellent CreateJS community has created a tool to create audio sprites, available at\n * <a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\n * as well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\n * to SoundJS format.\n *\n * @class AudioSprite\n * @since 0.6.0\n */\n\n//##############################################################################\n// PlayPropsConfig.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n   * {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n   *\n   * Optional Play Properties Include:\n   * <ul>\n   * <li>interrupt - How to interrupt any currently playing instances of audio with the same source,\n   * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n   * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n   * <li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n   * <li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n   * <li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\n   * loops), and -1 can be used for infinite playback.</li>\n   * <li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\n   * against the individual volume.</li>\n   * <li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n   * <li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n   * <li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n   * </ul>\n   *\n   * <h4>Example</h4>\n   *\n   * \tvar props = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n   * \tcreatejs.Sound.play(\"mySound\", props);\n   * \t// OR\n   * \tmySoundInstance.play(props);\n   *\n   * @class PlayPropsConfig\n   * @constructor\n   * @since 0.6.1\n   */\n  // TODO think of a better name for this class\n  var PlayPropsConfig = function () {\n    // Public Properties\n    /**\n     * How to interrupt any currently playing instances of audio with the same source,\n     * if the maximum number of instances of the sound are already playing. Values are defined as\n     * <code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n     * {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n     * @property interrupt\n     * @type {string}\n     * @default null\n     */\n    this.interrupt = null;\n\n    /**\n     * The amount of time to delay the start of audio playback, in milliseconds.\n     * @property delay\n     * @type {Number}\n     * @default null\n     */\n    this.delay = null;\n\n    /**\n     * The offset from the start of the audio to begin playback, in milliseconds.\n     * @property offset\n     * @type {number}\n     * @default null\n     */\n    this.offset = null;\n\n    /**\n     * How many times the audio loops when it reaches the end of playback. The default is 0 (no\n     * loops), and -1 can be used for infinite playback.\n     * @property loop\n     * @type {number}\n     * @default null\n     */\n    this.loop = null;\n\n    /**\n     * The volume of the sound, between 0 and 1. Note that the master volume is applied\n     * against the individual volume.\n     * @property volume\n     * @type {number}\n     * @default null\n     */\n    this.volume = null;\n\n    /**\n     * The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n     * @property pan\n     * @type {number}\n     * @default null\n     */\n    this.pan = null;\n\n    /**\n     * Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n     * @property startTime\n     * @type {number}\n     * @default null\n     */\n    this.startTime = null;\n\n    /**\n     * Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n     * @property duration\n     * @type {number}\n     * @default null\n     */\n    this.duration = null;\n  };\n  var p = PlayPropsConfig.prototype = {};\n  var s = PlayPropsConfig;\n\n  // Static Methods\n  /**\n   * Creates a PlayPropsConfig from another PlayPropsConfig or an Object.\n   *\n   * @method create\n   * @param {PlayPropsConfig|Object} value The play properties\n   * @returns {PlayPropsConfig}\n   * @static\n   */\n  s.create = function (value) {\n    if (typeof value === \"string\") {\n      // Handle the old API gracefully.\n      console && (console.warn || console.log)(\"Deprecated behaviour. Sound.play takes a configuration object instead of individual arguments. See docs for info.\");\n      return new createjs.PlayPropsConfig().set({\n        interrupt: value\n      });\n    } else if (value == null || value instanceof s || value instanceof Object) {\n      return new createjs.PlayPropsConfig().set(value);\n    } else if (value == null) {\n      throw new Error(\"PlayProps configuration not recognized.\");\n    }\n  };\n\n  // Public Methods\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * <h4>Example</h4>\n   *\n   *      var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});\n   *\n   * @method set\n   * @param {Object} props A generic object containing properties to copy to the PlayPropsConfig instance.\n   * @return {PlayPropsConfig} Returns the instance the method is called on (useful for chaining calls.)\n  */\n  p.set = function (props) {\n    if (props != null) {\n      for (var n in props) {\n        this[n] = props[n];\n      }\n    }\n    return this;\n  };\n  p.toString = function () {\n    return \"[PlayPropsConfig]\";\n  };\n  createjs.PlayPropsConfig = s;\n})();\n\n//##############################################################################\n// Sound.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\n   * All Sound APIs on this class are static.\n   *\n   * <b>Registering and Preloading</b><br />\n   * Before you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\n   * or register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\n   * sound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\n   * the sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n   * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\n   * preloaded. It is recommended to preload sounds either internally using the register functions or externally using\n   * PreloadJS so they are ready when you want to use them.\n   *\n   * <b>Playback</b><br />\n   * To play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\n   * This method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\n   * Please see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n   *\n   * <b>Plugins</b><br />\n   * By default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\n   * are used (when available), although developers can change plugin priority or add new plugins (such as the\n   * provided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\n   * methods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n   * {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n   *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n   *      createjs.Sound.alternateExtensions = [\"mp3\"];\n   *      createjs.Sound.on(\"fileload\", this.loadHandler, this);\n   *      createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n   *      function loadHandler(event) {\n      *          // This is fired for each sound that is registered.\n      *          var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n      *          instance.on(\"complete\", this.handleComplete, this);\n      *          instance.volume = 0.5;\n   *      }\n   *\n   * The maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\n   * of {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\n   * a default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\n   * default limit of 100.\n   *\n   *      createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n   *\n   * Sound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\n   * automatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\n   * load. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\n   * the {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\n   * preloading. It is recommended that all audio is preloaded before it is played.\n   *\n   *      var queue = new createjs.LoadQueue();\n   *\t\tqueue.installPlugin(createjs.Sound);\n   *\n   * <b>Audio Sprites</b><br />\n   * SoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\n   * For those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\n   * grouped into a single file.\n   *\n   * <h4>Example</h4>\n   *\n   *\t\tvar assetsPath = \"./assets/\";\n   *\t\tvar sounds = [{\n   *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n   *\t\t\t\taudioSprite: [\n   *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n   *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n   *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n   *\t\t\t\t]}\n  \t *\t\t\t}\n   *\t\t];\n   *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n   *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n   *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n   *\t\t// after load is complete\n   *\t\tcreatejs.Sound.play(\"sound2\");\n   *\n   * <b>Mobile Playback</b><br />\n   * Devices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\n   * initiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\n   * longer necessary as of SoundJS 0.6.2.\n   * <ul>\n   *     <li>\n   *         In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n   *         method in the call stack of a user input event to manually unlock the audio context.\n   *     </li>\n   *     <li>\n   *         In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n   *         and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n   *         context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n   *     </li>\n   *     <li>\n   *         Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n   *         will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n   *         as a \"click\", so if the user long-presses the button, it will no longer work.\n   *     </li>\n   *     <li>\n   *         When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n   *         the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n   *         only touch events fire. To get around this, you can either rely on \"touchend\", or:\n   *         <ol>\n   *             <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n   *             <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n   *         </ol>\n   *         These settings may change how your application behaves, and are not recommended.\n   *     </li>\n   * </ul>\n   *\n   * <b>Loading Alternate Paths and Extension-less Files</b><br />\n   * SoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\n   * the `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\n   * how SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\n   * different folders, or on CDNs, which often has completely different filenames for each file.\n   *\n   * Priority is determined by the property order (first property is tried first).  This is supported by both internal loading\n   * and loading with PreloadJS.\n   *\n   * <em>Note: an id is required for playback.</em>\n   *\n   * <h4>Example</h4>\n   *\n   *\t\tvar sounds = {path:\"./audioPath/\",\n   * \t\t\t\tmanifest: [\n   *\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n   *\t\t]};\n   *\n   *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n   *\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n   *\t\tcreatejs.Sound.registerSounds(sounds);\n   *\n   * <h3>Known Browser and OS issues</h3>\n   * <b>IE 9 HTML Audio limitations</b><br />\n   * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n   * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n   * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n      * <li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\n   * encoding with 64kbps works.</li>\n   * <li>Occasionally very short samples will get cut off.</li>\n   * <li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\n   * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\n   * estimate.</li></ul>\n   *\n   * <b>Firefox 25 Web Audio limitations</b>\n   * <ul><li>mp3 audio files do not load properly on all windows machines, reported\n   * <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\n   * For this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\n   * possible.</li></ul>\n  \t * <b>Safari limitations</b><br />\n   * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n   *\n   * <b>iOS 6 Web Audio limitations</b><br />\n   * <ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\n   * Mobile Playback above.</li>\n   * <li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\n   * at a different sampleRate.</li>\n   * </ul>\n   *\n   * <b>Android HTML Audio limitations</b><br />\n   * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n   * <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\n   * a delay.</li></ul>\n   *\n   * <b>Web Audio and PreloadJS</b><br />\n   * <ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\n   * This means that tag loading can not be used to avoid cross domain issues.</li><ul>\n   *\n   * @class Sound\n   * @static\n   * @uses EventDispatcher\n   */\n  function Sound() {\n    throw \"Sound cannot be instantiated\";\n  }\n  var s = Sound;\n\n  // Static Properties\n  /**\n   * The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\n   * instances of the sound are already playing.\n   * @property INTERRUPT_ANY\n   * @type {String}\n   * @default any\n   * @static\n   */\n  s.INTERRUPT_ANY = \"any\";\n\n  /**\n   * The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\n   * least distance in the audio track, if the maximum number of instances of the sound are already playing.\n   * @property INTERRUPT_EARLY\n   * @type {String}\n   * @default early\n   * @static\n   */\n  s.INTERRUPT_EARLY = \"early\";\n\n  /**\n   * The interrupt value to interrupt the currently playing instance with the same source that progressed the most\n   * distance in the audio track, if the maximum number of instances of the sound are already playing.\n   * @property INTERRUPT_LATE\n   * @type {String}\n   * @default late\n   * @static\n   */\n  s.INTERRUPT_LATE = \"late\";\n\n  /**\n   * The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\n   * instances of the sound are already playing.\n   * @property INTERRUPT_NONE\n   * @type {String}\n   * @default none\n   * @static\n   */\n  s.INTERRUPT_NONE = \"none\";\n\n  /**\n   * Defines the playState of an instance that is still initializing.\n   * @property PLAY_INITED\n   * @type {String}\n   * @default playInited\n   * @static\n   */\n  s.PLAY_INITED = \"playInited\";\n\n  /**\n   * Defines the playState of an instance that is currently playing or paused.\n   * @property PLAY_SUCCEEDED\n   * @type {String}\n   * @default playSucceeded\n   * @static\n   */\n  s.PLAY_SUCCEEDED = \"playSucceeded\";\n\n  /**\n   * Defines the playState of an instance that was interrupted by another instance.\n   * @property PLAY_INTERRUPTED\n   * @type {String}\n   * @default playInterrupted\n   * @static\n   */\n  s.PLAY_INTERRUPTED = \"playInterrupted\";\n\n  /**\n   * Defines the playState of an instance that completed playback.\n   * @property PLAY_FINISHED\n   * @type {String}\n   * @default playFinished\n   * @static\n   */\n  s.PLAY_FINISHED = \"playFinished\";\n\n  /**\n   * Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\n   * when the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.\n   * @property PLAY_FAILED\n   * @type {String}\n   * @default playFailed\n   * @static\n   */\n  s.PLAY_FAILED = \"playFailed\";\n\n  /**\n   * A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\n   * can play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\n   * support additional media types.\n   *\n   * NOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n   *\n   * More details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\n   * A very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.\n   * @property SUPPORTED_EXTENSIONS\n   * @type {Array[String]}\n   * @default [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]\n   * @since 0.4.0\n   * @static\n   */\n  s.SUPPORTED_EXTENSIONS = [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"];\n\n  /**\n   * Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\n   * that support so plugins can accurately determine if an extension is supported.  Adding to this list can help\n   * plugins determine more accurately if an extension is supported.\n   *\n  \t * A useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.\n   * @property EXTENSION_MAP\n   * @type {Object}\n   * @since 0.4.0\n   * @default {m4a:\"mp4\"}\n   * @static\n   */\n  s.EXTENSION_MAP = {\n    m4a: \"mp4\"\n  };\n\n  /**\n   * The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\n   * query strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.\n   * @property FILE_PATTERN\n   * @type {RegExp}\n   * @static\n   * @private\n   */\n  s.FILE_PATTERN = /^(?:(\\w+:)\\/{2}(\\w+(?:\\.\\w+)*\\/?))?([/.]*?(?:[^?]+)?\\/)?((?:[^/?]+)\\.(\\w+))(?:\\?(\\S+)?)?$/;\n\n  // Class Public properties\n  /**\n   * Determines the default behavior for interrupting other currently playing instances with the same source, if the\n   * maximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\n   * but this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\n   * is called without passing a value for interrupt.\n   * @property defaultInterruptBehavior\n   * @type {String}\n   * @default Sound.INTERRUPT_NONE, or \"none\"\n   * @static\n   * @since 0.4.0\n   */\n  s.defaultInterruptBehavior = s.INTERRUPT_NONE; // OJR does s.INTERRUPT_ANY make more sense as default?  Needs game dev testing to see which case makes more sense.\n\n  /**\n   * An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\n   * These are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\n   * extensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\n   * to exist in the same location, as only the extension is altered.\n   *\n   * Note that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\n   * and {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n   *\n   * <h4>Example</h4>\n   *\n   *\tvar sounds = [\n   *\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n   *\t];\n   *\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n   *\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n   *\tcreatejs.Sound.registerSounds(sounds, assetPath);\n   *\t// ...\n   *\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach\n   *\n   * @property alternateExtensions\n   * @type {Array}\n   * @since 0.5.2\n   * @static\n   */\n  s.alternateExtensions = [];\n\n  /**\n   * The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\n   * Sound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n   * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n   * @property activePlugin\n   * @type {Object}\n   * @static\n   */\n  s.activePlugin = null;\n\n  // class getter / setter properties\n\n  /**\n   * Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\n   * example, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\n   * sound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}}\n   * instead.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.volume = 0.5;\n   *\n   * @property volume\n   * @type {Number}\n   * @default 1\n   * @since 0.6.1\n   */\n\n  /**\n   * The internal volume level. Use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} to adjust the master volume.\n   * @property _masterVolume\n   * @type {number}\n   * @default 1\n   * @private\n   */\n  s._masterVolume = 1;\n\n  /**\n   * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n   * @method _getMasterVolume\n   * @private\n   * @static\n   * @return {Number}\n   **/\n  s._getMasterVolume = function () {\n    return this._masterVolume;\n  };\n  // Sound.getMasterVolume is @deprecated. Remove for 1.1+\n  s.getVolume = createjs.deprecate(s._getMasterVolume, \"Sound.getVolume\");\n  /**\n   * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n   * @method _setMasterVolume\n   * @static\n   * @private\n   **/\n  s._setMasterVolume = function (value) {\n    if (Number(value) == null) {\n      return;\n    }\n    value = Math.max(0, Math.min(1, value));\n    s._masterVolume = value;\n    if (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n      var instances = this._instances;\n      for (var i = 0, l = instances.length; i < l; i++) {\n        instances[i].setMasterVolume(value);\n      }\n    }\n  };\n  // Sound.stMasterVolume is @deprecated. Remove for 1.1+\n  s.setVolume = createjs.deprecate(s._setMasterVolume, \"Sound.setVolume\");\n\n  /**\n   * Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\n   * separately and when set will override, but not change the mute property of individual instances. To mute an individual\n   * instance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.muted = true;\n   *\n   *\n   * @property muted\n   * @type {Boolean}\n   * @default false\n   * @since 0.6.1\n   */\n  s._masterMute = false;\n\n  /**\n   * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n   * @method _getMute\n   * @returns {Boolean}\n   * @static\n   * @private\n   */\n  s._getMute = function () {\n    return this._masterMute;\n  };\n  // Sound.getMute is @deprecated. Remove for 1.1+\n  s.getMute = createjs.deprecate(s._getMute, \"Sound.getMute\");\n\n  /**\n   * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n   * @method _setMute\n   * @param {Boolean} value The muted value\n   * @static\n   * @private\n   */\n  s._setMute = function (value) {\n    if (value == null) {\n      return;\n    }\n    this._masterMute = value;\n    if (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n      var instances = this._instances;\n      for (var i = 0, l = instances.length; i < l; i++) {\n        instances[i].setMasterMute(value);\n      }\n    }\n  };\n  // Sound.setMute is @deprecated. Remove for 1.1+\n  s.setMute = createjs.deprecate(s._setMute, \"Sound.setMute\");\n\n  /**\n   * Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\n   * or if the plugin supports a specific feature. Capabilities include:\n   * <ul>\n   *     <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n   *     <li><b>volume;</b> If the plugin can control audio volume.</li>\n   *     <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n   *     if there is no known limit.</li>\n   * <br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n   *     <li><b>mp3:</b> If MP3 audio is supported.</li>\n   *     <li><b>ogg:</b> If OGG audio is supported.</li>\n   *     <li><b>wav:</b> If WAV audio is supported.</li>\n   *     <li><b>mpeg:</b> If MPEG audio is supported.</li>\n   *     <li><b>m4a:</b> If M4A audio is supported.</li>\n   *     <li><b>mp4:</b> If MP4 audio is supported.</li>\n   *     <li><b>aiff:</b> If aiff audio is supported.</li>\n   *     <li><b>wma:</b> If wma audio is supported.</li>\n   *     <li><b>mid:</b> If mid audio is supported.</li>\n   * </ul>\n   *\n   * You can get a specific capability of the active plugin using standard object notation\n   *\n   * <h4>Example</h4>\n   *\n   *      var mp3 = createjs.Sound.capabilities.mp3;\n   *\n   * Note this property is read only.\n   *\n   * @property capabilities\n   * @type {Object}\n   * @static\n   * @readOnly\n   * @since 0.6.1\n   */\n\n  /**\n   * Use the {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} property instead.\n   * @returns {null}\n   * @private\n   */\n  s._getCapabilities = function () {\n    if (s.activePlugin == null) {\n      return null;\n    }\n    return s.activePlugin._capabilities;\n  };\n  // Sound.getCapabilities is @deprecated. Remove for 1.1+\n  s.getCapabilities = createjs.deprecate(s._getCapabilities, \"Sound.getCapabilities\");\n  Object.defineProperties(s, {\n    volume: {\n      get: s._getMasterVolume,\n      set: s._setMasterVolume\n    },\n    muted: {\n      get: s._getMute,\n      set: s._setMute\n    },\n    capabilities: {\n      get: s._getCapabilities\n    }\n  });\n\n  // Class Private properties\n  /**\n   * Determines if the plugins have been registered. If false, the first call to {{#crossLink \"play\"}}{{/crossLink}} will instantiate the default\n   * plugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\n   * If plugins have been registered, but none are applicable, then sound playback will fail.\n   * @property _pluginsRegistered\n   * @type {Boolean}\n   * @default false\n   * @static\n   * @private\n   */\n  s._pluginsRegistered = false;\n\n  /**\n   * Used internally to assign unique IDs to each AbstractSoundInstance.\n   * @property _lastID\n   * @type {Number}\n   * @static\n   * @private\n   */\n  s._lastID = 0;\n\n  /**\n   * An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\n   * all instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/volume:property\"}}{{/crossLink}}.\n   * When an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\n   * method. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\n   * method.\n   * @property _instances\n   * @type {Array}\n   * @private\n   * @static\n   */\n  s._instances = [];\n\n  /**\n   * An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.\n   * @property _idHash\n   * @type {Object}\n   * @private\n   * @static\n   */\n  s._idHash = {};\n\n  /**\n   * An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\n   * source, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\n   * and data.\n   * @property _preloadHash\n   * @type {Object}\n   * @private\n   * @static\n   */\n  s._preloadHash = {};\n\n  /**\n   * An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n   * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * @property _defaultPlayPropsHash\n   * @type {Object}\n   * @private\n   * @static\n   * @since 0.6.1\n   */\n  s._defaultPlayPropsHash = {};\n\n  // EventDispatcher methods:\n  s.addEventListener = null;\n  s.removeEventListener = null;\n  s.removeAllEventListeners = null;\n  s.dispatchEvent = null;\n  s.hasEventListener = null;\n  s._listeners = null;\n  createjs.EventDispatcher.initialize(s); // inject EventDispatcher methods.\n\n  // Events\n  /**\n   * This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\n   * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n   * @event fileload\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {String} src The source of the sound that was loaded.\n   * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n   * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n   * @since 0.4.1\n   */\n\n  /**\n   * This event is fired when a file fails loading internally. This event is fired for each loaded sound,\n   * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n   * @event fileerror\n   * @param {Object} target The object that dispatched the event.\n   * @param {String} type The event type.\n   * @param {String} src The source of the sound that was loaded.\n   * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n   * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n   * @since 0.6.0\n   */\n\n  // Class Public Methods\n  /**\n   * Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n   * Any load calls that have the matching type or extension will fire the callback method, and use the resulting\n   * object, which is potentially modified by Sound. This helps when determining the correct path, as well as\n   * registering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.\n   * @method getPreloadHandlers\n   * @return {Object} An object containing:\n   * <ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n   *      Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n   *      <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n   *      <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>\n   * @static\n   * @private\n   */\n  s.getPreloadHandlers = function () {\n    return {\n      callback: createjs.proxy(s.initLoad, s),\n      types: [\"sound\"],\n      extensions: s.SUPPORTED_EXTENSIONS\n    };\n  };\n\n  /**\n   * Used to dispatch fileload events from internal loading.\n   * @method _handleLoadComplete\n   * @param event A loader event.\n   * @private\n   * @static\n   * @since 0.6.0\n   */\n  s._handleLoadComplete = function (event) {\n    var src = event.target.getItem().src;\n    if (!s._preloadHash[src]) {\n      return;\n    }\n    for (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n      var item = s._preloadHash[src][i];\n      s._preloadHash[src][i] = true;\n      if (!s.hasEventListener(\"fileload\")) {\n        continue;\n      }\n      var event = new createjs.Event(\"fileload\");\n      event.src = item.src;\n      event.id = item.id;\n      event.data = item.data;\n      event.sprite = item.sprite;\n      s.dispatchEvent(event);\n    }\n  };\n\n  /**\n   * Used to dispatch error events from internal preloading.\n   * @param event\n   * @private\n   * @since 0.6.0\n   * @static\n   */\n  s._handleLoadError = function (event) {\n    var src = event.target.getItem().src;\n    if (!s._preloadHash[src]) {\n      return;\n    }\n    for (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n      var item = s._preloadHash[src][i];\n      s._preloadHash[src][i] = false;\n      if (!s.hasEventListener(\"fileerror\")) {\n        continue;\n      }\n      var event = new createjs.Event(\"fileerror\");\n      event.src = item.src;\n      event.id = item.id;\n      event.data = item.data;\n      event.sprite = item.sprite;\n      s.dispatchEvent(event);\n    }\n  };\n\n  /**\n   * Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.\n   *\n   * @method _registerPlugin\n   * @param {Object} plugin The plugin class to install.\n   * @return {Boolean} Whether the plugin was successfully initialized.\n   * @static\n   * @private\n   */\n  s._registerPlugin = function (plugin) {\n    // Note: Each plugin is passed in as a class reference, but we store the activePlugin as an instance\n    if (plugin.isSupported()) {\n      s.activePlugin = new plugin();\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n   *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n   *\n   * @method registerPlugins\n   * @param {Array} plugins An array of plugins classes to install.\n   * @return {Boolean} Whether a plugin was successfully initialized.\n   * @static\n   */\n  s.registerPlugins = function (plugins) {\n    s._pluginsRegistered = true;\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      if (s._registerPlugin(plugins[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Initialize the default plugins. This method is automatically called when any audio is played or registered before\n   * the user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\n   * default plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   * \tif (!createjs.initializeDefaultPlugins()) { return; }\n   *\n   * @method initializeDefaultPlugins\n   * @returns {Boolean} True if a plugin was initialized, false otherwise.\n   * @since 0.4.0\n   * @static\n   */\n  s.initializeDefaultPlugins = function () {\n    if (s.activePlugin != null) {\n      return true;\n    }\n    if (s._pluginsRegistered) {\n      return false;\n    }\n    if (s.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Determines if Sound has been initialized, and a plugin has been activated.\n   *\n   * <h4>Example</h4>\n   * This example sets up a Flash fallback, but only if there is no plugin specified yet.\n   *\n   * \tif (!createjs.Sound.isReady()) {\n   *\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n   * \t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n   *\t}\n   *\n   * @method isReady\n   * @return {Boolean} If Sound has initialized a plugin.\n   * @static\n   */\n  s.isReady = function () {\n    return s.activePlugin != null;\n  };\n\n  /**\n   * Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\n   * for usage by a plugin, and not for direct interaction.\n   * @method initLoad\n   * @param {Object} src The object to load.\n   * @return {Object|AbstractLoader} An instance of AbstractLoader.\n   * @private\n   * @static\n   */\n  s.initLoad = function (loadItem) {\n    if (loadItem.type == \"video\") {\n      return true;\n    } // Don't handle video. PreloadJS's plugin model is really aggressive.\n    return s._registerSound(loadItem);\n  };\n\n  /**\n   * Internal method for loading sounds.  This should not be called directly.\n   *\n   * @method _registerSound\n   * @param {Object} src The object to load, containing src property and optionally containing id and data.\n   * @return {Object} An object with the modified values that were passed in, which defines the sound.\n   * Returns false if the source cannot be parsed or no plugins can be initialized.\n   * Returns true if the source is already loaded.\n   * @static\n   * @private\n   * @since 0.6.0\n   */\n\n  s._registerSound = function (loadItem) {\n    if (!s.initializeDefaultPlugins()) {\n      return false;\n    }\n    var details;\n    if (loadItem.src instanceof Object) {\n      details = s._parseSrc(loadItem.src);\n      details.src = loadItem.path + details.src;\n    } else {\n      details = s._parsePath(loadItem.src);\n    }\n    if (details == null) {\n      return false;\n    }\n    loadItem.src = details.src;\n    loadItem.type = \"sound\";\n    var data = loadItem.data;\n    var numChannels = null;\n    if (data != null) {\n      if (!isNaN(data.channels)) {\n        numChannels = parseInt(data.channels);\n      } else if (!isNaN(data)) {\n        numChannels = parseInt(data);\n      }\n      if (data.audioSprite) {\n        var sp;\n        for (var i = data.audioSprite.length; i--;) {\n          sp = data.audioSprite[i];\n          s._idHash[sp.id] = {\n            src: loadItem.src,\n            startTime: parseInt(sp.startTime),\n            duration: parseInt(sp.duration)\n          };\n          if (sp.defaultPlayProps) {\n            s._defaultPlayPropsHash[sp.id] = createjs.PlayPropsConfig.create(sp.defaultPlayProps);\n          }\n        }\n      }\n    }\n    if (loadItem.id != null) {\n      s._idHash[loadItem.id] = {\n        src: loadItem.src\n      };\n    }\n    ;\n    var loader = s.activePlugin.register(loadItem);\n    SoundChannel.create(loadItem.src, numChannels);\n\n    // return the number of instances to the user.  This will also be returned in the load event.\n    if (data == null || !isNaN(data)) {\n      loadItem.data = numChannels || SoundChannel.maxPerChannel();\n    } else {\n      loadItem.data.channels = numChannels || SoundChannel.maxPerChannel();\n    }\n    if (loader.type) {\n      loadItem.type = loader.type;\n    }\n    if (loadItem.defaultPlayProps) {\n      s._defaultPlayPropsHash[loadItem.src] = createjs.PlayPropsConfig.create(loadItem.defaultPlayProps);\n    }\n    return loader;\n  };\n\n  /**\n   * Register an audio file for loading and future playback in Sound. This is automatically called when using\n   * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\n   * need to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Sound.alternateExtensions = [\"mp3\"];\n   *      createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n   *      createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n   *      createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);\n   *\n   *\n   * @method registerSound\n   * @param {String | Object} src The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.\n   * @param {String} [id] An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.\n   * @param {Number | Object} [data] Data associated with the item. Sound uses the data parameter as the number of\n   * channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n   * for other information. The audio channels will set a default based on plugin if no value is found.\n   * Sound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n   *   id used to play the sound later, in the same manner as a sound src with an id.<br/>\n   *   startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n   *   duration is the amount of time to play the clip for, in milliseconds.<br/>\n   * This allows Sound to support audio sprites that are played back by id.\n   * @param {string} basePath Set a path that will be prepended to src for loading.\n   * @param {Object | PlayPropsConfig} defaultPlayProps Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\n   * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.\n   * @return {Object} An object with the modified values that were passed in, which defines the sound.\n   * Returns false if the source cannot be parsed or no plugins can be initialized.\n   * Returns true if the source is already loaded.\n   * @static\n   * @since 0.4.0\n   */\n  s.registerSound = function (src, id, data, basePath, defaultPlayProps) {\n    var loadItem = {\n      src: src,\n      id: id,\n      data: data,\n      defaultPlayProps: defaultPlayProps\n    };\n    if (src instanceof Object && src.src) {\n      basePath = id;\n      loadItem = src;\n    }\n    loadItem = createjs.LoadItem.create(loadItem);\n    loadItem.path = basePath;\n    if (basePath != null && !(loadItem.src instanceof Object)) {\n      loadItem.src = basePath + loadItem.src;\n    }\n    var loader = s._registerSound(loadItem);\n    if (!loader) {\n      return false;\n    }\n    if (!s._preloadHash[loadItem.src]) {\n      s._preloadHash[loadItem.src] = [];\n    }\n    s._preloadHash[loadItem.src].push(loadItem);\n    if (s._preloadHash[loadItem.src].length == 1) {\n      // OJR note this will disallow reloading a sound if loading fails or the source changes\n      loader.on(\"complete\", this._handleLoadComplete, this);\n      loader.on(\"error\", this._handleLoadError, this);\n      s.activePlugin.preload(loader);\n    } else {\n      if (s._preloadHash[loadItem.src][0] == true) {\n        return true;\n      }\n    }\n    return loadItem;\n  };\n\n  /**\n   * Register an array of audio files for loading and future playback in Sound. It is recommended to register all\n   * sounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\n   * when required.\n   *\n   * <h4>Example</h4>\n   *\n   * \t\tvar assetPath = \"./myAudioPath/\";\n   *      var sounds = [\n   *          {src:\"asset0.ogg\", id:\"example\"},\n   *          {src:\"asset1.ogg\", id:\"1\", data:6},\n   *          {src:\"asset2.mp3\", id:\"works\"}\n   *          {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n   *      ];\n   *      createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n   *      createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n   *      createjs.Sound.registerSounds(sounds, assetPath);\n   *\n   * @method registerSounds\n   * @param {Array} sounds An array of objects to load. Objects are expected to be in the format needed for\n   * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\n   * with \"id\" and \"data\" being optional.\n   * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\n   * Note id is required if src is an object with extension labeled src properties.\n   * @param {string} basePath Set a path that will be prepended to each src when loading.  When creating, playing, or removing\n   * audio that was loaded with a basePath by src, the basePath must be included.\n   * @return {Object} An array of objects with the modified values that were passed in, which defines each sound.\n   * Like registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\n   * Also, it will return true for any values when the source is already loaded.\n   * @static\n   * @since 0.6.0\n   */\n  s.registerSounds = function (sounds, basePath) {\n    var returnValues = [];\n    if (sounds.path) {\n      if (!basePath) {\n        basePath = sounds.path;\n      } else {\n        basePath = basePath + sounds.path;\n      }\n      sounds = sounds.manifest;\n      // TODO document this feature\n    }\n\n    for (var i = 0, l = sounds.length; i < l; i++) {\n      returnValues[i] = createjs.Sound.registerSound(sounds[i].src, sounds[i].id, sounds[i].data, basePath, sounds[i].defaultPlayProps);\n    }\n    return returnValues;\n  };\n\n  /**\n   * Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n   * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * <br />Note this will stop playback on active instances playing this sound before deleting them.\n   * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Sound.removeSound(\"myID\");\n   *      createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n   *      createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n   *      createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");\n   *\n   * @method removeSound\n   * @param {String | Object} src The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.\n   * @param {string} basePath Set a path that will be prepended to each src when removing.\n   * @return {Boolean} True if sound is successfully removed.\n   * @static\n   * @since 0.4.1\n   */\n  s.removeSound = function (src, basePath) {\n    if (s.activePlugin == null) {\n      return false;\n    }\n    if (src instanceof Object && src.src) {\n      src = src.src;\n    }\n    var details;\n    if (src instanceof Object) {\n      details = s._parseSrc(src);\n    } else {\n      src = s._getSrcById(src).src;\n      details = s._parsePath(src);\n    }\n    if (details == null) {\n      return false;\n    }\n    src = details.src;\n    if (basePath != null) {\n      src = basePath + src;\n    }\n    for (var prop in s._idHash) {\n      if (s._idHash[prop].src == src) {\n        delete s._idHash[prop];\n      }\n    }\n\n    // clear from SoundChannel, which also stops and deletes all instances\n    SoundChannel.removeSrc(src);\n    delete s._preloadHash[src];\n    s.activePlugin.removeSound(src);\n    return true;\n  };\n\n  /**\n   * Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n   * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * <br />Note this will stop playback on active instances playing this audio before deleting them.\n   * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n   *\n   * <h4>Example</h4>\n   *\n   * \t\tassetPath = \"./myPath/\";\n   *      var sounds = [\n   *          {src:\"asset0.ogg\", id:\"example\"},\n   *          {src:\"asset1.ogg\", id:\"1\", data:6},\n   *          {src:\"asset2.mp3\", id:\"works\"}\n   *      ];\n   *      createjs.Sound.removeSounds(sounds, assetPath);\n   *\n   * @method removeSounds\n   * @param {Array} sounds An array of objects to remove. Objects are expected to be in the format needed for\n   * {{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\n   * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.\n   * @param {string} basePath Set a path that will be prepended to each src when removing.\n   * @return {Object} An array of Boolean values representing if the sounds with the same array index were\n   * successfully removed.\n   * @static\n   * @since 0.4.1\n   */\n  s.removeSounds = function (sounds, basePath) {\n    var returnValues = [];\n    if (sounds.path) {\n      if (!basePath) {\n        basePath = sounds.path;\n      } else {\n        basePath = basePath + sounds.path;\n      }\n      sounds = sounds.manifest;\n    }\n    for (var i = 0, l = sounds.length; i < l; i++) {\n      returnValues[i] = createjs.Sound.removeSound(sounds[i].src, basePath);\n    }\n    return returnValues;\n  };\n\n  /**\n   * Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n   * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n   * <br />Note this will stop playback on all active sound instances before deleting them.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.removeAllSounds();\n   *\n   * @method removeAllSounds\n   * @static\n   * @since 0.4.1\n   */\n  s.removeAllSounds = function () {\n    s._idHash = {};\n    s._preloadHash = {};\n    SoundChannel.removeAll();\n    if (s.activePlugin) {\n      s.activePlugin.removeAllSounds();\n    }\n  };\n\n  /**\n   * Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\n   * not completed preloading will not kick off a new internal preload if they are played.\n   *\n   * <h4>Example</h4>\n   *\n   *     var mySound = \"assetPath/asset0.ogg\";\n   *     if(createjs.Sound.loadComplete(mySound) {\n   *         createjs.Sound.play(mySound);\n   *     }\n   *\n   * @method loadComplete\n   * @param {String} src The src or id that is being loaded.\n   * @return {Boolean} If the src is already loaded.\n   * @since 0.4.0\n   * @static\n   */\n  s.loadComplete = function (src) {\n    if (!s.isReady()) {\n      return false;\n    }\n    var details = s._parsePath(src);\n    if (details) {\n      src = s._getSrcById(details.src).src;\n    } else {\n      src = s._getSrcById(src).src;\n    }\n    if (s._preloadHash[src] == undefined) {\n      return false;\n    }\n    return s._preloadHash[src][0] == true; // src only loads once, so if it's true for the first it's true for all\n  };\n\n  /**\n   * Parse the path of a sound. Alternate extensions will be attempted in order if the\n   * current extension is not supported\n   * @method _parsePath\n   * @param {String} value The path to an audio source.\n   * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n   * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n   * @private\n   * @static\n   */\n  s._parsePath = function (value) {\n    if (typeof value != \"string\") {\n      value = value.toString();\n    }\n    var match = value.match(s.FILE_PATTERN);\n    if (match == null) {\n      return false;\n    }\n    var name = match[4];\n    var ext = match[5];\n    var c = s.capabilities;\n    var i = 0;\n    while (!c[ext]) {\n      ext = s.alternateExtensions[i++];\n      if (i > s.alternateExtensions.length) {\n        return null;\n      } // no extensions are supported\n    }\n\n    value = value.replace(\".\" + match[5], \".\" + ext);\n    var ret = {\n      name: name,\n      src: value,\n      extension: ext\n    };\n    return ret;\n  };\n\n  /**\n   * Parse the path of a sound based on properties of src matching with supported extensions.\n   * Returns false if none of the properties are supported\n   * @method _parseSrc\n   * @param {Object} value The paths to an audio source, indexed by extension type.\n   * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n   * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n   * @private\n   * @static\n   */\n  s._parseSrc = function (value) {\n    var ret = {\n      name: undefined,\n      src: undefined,\n      extension: undefined\n    };\n    var c = s.capabilities;\n    for (var prop in value) {\n      if (value.hasOwnProperty(prop) && c[prop]) {\n        ret.src = value[prop];\n        ret.extension = prop;\n        break;\n      }\n    }\n    if (!ret.src) {\n      return false;\n    } // no matches\n\n    var i = ret.src.lastIndexOf(\"/\");\n    if (i != -1) {\n      ret.name = ret.src.slice(i + 1);\n    } else {\n      ret.name = ret.src;\n    }\n    return ret;\n  };\n\n  /* ---------------\n   Static API.\n   --------------- */\n  /**\n   * Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to\n   * play, an AbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\n   * Note that even on sounds with failed playback, you may still be able to call the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\n   * method, since the failure could be due to lack of available channels. If the src does not have a supported\n   * extension or if there is no available plugin, a default AbstractSoundInstance will still be returned, which will\n   * not play any audio, but will not generate errors.\n   *\n   * <h4>Example</h4>\n   *\n   *      createjs.Sound.on(\"fileload\", handleLoad);\n   *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n   *      function handleLoad(event) {\n   *      \tcreatejs.Sound.play(\"myID\");\n   *      \t// store off AbstractSoundInstance for controlling\n   *      \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n   *      }\n   *\n   * NOTE: To create an audio sprite that has not already been registered, both startTime and duration need to be set.\n   * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n   *\n   * @method play\n   * @param {String} src The src or ID of the audio.\n   * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n   * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n   * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled\n   * after it is created.\n   * @static\n   */\n  s.play = function (src, props) {\n    var playProps = createjs.PlayPropsConfig.create(props);\n    var instance = s.createInstance(src, playProps.startTime, playProps.duration);\n    var ok = s._playInstance(instance, playProps);\n    if (!ok) {\n      instance._playFailed();\n    }\n    return instance;\n  };\n\n  /**\n   * Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\n   * supported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\n   * called safely but does nothing.\n   *\n   * <h4>Example</h4>\n   *\n   *      var myInstance = null;\n   *      createjs.Sound.on(\"fileload\", handleLoad);\n   *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n   *      function handleLoad(event) {\n   *      \tmyInstance = createjs.Sound.createInstance(\"myID\");\n   *      \t// alternately we could call the following\n   *      \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n   *      }\n   *\n   * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n   * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n   *\n   * @method createInstance\n   * @param {String} src The src or ID of the audio.\n   * @param {Number} [startTime=null] To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n   * @param {Number} [duration=null] To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n   * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n   * Unsupported extensions will return the default AbstractSoundInstance.\n   * @since 0.4.0\n   * @static\n   */\n  s.createInstance = function (src, startTime, duration) {\n    if (!s.initializeDefaultPlugins()) {\n      return new createjs.DefaultSoundInstance(src, startTime, duration);\n    }\n    var defaultPlayProps = s._defaultPlayPropsHash[src]; // for audio sprites, which create and store defaults by id\n    src = s._getSrcById(src);\n    var details = s._parsePath(src.src);\n    var instance = null;\n    if (details != null && details.src != null) {\n      SoundChannel.create(details.src);\n      if (startTime == null) {\n        startTime = src.startTime;\n      }\n      instance = s.activePlugin.create(details.src, startTime, duration || src.duration);\n      defaultPlayProps = defaultPlayProps || s._defaultPlayPropsHash[details.src];\n      if (defaultPlayProps) {\n        instance.applyPlayProps(defaultPlayProps);\n      }\n    } else {\n      instance = new createjs.DefaultSoundInstance(src, startTime, duration);\n    }\n    instance.uniqueId = s._lastID++;\n    return instance;\n  };\n\n  /**\n   * Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\n   * call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *     createjs.Sound.stop();\n   *\n   * @method stop\n   * @static\n   */\n  s.stop = function () {\n    var instances = this._instances;\n    for (var i = instances.length; i--;) {\n      instances[i].stop(); // NOTE stop removes instance from this._instances\n    }\n  };\n\n  /**\n   * Set the default playback properties for all new SoundInstances of the passed in src or ID.\n   * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.\n   *\n   * @method setDefaultPlayProps\n   * @param {String} src The src or ID used to register the audio.\n   * @param {Object | PlayPropsConfig} playProps The playback properties you would like to set.\n   * @since 0.6.1\n   */\n  s.setDefaultPlayProps = function (src, playProps) {\n    src = s._getSrcById(src);\n    s._defaultPlayPropsHash[s._parsePath(src.src).src] = createjs.PlayPropsConfig.create(playProps);\n  };\n\n  /**\n   * Get the default playback properties for the passed in src or ID.  These properties are applied to all\n   * new SoundInstances.  Returns null if default does not exist.\n   *\n   * @method getDefaultPlayProps\n   * @param {String} src The src or ID used to register the audio.\n   * @returns {PlayPropsConfig} returns an existing PlayPropsConfig or null if one does not exist\n   * @since 0.6.1\n   */\n  s.getDefaultPlayProps = function (src) {\n    src = s._getSrcById(src);\n    return s._defaultPlayPropsHash[s._parsePath(src.src).src];\n  };\n\n  /* ---------------\n   Internal methods\n   --------------- */\n  /**\n   * Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\n   * control delays.\n   * @method _playInstance\n   * @param {AbstractSoundInstance} instance The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.\n   * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n   * @return {Boolean} If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n   * have a delay will return true, but may still fail to play.\n   * @private\n   * @static\n   */\n  s._playInstance = function (instance, playProps) {\n    var defaultPlayProps = s._defaultPlayPropsHash[instance.src] || {};\n    if (playProps.interrupt == null) {\n      playProps.interrupt = defaultPlayProps.interrupt || s.defaultInterruptBehavior;\n    }\n    ;\n    if (playProps.delay == null) {\n      playProps.delay = defaultPlayProps.delay || 0;\n    }\n    if (playProps.offset == null) {\n      playProps.offset = instance.position;\n    }\n    if (playProps.loop == null) {\n      playProps.loop = instance.loop;\n    }\n    if (playProps.volume == null) {\n      playProps.volume = instance.volume;\n    }\n    if (playProps.pan == null) {\n      playProps.pan = instance.pan;\n    }\n    if (playProps.delay == 0) {\n      var ok = s._beginPlaying(instance, playProps);\n      if (!ok) {\n        return false;\n      }\n    } else {\n      //Note that we can't pass arguments to proxy OR setTimeout (IE only), so just wrap the function call.\n      // OJR WebAudio may want to handle this differently, so it might make sense to move this functionality into the plugins in the future\n      var delayTimeoutId = setTimeout(function () {\n        s._beginPlaying(instance, playProps);\n      }, playProps.delay);\n      instance.delayTimeoutId = delayTimeoutId;\n    }\n    this._instances.push(instance);\n    return true;\n  };\n\n  /**\n   * Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.\n   * @method _beginPlaying\n   * @param {AbstractSoundInstance} instance A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.\n   * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n   * @return {Boolean} If the sound can start playing. If there are no available channels, or the instance fails to\n   * start, this will return false.\n   * @private\n   * @static\n   */\n  s._beginPlaying = function (instance, playProps) {\n    if (!SoundChannel.add(instance, playProps.interrupt)) {\n      return false;\n    }\n    var result = instance._beginPlaying(playProps);\n    if (!result) {\n      var index = createjs.indexOf(this._instances, instance);\n      if (index > -1) {\n        this._instances.splice(index, 1);\n      }\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\n   * instead.\n   * @method _getSrcById\n   * @param {String} value The ID the sound was registered with.\n   * @return {String} The source of the sound if it has been registered with this ID or the value that was passed in.\n   * @private\n   * @static\n   */\n  s._getSrcById = function (value) {\n    return s._idHash[value] || {\n      src: value\n    };\n  };\n\n  /**\n   * A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\n   * Sound management. It will be added again, if the sound re-plays. Note that this method is called from the\n   * instances themselves.\n   * @method _playFinished\n   * @param {AbstractSoundInstance} instance The instance that finished playback.\n   * @private\n   * @static\n   */\n  s._playFinished = function (instance) {\n    SoundChannel.remove(instance);\n    var index = createjs.indexOf(this._instances, instance);\n    if (index > -1) {\n      this._instances.splice(index, 1);\n    } // OJR this will always be > -1, there is no way for an instance to exist without being added to this._instances\n  };\n\n  createjs.Sound = Sound;\n\n  /**\n   * An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\n   * each sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n   *\n   * The number of sounds is artificially limited by Sound in order to prevent over-saturation of a\n   * single sound, as well as to stay within hardware limitations, although the latter may disappear with better\n   * browser support.\n   *\n   * When a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\n   * sound that is already playing.\n   * #class SoundChannel\n   * @param {String} src The source of the instances\n   * @param {Number} [max=1] The number of instances allowed\n   * @constructor\n   * @protected\n   */\n  function SoundChannel(src, max) {\n    this.init(src, max);\n  }\n\n  /* ------------\n   Static API\n   ------------ */\n  /**\n   * A hash of channel instances indexed by source.\n   * #property channels\n   * @type {Object}\n   * @static\n   */\n  SoundChannel.channels = {};\n\n  /**\n   * Create a sound channel. Note that if the sound channel already exists, this will fail.\n   * #method create\n   * @param {String} src The source for the channel\n   * @param {Number} max The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.\n   * @return {Boolean} If the channels were created.\n   * @static\n   */\n  SoundChannel.create = function (src, max) {\n    var channel = SoundChannel.get(src);\n    if (channel == null) {\n      SoundChannel.channels[src] = new SoundChannel(src, max);\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n   * #method remove\n   * @param {String} src The source for the channel\n   * @return {Boolean} If the channels were deleted.\n   * @static\n   */\n  SoundChannel.removeSrc = function (src) {\n    var channel = SoundChannel.get(src);\n    if (channel == null) {\n      return false;\n    }\n    channel._removeAll(); // this stops and removes all active instances\n    delete SoundChannel.channels[src];\n    return true;\n  };\n  /**\n   * Delete all sound channels, stop and delete all related instances.\n   * #method removeAll\n   * @static\n   */\n  SoundChannel.removeAll = function () {\n    for (var channel in SoundChannel.channels) {\n      SoundChannel.channels[channel]._removeAll(); // this stops and removes all active instances\n    }\n\n    SoundChannel.channels = {};\n  };\n  /**\n   * Add an instance to a sound channel.\n   * #method add\n   * @param {AbstractSoundInstance} instance The instance to add to the channel\n   * @param {String} interrupt The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n   * for details on interrupt modes.\n   * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n   * @static\n   */\n  SoundChannel.add = function (instance, interrupt) {\n    var channel = SoundChannel.get(instance.src);\n    if (channel == null) {\n      return false;\n    }\n    return channel._add(instance, interrupt);\n  };\n  /**\n   * Remove an instance from the channel.\n   * #method remove\n   * @param {AbstractSoundInstance} instance The instance to remove from the channel\n   * @return The success of the method call. If there is no channel, it will return false.\n   * @static\n   */\n  SoundChannel.remove = function (instance) {\n    var channel = SoundChannel.get(instance.src);\n    if (channel == null) {\n      return false;\n    }\n    channel._remove(instance);\n    return true;\n  };\n  /**\n   * Get the maximum number of sounds you can have in a channel.\n   * #method maxPerChannel\n   * @return {Number} The maximum number of sounds you can have in a channel.\n   */\n  SoundChannel.maxPerChannel = function () {\n    return p.maxDefault;\n  };\n  /**\n   * Get a channel instance by its src.\n   * #method get\n   * @param {String} src The src to use to look up the channel\n   * @static\n   */\n  SoundChannel.get = function (src) {\n    return SoundChannel.channels[src];\n  };\n  var p = SoundChannel.prototype;\n  p.constructor = SoundChannel;\n\n  /**\n   * The source of the channel.\n   * #property src\n   * @type {String}\n   */\n  p.src = null;\n\n  /**\n   * The maximum number of instances in this channel.  -1 indicates no limit\n   * #property max\n   * @type {Number}\n   */\n  p.max = null;\n\n  /**\n   * The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n   * #property maxDefault\n   * @type {Number}\n   * @default 100\n   * @since 0.4.0\n   */\n  p.maxDefault = 100;\n\n  /**\n   * The current number of active instances.\n   * #property length\n   * @type {Number}\n   */\n  p.length = 0;\n\n  /**\n   * Initialize the channel.\n   * #method init\n   * @param {String} src The source of the channel\n   * @param {Number} max The maximum number of instances in the channel\n   * @protected\n   */\n  p.init = function (src, max) {\n    this.src = src;\n    this.max = max || this.maxDefault;\n    if (this.max == -1) {\n      this.max = this.maxDefault;\n    }\n    this._instances = [];\n  };\n\n  /**\n   * Get an instance by index.\n   * #method get\n   * @param {Number} index The index to return.\n   * @return {AbstractSoundInstance} The AbstractSoundInstance at a specific instance.\n   */\n  p._get = function (index) {\n    return this._instances[index];\n  };\n\n  /**\n   * Add a new instance to the channel.\n   * #method add\n   * @param {AbstractSoundInstance} instance The instance to add.\n   * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n   */\n  p._add = function (instance, interrupt) {\n    if (!this._getSlot(interrupt, instance)) {\n      return false;\n    }\n    this._instances.push(instance);\n    this.length++;\n    return true;\n  };\n\n  /**\n   * Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n   * #method remove\n   * @param {AbstractSoundInstance} instance The instance to remove\n   * @return {Boolean} The success of the remove call. If the instance is not found in this channel, it will\n   * return false.\n   */\n  p._remove = function (instance) {\n    var index = createjs.indexOf(this._instances, instance);\n    if (index == -1) {\n      return false;\n    }\n    this._instances.splice(index, 1);\n    this.length--;\n    return true;\n  };\n\n  /**\n   * Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n   * #method removeAll\n   */\n  p._removeAll = function () {\n    // Note that stop() removes the item from the list\n    for (var i = this.length - 1; i >= 0; i--) {\n      this._instances[i].stop();\n    }\n  };\n\n  /**\n   * Get an available slot depending on interrupt value and if slots are available.\n   * #method getSlot\n   * @param {String} interrupt The interrupt value to use.\n   * @param {AbstractSoundInstance} instance The sound instance that will go in the channel if successful.\n   * @return {Boolean} Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n   * an existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.\n   */\n  p._getSlot = function (interrupt, instance) {\n    var target, replacement;\n    if (interrupt != Sound.INTERRUPT_NONE) {\n      // First replacement candidate\n      replacement = this._get(0);\n      if (replacement == null) {\n        return true;\n      }\n    }\n    for (var i = 0, l = this.max; i < l; i++) {\n      target = this._get(i);\n\n      // Available Space\n      if (target == null) {\n        return true;\n      }\n\n      // Audio is complete or not playing\n      if (target.playState == Sound.PLAY_FINISHED || target.playState == Sound.PLAY_INTERRUPTED || target.playState == Sound.PLAY_FAILED) {\n        replacement = target;\n        break;\n      }\n      if (interrupt == Sound.INTERRUPT_NONE) {\n        continue;\n      }\n\n      // Audio is a better candidate than the current target, according to playhead\n      if (interrupt == Sound.INTERRUPT_EARLY && target.position < replacement.position || interrupt == Sound.INTERRUPT_LATE && target.position > replacement.position) {\n        replacement = target;\n      }\n    }\n    if (replacement != null) {\n      replacement._interrupt();\n      this._remove(replacement);\n      return true;\n    }\n    return false;\n  };\n  p.toString = function () {\n    return \"[Sound SoundChannel]\";\n  };\n  // do not add SoundChannel to namespace\n})();\n\n//##############################################################################\n// AbstractSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n * {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\n * for control by the user.\n *\n * <h4>Example</h4>\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *\n * A number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\n * API method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n *\n * Once a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\n * the AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\n * is then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\n * playback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\n * will rebuild the references the Sound class need to control it.\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n *      myInstance.on(\"loop\", handleLoop);\n *      function handleLoop(event) {\n *          myInstance.volume = myInstance.volume * 0.5;\n *      }\n *\n * Events are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *      myInstance.on(\"complete\", handleComplete);\n *      myInstance.on(\"loop\", handleLoop);\n *      myInstance.on(\"failed\", handleFailed);\n *\n *\n * @class AbstractSoundInstance\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @extends EventDispatcher\n * @constructor\n */\n\n(function () {\n  \"use strict\";\n\n  // Constructor:\n  var AbstractSoundInstance = function (src, startTime, duration, playbackResource) {\n    this.EventDispatcher_constructor();\n\n    // public properties:\n    /**\n     * The source of the sound.\n     * @property src\n     * @type {String}\n     * @default null\n     */\n    this.src = src;\n\n    /**\n     * The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.\n     * @property uniqueId\n     * @type {String} | Number\n     * @default -1\n     */\n    this.uniqueId = -1;\n\n    /**\n     * The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.\n     * @property playState\n     * @type {String}\n     * @default null\n     */\n    this.playState = null;\n\n    /**\n     * A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\n     * This allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.\n     * @property delayTimeoutId\n     * @type {timeoutVariable}\n     * @default null\n     * @protected\n     * @since 0.4.0\n     */\n    this.delayTimeoutId = null;\n    // TODO consider moving delay into AbstractSoundInstance so it can be handled by plugins\n\n    // private properties\n    // Getter / Setter Properties\n    // OJR TODO find original reason that we didn't use defined functions.  I think it was performance related\n    /**\n     * The volume of the sound, between 0 and 1.\n     *\n     * The actual output volume of a sound can be calculated using:\n     * <code>myInstance.volume * createjs.Sound._getVolume();</code>\n     *\n     * @property volume\n     * @type {Number}\n     * @default 1\n     */\n    this._volume = 1;\n    Object.defineProperty(this, \"volume\", {\n      get: this._getVolume,\n      set: this._setVolume\n    });\n\n    /**\n     * The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n     *\n     * Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio\n     * @property pan\n     * @type {Number}\n     * @default 0\n     */\n    this._pan = 0;\n    Object.defineProperty(this, \"pan\", {\n      get: this._getPan,\n      set: this._setPan\n    });\n\n    /**\n     * Audio sprite property used to determine the starting offset.\n     * @property startTime\n     * @type {Number}\n     * @default 0\n     * @since 0.6.1\n     */\n    this._startTime = Math.max(0, startTime || 0);\n    Object.defineProperty(this, \"startTime\", {\n      get: this._getStartTime,\n      set: this._setStartTime\n    });\n\n    /**\n     * Sets or gets the length of the audio clip, value is in milliseconds.\n     *\n     * @property duration\n     * @type {Number}\n     * @default 0\n     * @since 0.6.0\n     */\n    this._duration = Math.max(0, duration || 0);\n    Object.defineProperty(this, \"duration\", {\n      get: this._getDuration,\n      set: this._setDuration\n    });\n\n    /**\n     * Object that holds plugin specific resource need for audio playback.\n     * This is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\n     * HTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.\n     *\n     * @property playbackResource\n     * @type {Object}\n     * @default null\n     */\n    this._playbackResource = null;\n    Object.defineProperty(this, \"playbackResource\", {\n      get: this._getPlaybackResource,\n      set: this._setPlaybackResource\n    });\n    if (playbackResource !== false && playbackResource !== true) {\n      this._setPlaybackResource(playbackResource);\n    }\n\n    /**\n     * The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.\n     *\n     * @property position\n     * @type {Number}\n     * @default 0\n     * @since 0.6.0\n     */\n    this._position = 0;\n    Object.defineProperty(this, \"position\", {\n      get: this._getPosition,\n      set: this._setPosition\n    });\n\n    /**\n     * The number of play loops remaining. Negative values will loop infinitely.\n     *\n     * @property loop\n     * @type {Number}\n     * @default 0\n     * @public\n     * @since 0.6.0\n     */\n    this._loop = 0;\n    Object.defineProperty(this, \"loop\", {\n      get: this._getLoop,\n      set: this._setLoop\n    });\n\n    /**\n     * Mutes or unmutes the current audio instance.\n     *\n     * @property muted\n     * @type {Boolean}\n     * @default false\n     * @since 0.6.0\n     */\n    this._muted = false;\n    Object.defineProperty(this, \"muted\", {\n      get: this._getMuted,\n      set: this._setMuted\n    });\n\n    /**\n     * Pauses or resumes the current audio instance.\n     *\n     * @property paused\n     * @type {Boolean}\n     */\n    this._paused = false;\n    Object.defineProperty(this, \"paused\", {\n      get: this._getPaused,\n      set: this._setPaused\n    });\n\n    // Events\n    /**\n     * The event that is fired when playback has started successfully.\n     * @event succeeded\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when playback is interrupted. This happens when another sound with the same\n     * src property is played using an interrupt value that causes this instance to stop playing.\n     * @event interrupted\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when playback has failed. This happens when there are too many channels with the same\n     * src property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\n     * the sound could not be played, perhaps due to a 404 error.\n     * @event failed\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when a sound has completed playing but has loops remaining.\n     * @event loop\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n\n    /**\n     * The event that is fired when playback completes. This means that the sound has finished playing in its\n     * entirety, including its loop iterations.\n     * @event complete\n     * @param {Object} target The object that dispatched the event.\n     * @param {String} type The event type.\n     * @since 0.4.0\n     */\n  };\n\n  var p = createjs.extend(AbstractSoundInstance, createjs.EventDispatcher);\n\n  // Public Methods:\n  /**\n   * Play an instance. This method is intended to be called on SoundInstances that already exist (created\n   * with the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n   *\n   * <h4>Example</h4>\n   *\n   *      var myInstance = createjs.Sound.createInstance(mySrc);\n   *      myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n   *\n   * Note that if this sound is already playing, this call will still set the passed in parameters.\n  \t * <b>Parameters Deprecated</b><br />\n   * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n   *\n   * @method play\n   * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n   * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n  p.play = function (props) {\n    var playProps = createjs.PlayPropsConfig.create(props);\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this.applyPlayProps(playProps);\n      if (this._paused) {\n        this._setPaused(false);\n      }\n      return;\n    }\n    this._cleanUp();\n    createjs.Sound._playInstance(this, playProps); // make this an event dispatch??\n    return this;\n  };\n\n  /**\n   * Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\n   * will fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n      *\n      * If you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n   *\n   * <h4>Example</h4>\n   *\n   *     myInstance.stop();\n   *\n   * @method stop\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n  p.stop = function () {\n    this._position = 0;\n    this._paused = false;\n    this._handleStop();\n    this._cleanUp();\n    this.playState = createjs.Sound.PLAY_FINISHED;\n    return this;\n  };\n\n  /**\n   * Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work\n   * @method destroy\n   * @since 0.6.0\n   */\n  p.destroy = function () {\n    this._cleanUp();\n    this.src = null;\n    this.playbackResource = null;\n    this.removeAllEventListeners();\n  };\n\n  /**\n   * Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.\n   * @method applyPlayProps\n   * @param {PlayPropsConfig | Object} playProps A PlayPropsConfig or object containing the same properties.\n   * @since 0.6.1\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n  p.applyPlayProps = function (playProps) {\n    if (playProps.offset != null) {\n      this._setPosition(playProps.offset);\n    }\n    if (playProps.loop != null) {\n      this._setLoop(playProps.loop);\n    }\n    if (playProps.volume != null) {\n      this._setVolume(playProps.volume);\n    }\n    if (playProps.pan != null) {\n      this._setPan(playProps.pan);\n    }\n    if (playProps.startTime != null) {\n      this._setStartTime(playProps.startTime);\n      this._setDuration(playProps.duration);\n    }\n    return this;\n  };\n  p.toString = function () {\n    return \"[AbstractSoundInstance]\";\n  };\n\n  // get/set methods that allow support for IE8\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property.\n   * @method _getPaused\n   * @protected\n   * @return {boolean} If the instance is currently paused\n   * @since 0.6.0\n   */\n  p._getPaused = function () {\n    return this._paused;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property\n   * @method _setPaused\n   * @protected\n   * @param {boolean} value\n   * @since 0.6.0\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n  p._setPaused = function (value) {\n    if (value !== true && value !== false || this._paused == value) {\n      return;\n    }\n    if (value == true && this.playState != createjs.Sound.PLAY_SUCCEEDED) {\n      return;\n    }\n    this._paused = value;\n    if (value) {\n      this._pause();\n    } else {\n      this._resume();\n    }\n    clearTimeout(this.delayTimeoutId);\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n   * @method _setVolume\n   * @protected\n   * @param {Number} value The volume to set, between 0 and 1.\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   */\n  p._setVolume = function (value) {\n    if (value == this._volume) {\n      return this;\n    }\n    this._volume = Math.max(0, Math.min(1, value));\n    if (!this._muted) {\n      this._updateVolume();\n    }\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n   * @method _getVolume\n   * @protected\n   * @return {Number} The current volume of the sound instance.\n   */\n  p._getVolume = function () {\n    return this._volume;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n   * @method _setMuted\n   * @protected\n   * @param {Boolean} value If the sound should be muted.\n   * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n   * @since 0.6.0\n   */\n  p._setMuted = function (value) {\n    if (value !== true && value !== false) {\n      return;\n    }\n    this._muted = value;\n    this._updateVolume();\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n   * @method _getMuted\n   * @protected\n   * @return {Boolean} If the sound is muted.\n   * @since 0.6.0\n   */\n  p._getMuted = function () {\n    return this._muted;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n   * @method _setPan\n   * @protected\n   * @param {Number} value The pan value, between -1 (left) and 1 (right).\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   */\n  p._setPan = function (value) {\n    if (value == this._pan) {\n      return this;\n    }\n    this._pan = Math.max(-1, Math.min(1, value));\n    this._updatePan();\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n   * @method _getPan\n   * @protected\n   * @return {Number} The value of the pan, between -1 (left) and 1 (right).\n   */\n  p._getPan = function () {\n    return this._pan;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n   * @method _getPosition\n   * @protected\n   * @return {Number} The position of the playhead in the sound, in milliseconds.\n   */\n  p._getPosition = function () {\n    if (!this._paused && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._position = this._calculateCurrentPosition();\n    }\n    return this._position;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n   * @method _setPosition\n   * @protected\n   * @param {Number} value The position to place the playhead, in milliseconds.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   */\n  p._setPosition = function (value) {\n    this._position = Math.max(0, value);\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._updatePosition();\n    }\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n   * @method _getStartTime\n   * @protected\n   * @return {Number} The startTime of the sound instance in milliseconds.\n   */\n  p._getStartTime = function () {\n    return this._startTime;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n   * @method _setStartTime\n   * @protected\n   * @param {number} value The new startTime time in milli seconds.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   */\n  p._setStartTime = function (value) {\n    if (value == this._startTime) {\n      return this;\n    }\n    this._startTime = Math.max(0, value || 0);\n    this._updateStartTime();\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n   * @method _getDuration\n   * @protected\n   * @return {Number} The duration of the sound instance in milliseconds.\n   */\n  p._getDuration = function () {\n    return this._duration;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n   * @method _setDuration\n   * @protected\n   * @param {number} value The new duration time in milli seconds.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   * @since 0.6.0\n   */\n  p._setDuration = function (value) {\n    if (value == this._duration) {\n      return this;\n    }\n    this._duration = Math.max(0, value || 0);\n    this._updateDuration();\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n   * @method _setPlaybackResource\n   * @protected\n   * @param {Object} value The new playback resource.\n   * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n   * @since 0.6.0\n   **/\n  p._setPlaybackResource = function (value) {\n    this._playbackResource = value;\n    if (this._duration == 0 && this._playbackResource) {\n      this._setDurationFromSource();\n    }\n    return this;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n   * @method _getPlaybackResource\n   * @protected\n   * @param {Object} value The new playback resource.\n   * @return {Object} playback resource used for playing audio\n   * @since 0.6.0\n   **/\n  p._getPlaybackResource = function () {\n    return this._playbackResource;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n   * @method _getLoop\n   * @protected\n   * @return {number}\n   * @since 0.6.0\n   **/\n  p._getLoop = function () {\n    return this._loop;\n  };\n\n  /**\n   * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n   * @method _setLoop\n   * @protected\n   * @param {number} value The number of times to loop after play.\n   * @since 0.6.0\n   */\n  p._setLoop = function (value) {\n    if (this._playbackResource != null) {\n      // remove looping\n      if (this._loop != 0 && value == 0) {\n        this._removeLooping(value);\n      }\n      // add looping\n      else if (this._loop == 0 && value != 0) {\n        this._addLooping(value);\n      }\n    }\n    this._loop = value;\n  };\n\n  // Private Methods:\n  /**\n   * A helper method that dispatches all events for AbstractSoundInstance.\n   * @method _sendEvent\n   * @param {String} type The event type\n   * @protected\n   */\n  p._sendEvent = function (type) {\n    var event = new createjs.Event(type);\n    this.dispatchEvent(event);\n  };\n\n  /**\n   * Clean up the instance. Remove references and clean up any additional properties such as timers.\n   * @method _cleanUp\n   * @protected\n   */\n  p._cleanUp = function () {\n    clearTimeout(this.delayTimeoutId); // clear timeout that plays delayed sound\n    this._handleCleanUp();\n    this._paused = false;\n    createjs.Sound._playFinished(this); // TODO change to an event\n  };\n\n  /**\n   * The sound has been interrupted.\n   * @method _interrupt\n   * @protected\n   */\n  p._interrupt = function () {\n    this._cleanUp();\n    this.playState = createjs.Sound.PLAY_INTERRUPTED;\n    this._sendEvent(\"interrupted\");\n  };\n\n  /**\n   * Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\n   * src is loaded, otherwise playback will fail.\n   * @method _beginPlaying\n   * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n   * @return {Boolean} If playback succeeded.\n   * @protected\n   */\n  // OJR FlashAudioSoundInstance overwrites\n  p._beginPlaying = function (playProps) {\n    this._setPosition(playProps.offset);\n    this._setLoop(playProps.loop);\n    this._setVolume(playProps.volume);\n    this._setPan(playProps.pan);\n    if (playProps.startTime != null) {\n      this._setStartTime(playProps.startTime);\n      this._setDuration(playProps.duration);\n    }\n    if (this._playbackResource != null && this._position < this._duration) {\n      this._paused = false;\n      this._handleSoundReady();\n      this.playState = createjs.Sound.PLAY_SUCCEEDED;\n      this._sendEvent(\"succeeded\");\n      return true;\n    } else {\n      this._playFailed();\n      return false;\n    }\n  };\n\n  /**\n   * Play has failed, which can happen for a variety of reasons.\n   * Cleans up instance and dispatches failed event\n   * @method _playFailed\n   * @private\n   */\n  p._playFailed = function () {\n    this._cleanUp();\n    this.playState = createjs.Sound.PLAY_FAILED;\n    this._sendEvent(\"failed\");\n  };\n\n  /**\n   * Audio has finished playing. Manually loop it if required.\n   * @method _handleSoundComplete\n   * @param event\n   * @protected\n   */\n  p._handleSoundComplete = function (event) {\n    this._position = 0; // have to set this as it can be set by pause during playback\n\n    if (this._loop != 0) {\n      this._loop--; // NOTE this introduces a theoretical limit on loops = float max size x 2 - 1\n      this._handleLoop();\n      this._sendEvent(\"loop\");\n      return;\n    }\n    this._cleanUp();\n    this.playState = createjs.Sound.PLAY_FINISHED;\n    this._sendEvent(\"complete\");\n  };\n\n  // Plugin specific code\n  /**\n   * Handles starting playback when the sound is ready for playing.\n   * @method _handleSoundReady\n   * @protected\n  \t */\n  p._handleSoundReady = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function used to update the volume based on the instance volume, master volume, instance mute value,\n   * and master mute value.\n   * @method _updateVolume\n   * @protected\n   */\n  p._updateVolume = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function used to update the pan\n   * @method _updatePan\n   * @protected\n   * @since 0.6.0\n   */\n  p._updatePan = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function used to update the startTime of the audio.\n   * @method _updateStartTime\n   * @protected\n   * @since 0.6.1\n   */\n  p._updateStartTime = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function used to update the duration of the audio.\n   * @method _updateDuration\n   * @protected\n   * @since 0.6.0\n   */\n  p._updateDuration = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function used to get the duration of the audio from the source we'll be playing.\n   * @method _updateDuration\n   * @protected\n   * @since 0.6.0\n   */\n  p._setDurationFromSource = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function that calculates the current position of the playhead and sets this._position to that value\n   * @method _calculateCurrentPosition\n   * @protected\n   * @since 0.6.0\n   */\n  p._calculateCurrentPosition = function () {\n    // plugin specific code that sets this.position\n  };\n\n  /**\n   * Internal function used to update the position of the playhead.\n   * @method _updatePosition\n   * @protected\n   * @since 0.6.0\n   */\n  p._updatePosition = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when looping is removed during playback.\n   * @method _removeLooping\n   * @param {number} value The number of times to loop after play.\n   * @protected\n   * @since 0.6.0\n   */\n  p._removeLooping = function (value) {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when looping is added during playback.\n   * @method _addLooping\n   * @param {number} value The number of times to loop after play.\n   * @protected\n   * @since 0.6.0\n   */\n  p._addLooping = function (value) {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when pausing playback\n   * @method _pause\n   * @protected\n   * @since 0.6.0\n   */\n  p._pause = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when resuming playback\n   * @method _resume\n   * @protected\n   * @since 0.6.0\n   */\n  p._resume = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when stopping playback\n   * @method _handleStop\n   * @protected\n   * @since 0.6.0\n   */\n  p._handleStop = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when AbstractSoundInstance is being cleaned up\n   * @method _handleCleanUp\n   * @protected\n   * @since 0.6.0\n   */\n  p._handleCleanUp = function () {\n    // plugin specific code\n  };\n\n  /**\n   * Internal function called when AbstractSoundInstance has played to end and is looping\n   * @method _handleLoop\n   * @protected\n   * @since 0.6.0\n   */\n  p._handleLoop = function () {\n    // plugin specific code\n  };\n  createjs.AbstractSoundInstance = createjs.promote(AbstractSoundInstance, \"EventDispatcher\");\n  createjs.DefaultSoundInstance = createjs.AbstractSoundInstance; // used when no plugin is supported\n})();\n\n//##############################################################################\n// AbstractPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  // constructor:\n  /**\n  * A default plugin class used as a base for all other plugins.\n  * @class AbstractPlugin\n  * @constructor\n  * @since 0.6.0\n  */\n  var AbstractPlugin = function () {\n    // private properties:\n    /**\n     * The capabilities of the plugin.\n     * method and is used internally.\n     * @property _capabilities\n     * @type {Object}\n     * @default null\n     * @protected\n     * @static\n     */\n    this._capabilities = null;\n\n    /**\n     * Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.\n     * @type {Object}\n     * @protected\n     */\n    this._loaders = {};\n\n    /**\n     * Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\n     * is currently loading, or has completed loading.  Can be used to store non boolean data after loading\n     * is complete (for example arrayBuffers for web audio).\n     * @property _audioSources\n     * @type {Object}\n     * @protected\n     */\n    this._audioSources = {};\n\n    /**\n     * Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\n     * and properly destroy them if sources are removed\n     * @type {Object}\n     * @protected\n     */\n    this._soundInstances = {};\n\n    /**\n     * The internal master volume value of the plugin.\n     * @property _volume\n     * @type {Number}\n     * @default 1\n     * @protected\n     */\n    this._volume = 1;\n\n    /**\n     * A reference to a loader class used by a plugin that must be set.\n     * @type {Object}\n     * @protected\n     */\n    this._loaderClass;\n\n    /**\n     * A reference to an AbstractSoundInstance class used by a plugin that must be set.\n     * @type {Object}\n     * @protected;\n     */\n    this._soundInstanceClass;\n  };\n  var p = AbstractPlugin.prototype;\n\n  // Static Properties:\n  // NOTE THESE PROPERTIES NEED TO BE ADDED TO EACH PLUGIN\n  /**\n   * The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.\n   * @property _capabilities\n   * @type {Object}\n   * @default null\n   * @private\n   * @static\n   */\n  AbstractPlugin._capabilities = null;\n\n  /**\n   * Determine if the plugin can be used in the current browser/OS.\n   * @method isSupported\n   * @return {Boolean} If the plugin can be initialized.\n   * @static\n   */\n  AbstractPlugin.isSupported = function () {\n    return true;\n  };\n\n  // public methods:\n  /**\n   * Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\n   * Note all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\n   * can use to assist with preloading.\n   * @method register\n   * @param {String} loadItem An Object containing the source of the audio\n   * Note that not every plugin will manage this value.\n   * @return {Object} A result object, containing a \"tag\" for preloading purposes.\n   */\n  p.register = function (loadItem) {\n    var loader = this._loaders[loadItem.src];\n    if (loader && !loader.canceled) {\n      return this._loaders[loadItem.src];\n    } // already loading/loaded this, so don't load twice\n    // OJR potential issue that we won't be firing loaded event, might need to trigger if this is already loaded?\n    this._audioSources[loadItem.src] = true;\n    this._soundInstances[loadItem.src] = [];\n    loader = new this._loaderClass(loadItem);\n    loader.on(\"complete\", this._handlePreloadComplete, this);\n    this._loaders[loadItem.src] = loader;\n    return loader;\n  };\n\n  // note sound calls register before calling preload\n  /**\n   * Internally preload a sound.\n   * @method preload\n   * @param {Loader} loader The sound URI to load.\n   */\n  p.preload = function (loader) {\n    loader.on(\"error\", this._handlePreloadError, this);\n    loader.load();\n  };\n\n  /**\n   * Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\n   * or has already finished loading.\n   * @method isPreloadStarted\n   * @param {String} src The sound URI to check.\n   * @return {Boolean}\n   */\n  p.isPreloadStarted = function (src) {\n    return this._audioSources[src] != null;\n  };\n\n  /**\n   * Checks if preloading has finished for a specific source.\n   * @method isPreloadComplete\n   * @param {String} src The sound URI to load.\n   * @return {Boolean}\n   */\n  p.isPreloadComplete = function (src) {\n    return !(this._audioSources[src] == null || this._audioSources[src] == true);\n  };\n\n  /**\n   * Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n   * @method removeSound\n   * @param {String} src The sound URI to unload.\n   */\n  p.removeSound = function (src) {\n    if (!this._soundInstances[src]) {\n      return;\n    }\n    for (var i = this._soundInstances[src].length; i--;) {\n      var item = this._soundInstances[src][i];\n      item.destroy();\n    }\n    delete this._soundInstances[src];\n    delete this._audioSources[src];\n    if (this._loaders[src]) {\n      this._loaders[src].destroy();\n    }\n    delete this._loaders[src];\n  };\n\n  /**\n   * Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n   * @method removeAllSounds\n   * @param {String} src The sound URI to unload.\n   */\n  p.removeAllSounds = function () {\n    for (var key in this._audioSources) {\n      this.removeSound(key);\n    }\n  };\n\n  /**\n   * Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.\n   * @method create\n   * @param {String} src The sound source to use.\n   * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n   * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n   * @return {AbstractSoundInstance} A sound instance for playback and control.\n   */\n  p.create = function (src, startTime, duration) {\n    if (!this.isPreloadStarted(src)) {\n      this.preload(this.register(src));\n    }\n    var si = new this._soundInstanceClass(src, startTime, duration, this._audioSources[src]);\n    if (this._soundInstances[src]) {\n      this._soundInstances[src].push(si);\n    }\n\n    // Plugins that don't have a setVolume should implement a setMasterVolune/setMasterMute\n    // So we have to check that here.\n    si.setMasterVolume && si.setMasterVolume(createjs.Sound.volume);\n    si.setMasterMute && si.setMasterMute(createjs.Sound.muted);\n    return si;\n  };\n\n  // if a plugin does not support volume and mute, it should set these to null\n  /**\n   * Set the master volume of the plugin, which affects all SoundInstances.\n   * @method setVolume\n   * @param {Number} value The volume to set, between 0 and 1.\n   * @return {Boolean} If the plugin processes the setVolume call (true). The Sound class will affect all the\n   * instances manually otherwise.\n   */\n  p.setVolume = function (value) {\n    this._volume = value;\n    this._updateVolume();\n    return true;\n  };\n\n  /**\n   * Get the master volume of the plugin, which affects all SoundInstances.\n   * @method getVolume\n   * @return {Number} The volume level, between 0 and 1.\n   */\n  p.getVolume = function () {\n    return this._volume;\n  };\n\n  /**\n   * Mute all sounds via the plugin.\n   * @method setMute\n   * @param {Boolean} value If all sound should be muted or not. Note that plugin-level muting just looks up\n   * the mute value of Sound {{#crossLink \"Sound/muted:property\"}}{{/crossLink}}, so this property is not used here.\n   * @return {Boolean} If the mute call succeeds.\n   */\n  p.setMute = function (value) {\n    this._updateVolume();\n    return true;\n  };\n\n  // plugins should overwrite this method\n  p.toString = function () {\n    return \"[AbstractPlugin]\";\n  };\n\n  // private methods:\n  /**\n   * Handles internal preload completion.\n   * @method _handlePreloadComplete\n   * @param event\n   * @protected\n   */\n  p._handlePreloadComplete = function (event) {\n    var src = event.target.getItem().src;\n    this._audioSources[src] = event.result;\n    if (!this._soundInstances[src]) {\n      return;\n    }\n    for (var i = 0, l = this._soundInstances[src].length; i < l; i++) {\n      var item = this._soundInstances[src][i];\n      item.playbackResource = this._audioSources[src];\n      // ToDo consider adding play call here if playstate == playfailed\n      this._soundInstances[src] = null;\n    }\n  };\n\n  /**\n   * Handles internal preload errors\n   * @method _handlePreloadError\n   * @param event\n   * @protected\n   */\n  p._handlePreloadError = function (event) {\n    //delete(this._audioSources[src]);\n  };\n\n  /**\n   * Set the gain value for master audio. Should not be called externally.\n   * @method _updateVolume\n   * @protected\n   */\n  p._updateVolume = function () {\n    // Plugin Specific code\n  };\n  createjs.AbstractPlugin = AbstractPlugin;\n})();\n\n//##############################################################################\n// WebAudioLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\n   * the preloader, and the load method is called when the asset needs to be requested.\n   *\n   * @class WebAudioLoader\n   * @param {String} loadItem The item to be loaded\n   * @extends XHRRequest\n   * @protected\n   */\n  function Loader(loadItem) {\n    this.AbstractLoader_constructor(loadItem, true, createjs.Types.SOUND);\n  }\n  ;\n  var p = createjs.extend(Loader, createjs.AbstractLoader);\n\n  /**\n   * web audio context required for decoding audio\n   * @property context\n   * @type {AudioContext}\n   * @static\n   */\n  Loader.context = null;\n\n  // public methods\n  p.toString = function () {\n    return \"[WebAudioLoader]\";\n  };\n\n  // private methods\n  p._createRequest = function () {\n    this._request = new createjs.XHRRequest(this._item, false);\n    this._request.setResponseType(\"arraybuffer\");\n  };\n  p._sendComplete = function (event) {\n    // OJR we leave this wrapped in Loader because we need to reference src and the handler only receives a single argument, the decodedAudio\n    Loader.context.decodeAudioData(this._rawResult, createjs.proxy(this._handleAudioDecoded, this), createjs.proxy(this._sendError, this));\n  };\n\n  /**\n  * The audio has been decoded.\n  * @method handleAudioDecoded\n  * @param decoded\n  * @protected\n  */\n  p._handleAudioDecoded = function (decodedAudio) {\n    this._result = decodedAudio;\n    this.AbstractLoader__sendComplete();\n  };\n  createjs.WebAudioLoader = createjs.promote(Loader, \"AbstractLoader\");\n})();\n\n//##############################################################################\n// WebAudioSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n *\n * WebAudioSoundInstance exposes audioNodes for advanced users.\n *\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @class WebAudioSoundInstance\n * @extends AbstractSoundInstance\n * @constructor\n */\n(function () {\n  \"use strict\";\n\n  function WebAudioSoundInstance(src, startTime, duration, playbackResource) {\n    this.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n    // public properties\n    /**\n     * NOTE this is only intended for use by advanced users.\n     * <br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.\n     * @property gainNode\n     * @type {AudioGainNode}\n     * @since 0.4.0\n     *\n     */\n    this.gainNode = s.context.createGain();\n\n    /**\n     * NOTE this is only intended for use by advanced users.\n     * <br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n     * @property panNode\n     * @type {AudioPannerNode}\n     * @since 0.4.0\n     */\n    this.panNode = s.context.createPanner();\n    this.panNode.panningModel = s._panningModel;\n    this.panNode.connect(this.gainNode);\n    this._updatePan();\n\n    /**\n     * NOTE this is only intended for use by advanced users.\n     * <br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.\n     * @property sourceNode\n     * @type {AudioNode}\n     * @since 0.4.0\n     *\n     */\n    this.sourceNode = null;\n\n    // private properties\n    /**\n     * Timeout that is created internally to handle sound playing to completion.\n     * Stored so we can remove it when stop, pause, or cleanup are called\n     * @property _soundCompleteTimeout\n     * @type {timeoutVariable}\n     * @default null\n     * @protected\n     * @since 0.4.0\n     */\n    this._soundCompleteTimeout = null;\n\n    /**\n     * NOTE this is only intended for use by very advanced users.\n     * _sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\n     * looping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n     * @property _sourceNodeNext\n     * @type {AudioNode}\n     * @default null\n     * @protected\n     * @since 0.4.1\n     *\n     */\n    this._sourceNodeNext = null;\n\n    /**\n     * Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.\n     * @property _playbackStartTime\n     * @type {Number}\n     * @default 0\n     * @protected\n     * @since 0.4.0\n     */\n    this._playbackStartTime = 0;\n\n    // Proxies, make removing listeners easier.\n    this._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n  }\n  ;\n  var p = createjs.extend(WebAudioSoundInstance, createjs.AbstractSoundInstance);\n  var s = WebAudioSoundInstance;\n\n  /**\n   * Note this is only intended for use by advanced users.\n   * <br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n   \t * @property context\n   * @type {AudioContext}\n   * @static\n   * @since 0.6.0\n   */\n  s.context = null;\n\n  /**\n   * Note this is only intended for use by advanced users.\n   * <br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \n   * This is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n   \t * @property _scratchBuffer\n   * @type {AudioBufferSourceNode}\n   * @static\n   */\n  s._scratchBuffer = null;\n\n  /**\n   * Note this is only intended for use by advanced users.\n   * <br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>\n   * @property destinationNode\n   * @type {AudioNode}\n   * @static\n   * @since 0.6.0\n   */\n  s.destinationNode = null;\n\n  /**\n   * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n   * @property _panningModel\n   * @type {Number / String}\n   * @protected\n   * @static\n   * @since 0.6.0\n   */\n  s._panningModel = \"equalpower\";\n\n  // Public methods\n  p.destroy = function () {\n    this.AbstractSoundInstance_destroy();\n    this.panNode.disconnect(0);\n    this.panNode = null;\n    this.gainNode.disconnect(0);\n    this.gainNode = null;\n  };\n  p.toString = function () {\n    return \"[WebAudioSoundInstance]\";\n  };\n\n  // Private Methods\n  p._updatePan = function () {\n    this.panNode.setPosition(this._pan, 0, -0.5);\n    // z need to be -0.5 otherwise the sound only plays in left, right, or center\n  };\n\n  p._removeLooping = function (value) {\n    this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n  };\n  p._addLooping = function (value) {\n    if (this.playState != createjs.Sound.PLAY_SUCCEEDED) {\n      return;\n    }\n    this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n  };\n  p._setDurationFromSource = function () {\n    this._duration = this.playbackResource.duration * 1000;\n  };\n  p._handleCleanUp = function () {\n    if (this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n      this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n    }\n    if (this.gainNode.numberOfOutputs != 0) {\n      this.gainNode.disconnect(0);\n    }\n    // OJR there appears to be a bug that this doesn't always work in webkit (Chrome and Safari). According to the documentation, this should work.\n\n    clearTimeout(this._soundCompleteTimeout);\n    this._playbackStartTime = 0; // This is used by _getPosition\n  };\n\n  /**\n   * Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection\n   * @method _cleanUpAudioNode\n   * @param audioNode\n   * @return {audioNode}\n   * @protected\n   * @since 0.4.1\n   */\n  p._cleanUpAudioNode = function (audioNode) {\n    if (audioNode) {\n      audioNode.stop(0);\n      audioNode.disconnect(0);\n      // necessary to prevent leak on iOS Safari 7-9. will throw in almost all other\n      // browser implementations.\n      if (createjs.BrowserDetect.isIOS) {\n        try {\n          audioNode.buffer = s._scratchBuffer;\n        } catch (e) {}\n      }\n      audioNode = null;\n    }\n    return audioNode;\n  };\n  p._handleSoundReady = function (event) {\n    this.gainNode.connect(s.destinationNode); // this line can cause a memory leak.  Nodes need to be disconnected from the audioDestination or any sequence that leads to it.\n\n    var dur = this._duration * 0.001,\n      pos = Math.min(Math.max(0, this._position) * 0.001, dur);\n    this.sourceNode = this._createAndPlayAudioNode(s.context.currentTime - dur, pos);\n    this._playbackStartTime = this.sourceNode.startTime - pos;\n    this._soundCompleteTimeout = setTimeout(this._endedHandler, (dur - pos) * 1000);\n    if (this._loop != 0) {\n      this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n    }\n  };\n\n  /**\n   * Creates an audio node using the current src and context, connects it to the gain node, and starts playback.\n   * @method _createAndPlayAudioNode\n   * @param {Number} startTime The time to add this to the web audio context, in seconds.\n   * @param {Number} offset The amount of time into the src audio to start playback, in seconds.\n   * @return {audioNode}\n   * @protected\n   * @since 0.4.1\n   */\n  p._createAndPlayAudioNode = function (startTime, offset) {\n    var audioNode = s.context.createBufferSource();\n    audioNode.buffer = this.playbackResource;\n    audioNode.connect(this.panNode);\n    var dur = this._duration * 0.001;\n    audioNode.startTime = startTime + dur;\n    audioNode.start(audioNode.startTime, offset + this._startTime * 0.001, dur - offset);\n    return audioNode;\n  };\n  p._pause = function () {\n    this._position = (s.context.currentTime - this._playbackStartTime) * 1000; // * 1000 to give milliseconds, lets us restart at same point\n    this.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n    this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n    if (this.gainNode.numberOfOutputs != 0) {\n      this.gainNode.disconnect(0);\n    }\n    clearTimeout(this._soundCompleteTimeout);\n  };\n  p._resume = function () {\n    this._handleSoundReady();\n  };\n\n  /*\n  p._handleStop = function () {\n  \t// web audio does not need to do anything extra\n  };\n  */\n\n  p._updateVolume = function () {\n    var newVolume = this._muted ? 0 : this._volume;\n    if (newVolume != this.gainNode.gain.value) {\n      this.gainNode.gain.value = newVolume;\n    }\n  };\n  p._calculateCurrentPosition = function () {\n    return (s.context.currentTime - this._playbackStartTime) * 1000; // pos in seconds * 1000 to give milliseconds\n  };\n\n  p._updatePosition = function () {\n    this.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n    this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n    clearTimeout(this._soundCompleteTimeout);\n    if (!this._paused) {\n      this._handleSoundReady();\n    }\n  };\n\n  // OJR we are using a look ahead approach to ensure smooth looping.\n  // We add _sourceNodeNext to the audio context so that it starts playing even if this callback is delayed.\n  // This technique is described here:  http://www.html5rocks.com/en/tutorials/audio/scheduling/\n  // NOTE the cost of this is that our audio loop may not always match the loop event timing precisely.\n  p._handleLoop = function () {\n    this._cleanUpAudioNode(this.sourceNode);\n    this.sourceNode = this._sourceNodeNext;\n    this._playbackStartTime = this.sourceNode.startTime;\n    this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n    this._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);\n  };\n  p._updateDuration = function () {\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._pause();\n      this._resume();\n    }\n  };\n  createjs.WebAudioSoundInstance = createjs.promote(WebAudioSoundInstance, \"AbstractSoundInstance\");\n})();\n\n//##############################################################################\n// WebAudioPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\n   * anywhere that it is supported. To change plugin priority, check out the Sound API\n   * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n  \t * <h4>Known Browser and OS issues for Web Audio</h4>\n   * <b>Firefox 25</b>\n   * <li>\n   *     mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n   *     <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n   *     extension, until this bug is resolved\n   * </li>\n   *\n   * <b>Webkit (Chrome and Safari)</b>\n   * <li>\n   *     AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n   * \t   are playing a lot of audio files.\n   * </li>\n   *\n   * <b>iOS 6 limitations</b>\n   * <ul>\n   *     <li>\n   *         Sound is initially muted and will only unmute through play being called inside a user initiated event\n   *         (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n   *         class for a full overview of the limitations, and how to get around them.\n   *     </li>\n   *\t   <li>\n   *\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n   *\t       this bug by ensuring the audio and video audio share the same sample rate.\n   *\t   </li>\n   * </ul>\n   * @class WebAudioPlugin\n   * @extends AbstractPlugin\n   * @constructor\n   * @since 0.4.0\n   */\n  function WebAudioPlugin() {\n    this.AbstractPlugin_constructor();\n\n    // Private Properties\n    /**\n     * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n     * @property _panningModel\n     * @type {Number / String}\n     * @protected\n     */\n    this._panningModel = s._panningModel;\n    ;\n\n    /**\n     * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n     * need to be created within this context.\n     * @property context\n     * @type {AudioContext}\n     */\n    this.context = s.context;\n\n    /**\n     * A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\n     * It is connected to <code>context.destination</code>.\n     *\n     * Can be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.\n     * @property dynamicsCompressorNode\n     * @type {AudioNode}\n     */\n    this.dynamicsCompressorNode = this.context.createDynamicsCompressor();\n    this.dynamicsCompressorNode.connect(this.context.destination);\n\n    /**\n     * A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n     *\n     * Can be accessed by advanced users through createjs.Sound.activePlugin.gainNode.\n     * @property gainNode\n     * @type {AudioGainNode}\n     */\n    this.gainNode = this.context.createGain();\n    this.gainNode.connect(this.dynamicsCompressorNode);\n    createjs.WebAudioSoundInstance.destinationNode = this.gainNode;\n    this._capabilities = s._capabilities;\n    this._loaderClass = createjs.WebAudioLoader;\n    this._soundInstanceClass = createjs.WebAudioSoundInstance;\n    this._addPropsToClasses();\n  }\n  var p = createjs.extend(WebAudioPlugin, createjs.AbstractPlugin);\n\n  // Static Properties\n  var s = WebAudioPlugin;\n  /**\n   * The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\n   * method and is used internally.\n   * @property _capabilities\n   * @type {Object}\n   * @default null\n   * @private\n   * @static\n   */\n  s._capabilities = null;\n\n  /**\n   * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n   * @property _panningModel\n   * @type {Number / String}\n   * @private\n   * @static\n   */\n  s._panningModel = \"equalpower\";\n\n  /**\n   * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n   * need to be created within this context.\n   *\n   * Advanced users can set this to an existing context, but <b>must</b> do so before they call\n   * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n   *\n   * @property context\n   * @type {AudioContext}\n   * @static\n   */\n  s.context = null;\n\n  /**\n   * The scratch buffer that will be assigned to the buffer property of a source node on close.\n   * Works around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n   *\n   * Advanced users can set this to an existing source node, but <b>must</b> do so before they call\n   * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n   *\n   * @property _scratchBuffer\n   * @type {AudioBuffer}\n   * @private\n   * @static\n   */\n  s._scratchBuffer = null;\n\n  /**\n   * Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\n   * empty sound.\n   * @property _unlocked\n   * @type {boolean}\n   * @since 0.6.2\n   * @private\n   */\n  s._unlocked = false;\n\n  /**\n   * The default sample rate used when checking for iOS compatibility. See {{#crossLink \"WebAudioPlugin/_createAudioContext\"}}{{/crossLink}}.\n   * @property DEFAULT_SAMPLE_REATE\n   * @type {number}\n   * @default 44100\n   * @static\n   */\n  s.DEFAULT_SAMPLE_RATE = 44100;\n\n  // Static Public Methods\n  /**\n   * Determine if the plugin can be used in the current browser/OS.\n   * @method isSupported\n   * @return {Boolean} If the plugin can be initialized.\n   * @static\n   */\n  s.isSupported = function () {\n    // check if this is some kind of mobile device, Web Audio works with local protocol under PhoneGap and it is unlikely someone is trying to run a local file\n    var isMobilePhoneGap = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;\n    // OJR isMobile may be redundant with _isFileXHRSupported available.  Consider removing.\n    if (location.protocol == \"file:\" && !isMobilePhoneGap && !this._isFileXHRSupported()) {\n      return false;\n    } // Web Audio requires XHR, which is not usually available locally\n    s._generateCapabilities();\n    if (s.context == null) {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n   * require the first sound to be played inside of a user initiated event (touch/click).  This is called when\n   * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\n   * for example).\n   *\n   * <h4>Example</h4>\n   *\n   *     function handleTouch(event) {\n   *         createjs.WebAudioPlugin.playEmptySound();\n   *     }\n   *\n   * @method playEmptySound\n   * @static\n   * @since 0.4.1\n   */\n  s.playEmptySound = function () {\n    if (s.context == null) {\n      return;\n    }\n    var source = s.context.createBufferSource();\n    source.buffer = s._scratchBuffer;\n    source.connect(s.context.destination);\n    source.start(0, 0, 0);\n  };\n\n  // Static Private Methods\n  /**\n   * Determine if XHR is supported, which is necessary for web audio.\n   * @method _isFileXHRSupported\n   * @return {Boolean} If XHR is supported.\n   * @since 0.4.2\n   * @private\n   * @static\n   */\n  s._isFileXHRSupported = function () {\n    // it's much easier to detect when something goes wrong, so let's start optimistically\n    var supported = true;\n    var xhr = new XMLHttpRequest();\n    try {\n      xhr.open(\"GET\", \"WebAudioPluginTest.fail\", false); // loading non-existant file triggers 404 only if it could load (synchronous call)\n    } catch (error) {\n      // catch errors in cases where the onerror is passed by\n      supported = false;\n      return supported;\n    }\n    xhr.onerror = function () {\n      supported = false;\n    }; // cause irrelevant\n    // with security turned off, we can get empty success results, which is actually a failed read (status code 0?)\n    xhr.onload = function () {\n      supported = this.status == 404 || this.status == 200 || this.status == 0 && this.response != \"\";\n    };\n    try {\n      xhr.send();\n    } catch (error) {\n      // catch errors in cases where the onerror is passed by\n      supported = false;\n    }\n    return supported;\n  };\n\n  /**\n   * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n   * method for an overview of plugin capabilities.\n   * @method _generateCapabilities\n   * @static\n   * @private\n   */\n  s._generateCapabilities = function () {\n    if (s._capabilities != null) {\n      return;\n    }\n    // Web Audio can be in any formats supported by the audio element, from http://www.w3.org/TR/webaudio/#AudioContext-section\n    var t = document.createElement(\"audio\");\n    if (t.canPlayType == null) {\n      return null;\n    }\n    if (s.context == null) {\n      s.context = s._createAudioContext();\n      if (s.context == null) {\n        return null;\n      }\n    }\n    if (s._scratchBuffer == null) {\n      s._scratchBuffer = s.context.createBuffer(1, 1, 22050);\n    }\n    s._compatibilitySetUp();\n\n    // Listen for document level clicks to unlock WebAudio on iOS. See the _unlock method.\n    if (\"ontouchstart\" in window && s.context.state != \"running\") {\n      s._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n      document.addEventListener(\"mousedown\", s._unlock, true);\n      document.addEventListener(\"touchstart\", s._unlock, true);\n      document.addEventListener(\"touchend\", s._unlock, true);\n    }\n    s._capabilities = {\n      panning: true,\n      volume: true,\n      tracks: -1\n    };\n\n    // determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n    var supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n    var extensionMap = createjs.Sound.EXTENSION_MAP;\n    for (var i = 0, l = supportedExtensions.length; i < l; i++) {\n      var ext = supportedExtensions[i];\n      var playType = extensionMap[ext] || ext;\n      s._capabilities[ext] = t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\" || t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\";\n    } // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\n    // 0=no output, 1=mono, 2=stereo, 4=surround, 6=5.1 surround.\n    // See http://www.w3.org/TR/webaudio/#AudioChannelSplitter for more details on channels.\n    if (s.context.destination.numberOfChannels < 2) {\n      s._capabilities.panning = false;\n    }\n  };\n\n  /**\n   * Create an audio context for the sound.\n   *\n   * This method handles both vendor prefixes (specifically webkit support), as well as a case on iOS where\n   * audio played with a different sample rate may play garbled when first started. The default sample rate is\n   * 44,100, however it can be changed using the {{#crossLink \"WebAudioPlugin/DEFAULT_SAMPLE_RATE:property\"}}{{/crossLink}}.\n   * @method _createAudioContext\n   * @return {AudioContext | webkitAudioContext}\n   * @private\n   * @static\n   * @since 1.0.0\n   */\n  s._createAudioContext = function () {\n    // Slightly modified version of https://github.com/Jam3/ios-safe-audio-context\n    // Resolves issues with first-run contexts playing garbled on iOS.\n    var AudioCtor = window.AudioContext || window.webkitAudioContext;\n    if (AudioCtor == null) {\n      return null;\n    }\n    var context = new AudioCtor();\n\n    // Check if hack is necessary. Only occurs in iOS6+ devices\n    // and only when you first boot the iPhone, or play a audio/video\n    // with a different sample rate\n    if (/(iPhone|iPad)/i.test(navigator.userAgent) && context.sampleRate !== s.DEFAULT_SAMPLE_RATE) {\n      var buffer = context.createBuffer(1, 1, s.DEFAULT_SAMPLE_RATE),\n        dummy = context.createBufferSource();\n      dummy.buffer = buffer;\n      dummy.connect(context.destination);\n      dummy.start(0);\n      dummy.disconnect();\n      context.close(); // dispose old context\n\n      context = new AudioCtor();\n    }\n    return context;\n  };\n\n  /**\n   * Set up compatibility if only deprecated web audio calls are supported.\n   * See http://www.w3.org/TR/webaudio/#DeprecationNotes\n   * Needed so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\n   * don't support new calls.\n   *\n   * @method _compatibilitySetUp\n   * @static\n   * @private\n   * @since 0.4.2\n   */\n  s._compatibilitySetUp = function () {\n    s._panningModel = \"equalpower\";\n    //assume that if one new call is supported, they all are\n    if (s.context.createGain) {\n      return;\n    }\n\n    // simple name change, functionality the same\n    s.context.createGain = s.context.createGainNode;\n\n    // source node, add to prototype\n    var audioNode = s.context.createBufferSource();\n    audioNode.__proto__.start = audioNode.__proto__.noteGrainOn; // note that noteGrainOn requires all 3 parameters\n    audioNode.__proto__.stop = audioNode.__proto__.noteOff;\n\n    // panningModel\n    s._panningModel = 0;\n  };\n\n  /**\n   * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n   * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n   * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n   *\n   * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n   * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n   * stick with `mousedown` and `touchend`.\n   * @method _unlock\n   * @since 0.6.2\n   * @private\n   */\n  s._unlock = function () {\n    if (s._unlocked) {\n      return;\n    }\n    s.playEmptySound();\n    if (s.context.state == \"running\") {\n      document.removeEventListener(\"mousedown\", s._unlock, true);\n      document.removeEventListener(\"touchend\", s._unlock, true);\n      document.removeEventListener(\"touchstart\", s._unlock, true);\n      s._unlocked = true;\n    }\n  };\n\n  // Public Methods\n  p.toString = function () {\n    return \"[WebAudioPlugin]\";\n  };\n\n  // Private Methods\n  /**\n   * Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.\n   * @method _addPropsToClasses\n   * @static\n   * @protected\n   * @since 0.6.0\n   */\n  p._addPropsToClasses = function () {\n    var c = this._soundInstanceClass;\n    c.context = this.context;\n    c._scratchBuffer = s._scratchBuffer;\n    c.destinationNode = this.gainNode;\n    c._panningModel = this._panningModel;\n    this._loaderClass.context = this.context;\n  };\n\n  /**\n   * Set the gain value for master audio. Should not be called externally.\n   * @method _updateVolume\n   * @protected\n   */\n  p._updateVolume = function () {\n    var newVolume = createjs.Sound._masterMute ? 0 : this._volume;\n    if (newVolume != this.gainNode.gain.value) {\n      this.gainNode.gain.value = newVolume;\n    }\n  };\n  createjs.WebAudioPlugin = createjs.promote(WebAudioPlugin, \"AbstractPlugin\");\n})();\n\n//##############################################################################\n// HTMLAudioTagPool.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * HTMLAudioTagPool is an object pool for HTMLAudio tag instances.\n   * @class HTMLAudioTagPool\n   * @param {String} src The source of the channel.\n   * @protected\n   */\n  function HTMLAudioTagPool() {\n    throw \"HTMLAudioTagPool cannot be instantiated\";\n  }\n  var s = HTMLAudioTagPool;\n\n  // Static Properties\n  /**\n   * A hash lookup of each base audio tag, indexed by the audio source.\n   * @property _tags\n   * @type {{}}\n   * @static\n   * @private\n   */\n  s._tags = {};\n\n  /**\n   * An object pool for html audio tags\n   * @property _tagPool\n   * @type {TagPool}\n   * @static\n   * @private\n   */\n  s._tagPool = new TagPool();\n\n  /**\n   * A hash lookup of if a base audio tag is available, indexed by the audio source\n   * @property _tagsUsed\n   * @type {{}}\n   * @private\n   * @static\n   */\n  s._tagUsed = {};\n\n  // Static Methods\n  /**\n    * Get an audio tag with the given source.\n    * @method get\n    * @param {String} src The source file used by the audio tag.\n    * @static\n    */\n  s.get = function (src) {\n    var t = s._tags[src];\n    if (t == null) {\n      // create new base tag\n      t = s._tags[src] = s._tagPool.get();\n      t.src = src;\n    } else {\n      // get base or pool\n      if (s._tagUsed[src]) {\n        t = s._tagPool.get();\n        t.src = src;\n      } else {\n        s._tagUsed[src] = true;\n      }\n    }\n    return t;\n  };\n\n  /**\n   * Return an audio tag to the pool.\n   * @method set\n   * @param {String} src The source file used by the audio tag.\n   * @param {HTMLElement} tag Audio tag to set.\n   * @static\n   */\n  s.set = function (src, tag) {\n    // check if this is base, if yes set boolean if not return to pool\n    if (tag == s._tags[src]) {\n      s._tagUsed[src] = false;\n    } else {\n      s._tagPool.set(tag);\n    }\n  };\n\n  /**\n   * Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.\n   * @method remove\n   * @param {String} src The source for the tag\n   * @return {Boolean} If the TagPool was deleted.\n   * @static\n   */\n  s.remove = function (src) {\n    var tag = s._tags[src];\n    if (tag == null) {\n      return false;\n    }\n    s._tagPool.set(tag);\n    delete s._tags[src];\n    delete s._tagUsed[src];\n    return true;\n  };\n\n  /**\n   * Gets the duration of the src audio in milliseconds\n   * @method getDuration\n   * @param {String} src The source file used by the audio tag.\n   * @return {Number} Duration of src in milliseconds\n   * @static\n   */\n  s.getDuration = function (src) {\n    var t = s._tags[src];\n    if (t == null || !t.duration) {\n      return 0;\n    } // OJR duration is NaN if loading has not completed\n    return t.duration * 1000;\n  };\n  createjs.HTMLAudioTagPool = HTMLAudioTagPool;\n\n  // ************************************************************************************************************\n  /**\n   * The TagPool is an object pool for HTMLAudio tag instances.\n   * #class TagPool\n   * @param {String} src The source of the channel.\n   * @protected\n   */\n  function TagPool(src) {\n    // Public Properties\n    /**\n     * A list of all available tags in the pool.\n     * #property tags\n     * @type {Array}\n     * @protected\n     */\n    this._tags = [];\n  }\n  ;\n  var p = TagPool.prototype;\n  p.constructor = TagPool;\n\n  // Public Methods\n  /**\n   * Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n   * #method get\n   * @return {HTMLAudioElement} An HTML audio tag.\n   */\n  p.get = function () {\n    var tag;\n    if (this._tags.length == 0) {\n      tag = this._createTag();\n    } else {\n      tag = this._tags.pop();\n    }\n    if (tag.parentNode == null) {\n      document.body.appendChild(tag);\n    }\n    return tag;\n  };\n\n  /**\n   * Put an HTMLAudioElement back in the pool for use.\n   * #method set\n   * @param {HTMLAudioElement} tag HTML audio tag\n   */\n  p.set = function (tag) {\n    // OJR this first step seems unnecessary\n    var index = createjs.indexOf(this._tags, tag);\n    if (index == -1) {\n      this._tags.src = null;\n      this._tags.push(tag);\n    }\n  };\n  p.toString = function () {\n    return \"[TagPool]\";\n  };\n\n  // Private Methods\n  /**\n   * Create an HTML audio tag.\n   * #method _createTag\n   * @param {String} src The source file to set for the audio tag.\n   * @return {HTMLElement} Returns an HTML audio tag.\n   * @protected\n   */\n  p._createTag = function () {\n    var tag = document.createElement(\"audio\");\n    tag.autoplay = false;\n    tag.preload = \"none\";\n    //LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n    return tag;\n  };\n})();\n\n//##############################################################################\n// HTMLAudioSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n   * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n   *\n   * @param {String} src The path to and file name of the sound.\n   * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n   * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n   * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n   * @class HTMLAudioSoundInstance\n   * @extends AbstractSoundInstance\n   * @constructor\n   */\n  function HTMLAudioSoundInstance(src, startTime, duration, playbackResource) {\n    this.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n    // Private Properties\n    this._audioSpriteStopTime = null;\n    this._delayTimeoutId = null;\n\n    // Proxies, make removing listeners easier.\n    this._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n    this._readyHandler = createjs.proxy(this._handleTagReady, this);\n    this._stalledHandler = createjs.proxy(this._playFailed, this);\n    this._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this);\n    this._loopHandler = createjs.proxy(this._handleSoundComplete, this);\n    if (duration) {\n      this._audioSpriteStopTime = (startTime + duration) * 0.001;\n    } else {\n      this._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n    }\n  }\n  var p = createjs.extend(HTMLAudioSoundInstance, createjs.AbstractSoundInstance);\n\n  // Public Methods\n  /**\n   * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\n   * undoc'd because it is not meant to be used outside of Sound\n   * #method setMasterVolume\n   * @param value\n   */\n  p.setMasterVolume = function (value) {\n    this._updateVolume();\n  };\n\n  /**\n   * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\n   * undoc'd because it is not meant to be used outside of Sound\n   * #method setMasterMute\n   * @param value\n   */\n  p.setMasterMute = function (isMuted) {\n    this._updateVolume();\n  };\n  p.toString = function () {\n    return \"[HTMLAudioSoundInstance]\";\n  };\n\n  //Private Methods\n  p._removeLooping = function () {\n    if (this._playbackResource == null) {\n      return;\n    }\n    this._playbackResource.loop = false;\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n  };\n  p._addLooping = function () {\n    if (this._playbackResource == null || this._audioSpriteStopTime) {\n      return;\n    }\n    this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n    this._playbackResource.loop = true;\n  };\n  p._handleCleanUp = function () {\n    var tag = this._playbackResource;\n    if (tag != null) {\n      tag.pause();\n      tag.loop = false;\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n      tag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n      try {\n        tag.currentTime = this._startTime;\n      } catch (e) {} // Reset Position\n      createjs.HTMLAudioTagPool.set(this.src, tag);\n      this._playbackResource = null;\n    }\n  };\n  p._beginPlaying = function (playProps) {\n    this._playbackResource = createjs.HTMLAudioTagPool.get(this.src);\n    return this.AbstractSoundInstance__beginPlaying(playProps);\n  };\n  p._handleSoundReady = function (event) {\n    if (this._playbackResource.readyState !== 4) {\n      var tag = this._playbackResource;\n      tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n      tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n      tag.preload = \"auto\"; // This is necessary for Firefox, as it won't ever \"load\" until this is set.\n      tag.load();\n      return;\n    }\n    this._updateVolume();\n    this._playbackResource.currentTime = (this._startTime + this._position) * 0.001;\n    if (this._audioSpriteStopTime) {\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n    } else {\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n      if (this._loop != 0) {\n        this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n        this._playbackResource.loop = true;\n      }\n    }\n    this._playbackResource.play();\n  };\n\n  /**\n   * Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.\n   * @method _handleTagReady\n   * @param event\n   * @protected\n   */\n  p._handleTagReady = function (event) {\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n    this._handleSoundReady();\n  };\n  p._pause = function () {\n    this._playbackResource.pause();\n  };\n  p._resume = function () {\n    this._playbackResource.play();\n  };\n  p._updateVolume = function () {\n    if (this._playbackResource != null) {\n      var newVolume = this._muted || createjs.Sound._masterMute ? 0 : this._volume * createjs.Sound._masterVolume;\n      if (newVolume != this._playbackResource.volume) {\n        this._playbackResource.volume = newVolume;\n      }\n    }\n  };\n  p._calculateCurrentPosition = function () {\n    return this._playbackResource.currentTime * 1000 - this._startTime;\n  };\n  p._updatePosition = function () {\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n    this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n    try {\n      this._playbackResource.currentTime = (this._position + this._startTime) * 0.001;\n    } catch (error) {\n      // Out of range\n      this._handleSetPositionSeek(null);\n    }\n  };\n\n  /**\n   * Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener\n   * @method _handleSetPositionSeek\n   * @param event\n   * @protected\n   */\n  p._handleSetPositionSeek = function (event) {\n    if (this._playbackResource == null) {\n      return;\n    }\n    this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n    this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n  };\n\n  /**\n   * Timer used to loop audio sprites.\n   * NOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n   * (up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired\n   *\n   * @method _handleAudioSpriteLoop\n   * @param event\n   * @private\n   */\n  p._handleAudioSpriteLoop = function (event) {\n    if (this._playbackResource.currentTime <= this._audioSpriteStopTime) {\n      return;\n    }\n    this._playbackResource.pause();\n    if (this._loop == 0) {\n      this._handleSoundComplete(null);\n    } else {\n      this._position = 0;\n      this._loop--;\n      this._playbackResource.currentTime = this._startTime * 0.001;\n      if (!this._paused) {\n        this._playbackResource.play();\n      }\n      this._sendEvent(\"loop\");\n    }\n  };\n\n  // NOTE with this approach audio will loop as reliably as the browser allows\n  // but we could end up sending the loop event after next loop playback begins\n  p._handleLoop = function (event) {\n    if (this._loop == 0) {\n      this._playbackResource.loop = false;\n      this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n    }\n  };\n  p._updateStartTime = function () {\n    this._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n    }\n  };\n  p._updateDuration = function () {\n    this._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n    if (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n      this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n      this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n    }\n  };\n  p._setDurationFromSource = function () {\n    this._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n    this._playbackResource = null;\n  };\n  createjs.HTMLAudioSoundInstance = createjs.promote(HTMLAudioSoundInstance, \"AbstractSoundInstance\");\n})();\n\n//##############################################################################\n// HTMLAudioPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n(function () {\n  \"use strict\";\n\n  /**\n   * Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\n   * by default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\n   * audio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n   *\n   * <h4>Known Browser and OS issues for HTML Audio</h4>\n   * <b>All browsers</b><br />\n   * Testing has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\n   * this limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\n   * a guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n   *\n      * <b>IE html limitations</b><br />\n      * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n      * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n      * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n      * <li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n      * 64kbps works.</li>\n   * <li>Occasionally very short samples will get cut off.</li>\n   * <li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\n   * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\n   * Note that audio sprites can be used as a solution to this issue.</li></ul>\n   *\n   * <b>Safari limitations</b><br />\n   * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n   *\n   * <b>iOS 6 limitations</b><br />\n   * <ul><li>can only have one &lt;audio&gt; tag</li>\n   * \t\t<li>can not preload or autoplay the audio</li>\n   * \t\t<li>can not cache the audio</li>\n   * \t\t<li>can not play the audio except inside a user initiated event.</li>\n   *\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n   * \t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n   * </ul>\n   *\n   * <b>Android Native Browser limitations</b><br />\n   * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n   *      <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n   * <b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n   * <ul> <li>Can only play 1 sound at a time.</li>\n   *      <li>Sound is not cached.</li>\n   *      <li>Sound can only be loaded in a user initiated touch/click event.</li>\n   *      <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n   * </ul>\n   *\n   * See {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.\n   *\n   * @class HTMLAudioPlugin\n   * @extends AbstractPlugin\n   * @constructor\n   */\n  function HTMLAudioPlugin() {\n    this.AbstractPlugin_constructor();\n\n    // Public Properties\n    this._capabilities = s._capabilities;\n    this._loaderClass = createjs.SoundLoader;\n    this._soundInstanceClass = createjs.HTMLAudioSoundInstance;\n  }\n  var p = createjs.extend(HTMLAudioPlugin, createjs.AbstractPlugin);\n  var s = HTMLAudioPlugin;\n\n  // Static Properties\n  /**\n   * The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\n   * The actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\n   * Audio sprites work around this limitation.\n   * @property MAX_INSTANCES\n   * @type {Number}\n   * @default 30\n   * @static\n   */\n  s.MAX_INSTANCES = 30;\n\n  /**\n   * Event constant for the \"canPlayThrough\" event for cleaner code.\n   * @property _AUDIO_READY\n   * @type {String}\n   * @default canplaythrough\n   * @static\n   * @private\n   */\n  s._AUDIO_READY = \"canplaythrough\";\n\n  /**\n   * Event constant for the \"ended\" event for cleaner code.\n   * @property _AUDIO_ENDED\n   * @type {String}\n   * @default ended\n   * @static\n   * @private\n   */\n  s._AUDIO_ENDED = \"ended\";\n\n  /**\n   * Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.\n   * @property _AUDIO_SEEKED\n   * @type {String}\n   * @default seeked\n   * @static\n   * @private\n   */\n  s._AUDIO_SEEKED = \"seeked\";\n\n  /**\n   * Event constant for the \"stalled\" event for cleaner code.\n   * @property _AUDIO_STALLED\n   * @type {String}\n   * @default stalled\n   * @static\n   * @private\n   */\n  s._AUDIO_STALLED = \"stalled\";\n\n  /**\n   * Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\n   * This event callsback ever 15 to 250ms and can be dropped by the browser for performance.\n   * @property _TIME_UPDATE\n   * @type {String}\n   * @default timeupdate\n   * @static\n   * @private\n   */\n  s._TIME_UPDATE = \"timeupdate\";\n\n  /**\n   * The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\n   * method. Please see the Sound {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} method for an overview of all\n   * of the available properties.\n   * @property _capabilities\n   * @type {Object}\n   * @private\n   * @static\n   */\n  s._capabilities = null;\n\n  // Static Methods\n  /**\n   * Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\n   * browsers, but is disabled in iOS because of its limitations.\n   * @method isSupported\n   * @return {Boolean} If the plugin can be initialized.\n   * @static\n   */\n  s.isSupported = function () {\n    s._generateCapabilities();\n    return s._capabilities != null;\n  };\n\n  /**\n   * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n   * method for an overview of plugin capabilities.\n   * @method _generateCapabilities\n   * @static\n   * @private\n   */\n  s._generateCapabilities = function () {\n    if (s._capabilities != null) {\n      return;\n    }\n    var t = document.createElement(\"audio\");\n    if (t.canPlayType == null) {\n      return null;\n    }\n    s._capabilities = {\n      panning: false,\n      volume: true,\n      tracks: -1\n    };\n\n    // determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n    var supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n    var extensionMap = createjs.Sound.EXTENSION_MAP;\n    for (var i = 0, l = supportedExtensions.length; i < l; i++) {\n      var ext = supportedExtensions[i];\n      var playType = extensionMap[ext] || ext;\n      s._capabilities[ext] = t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\" || t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\";\n    } // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n  };\n\n  // public methods\n  p.register = function (loadItem) {\n    var tag = createjs.HTMLAudioTagPool.get(loadItem.src);\n    var loader = this.AbstractPlugin_register(loadItem);\n    loader.setTag(tag);\n    return loader;\n  };\n  p.removeSound = function (src) {\n    this.AbstractPlugin_removeSound(src);\n    createjs.HTMLAudioTagPool.remove(src);\n  };\n  p.create = function (src, startTime, duration) {\n    var si = this.AbstractPlugin_create(src, startTime, duration);\n    si.playbackResource = null;\n    return si;\n  };\n  p.toString = function () {\n    return \"[HTMLAudioPlugin]\";\n  };\n\n  // plugin does not support these\n  p.setVolume = p.getVolume = p.setMute = null;\n  createjs.HTMLAudioPlugin = createjs.promote(HTMLAudioPlugin, \"AbstractPlugin\");\n})();","map":{"version":3,"names":["window","createjs","s","SoundJS","version","buildDate","extend","subclass","superclass","o","constructor","prototype","promote","prefix","subP","supP","Object","getPrototypeOf","__proto__","n","hasOwnProperty","deprecate","fallbackMethod","name","msg","console","warn","log","apply","arguments","indexOf","array","searchElement","i","l","length","proxy","method","scope","aArgs","Array","slice","call","concat","BrowserDetect","agent","navigator","userAgent","isWindowPhone","isFirefox","isOpera","opera","isChrome","isIOS","isAndroid","isBlackberry","EventDispatcher","_listeners","_captureListeners","p","initialize","target","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","type","listener","useCapture","listeners","arr","push","once","data","handleEvent","evt","remove","splice","eventObj","bubbles","cancelable","Event","clone","e","parent","top","list","propagationStopped","defaultPrevented","captureListeners","toString","eventPhase","currentTarget","removed","immediatePropagationStopped","timeStamp","Date","getTime","preventDefault","stopPropagation","stopImmediatePropagation","set","props","ErrorEvent","title","message","Event_constructor","ProgressEvent","loaded","total","progress","LoadItem","src","id","maintainOrder","callback","Methods","GET","values","headers","withCredentials","mimeType","crossOrigin","loadTimeout","LOAD_TIMEOUT_DEFAULT","create","value","item","Error","POST","BINARY","CSS","FONT","FONTCSS","IMAGE","JAVASCRIPT","JSON","JSONP","MANIFEST","SOUND","VIDEO","SPRITESHEET","SVG","TEXT","XML","Types","a","el","svg","object","image","img","style","link","script","audio","video","text","document","createTextNode","createElement","Elements","container","appendToHead","getHead","appendChild","appendToBody","visibility","position","width","height","overflow","transform","msTransform","webkitTransform","oTransform","getBody","head","getElementsByTagName","body","removeChild","isImageTag","HTMLImageElement","isAudioTag","HTMLAudioElement","isVideoTag","HTMLVideoElement","DomUtils","isBinary","isText","getTypeByExtension","extension","toLowerCase","RequestUtils","ABSOLUTE_PATT","RELATIVE_PATT","EXTENSION_PATT","parseURI","path","info","absolute","relative","protocol","hostname","port","pathname","search","hash","host","parser","href","queryIndex","substr","match","test","formatQueryString","query","params","escape","join","buildURI","idx","q","split","isCrossDomain","location","crossdomain","isLocal","URLUtils","AbstractLoader","loadItem","preferXHR","EventDispatcher_constructor","canceled","resultFormatter","_item","_preferXHR","_result","_rawResult","_loadedItems","_tagSrcAttribute","_tag","defineProperties","get","getItem","getResult","raw","getTag","setTag","tag","load","_createRequest","_request","loader","cancel","destroy","_loadItems","getLoadedItems","TagRequest","_createTag","XHRRequest","_sendLoadStart","_isCanceled","_sendProgress","event","isNaN","Infinity","_sendComplete","rawResult","result","_sendError","_response","Function","_resultFormatSuccess","_resultFormatFailed","toUpperCase","AbstractMediaLoader","AbstractLoader_constructor","_formatResult","_updateXHR","preload","AbstractLoader_load","MediaTagRequest","setResponseType","_loadedHandler","onstalled","URL","webkitURL","createObjectURL","AbstractRequest","srcAttribute","AbstractRequest_constructor","_handleTagComplete","_addedToDOM","onload","onreadystatechange","_handleReadyStateChange","onerror","_handleError","_loadTimeout","setTimeout","_handleTimeout","parentNode","_clean","AbstractRequest_destroy","clearTimeout","readyState","_handleStalled","sc","_stalledCallback","pc","_handleProgress","TagRequest_load","newEvent","_progressCallback","TagRequest__clean","_xhrLevel","_rawResponse","_canceled","_handleLoadStartProxy","_handleLoadStart","_handleProgressProxy","_handleAbortProxy","_handleAbort","_handleErrorProxy","_handleTimeoutProxy","_handleLoadProxy","_handleLoad","_handleReadyStateChangeProxy","_createXHR","ACTIVEX_VERSIONS","abort","onloadstart","onprogress","onabort","ontimeout","send","error","_responseType","responseType","getAllResponseHeaders","getResponseHeader","header","_checkError","_getResponse","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob","status","parseInt","response","responseText","responseXML","req","XMLHttpRequest","undefined","XDomainRequest","axVersion","ActiveXObject","overrideMimeType","open","origin","setRequestHeader","SoundLoader","AbstractMediaLoader_constructor","canLoadItem","autoplay","PlayPropsConfig","interrupt","delay","offset","loop","volume","pan","startTime","duration","Sound","INTERRUPT_ANY","INTERRUPT_EARLY","INTERRUPT_LATE","INTERRUPT_NONE","PLAY_INITED","PLAY_SUCCEEDED","PLAY_INTERRUPTED","PLAY_FINISHED","PLAY_FAILED","SUPPORTED_EXTENSIONS","EXTENSION_MAP","m4a","FILE_PATTERN","defaultInterruptBehavior","alternateExtensions","activePlugin","_masterVolume","_getMasterVolume","getVolume","_setMasterVolume","Number","Math","max","min","setVolume","instances","_instances","setMasterVolume","_masterMute","_getMute","getMute","_setMute","setMute","setMasterMute","_getCapabilities","_capabilities","getCapabilities","muted","capabilities","_pluginsRegistered","_lastID","_idHash","_preloadHash","_defaultPlayPropsHash","getPreloadHandlers","initLoad","types","extensions","_handleLoadComplete","sprite","_handleLoadError","_registerPlugin","plugin","isSupported","registerPlugins","plugins","initializeDefaultPlugins","WebAudioPlugin","HTMLAudioPlugin","isReady","_registerSound","details","_parseSrc","_parsePath","numChannels","channels","audioSprite","sp","defaultPlayProps","register","SoundChannel","maxPerChannel","registerSound","basePath","registerSounds","sounds","returnValues","manifest","removeSound","_getSrcById","prop","removeSrc","removeSounds","removeAllSounds","removeAll","loadComplete","ext","c","replace","ret","lastIndexOf","play","playProps","instance","createInstance","ok","_playInstance","_playFailed","DefaultSoundInstance","applyPlayProps","uniqueId","stop","setDefaultPlayProps","getDefaultPlayProps","_beginPlaying","delayTimeoutId","add","index","_playFinished","init","channel","_removeAll","_add","_remove","maxDefault","_get","_getSlot","replacement","playState","_interrupt","AbstractSoundInstance","playbackResource","_volume","defineProperty","_getVolume","_setVolume","_pan","_getPan","_setPan","_startTime","_getStartTime","_setStartTime","_duration","_getDuration","_setDuration","_playbackResource","_getPlaybackResource","_setPlaybackResource","_position","_getPosition","_setPosition","_loop","_getLoop","_setLoop","_muted","_getMuted","_setMuted","_paused","_getPaused","_setPaused","_cleanUp","_handleStop","_pause","_resume","_updateVolume","_updatePan","_calculateCurrentPosition","_updatePosition","_updateStartTime","_updateDuration","_setDurationFromSource","_removeLooping","_addLooping","_sendEvent","_handleCleanUp","_handleSoundReady","_handleSoundComplete","_handleLoop","AbstractPlugin","_loaders","_audioSources","_soundInstances","_loaderClass","_soundInstanceClass","_handlePreloadComplete","_handlePreloadError","isPreloadStarted","isPreloadComplete","key","si","Loader","context","decodeAudioData","_handleAudioDecoded","decodedAudio","AbstractLoader__sendComplete","WebAudioLoader","WebAudioSoundInstance","AbstractSoundInstance_constructor","gainNode","createGain","panNode","createPanner","panningModel","_panningModel","connect","sourceNode","_soundCompleteTimeout","_sourceNodeNext","_playbackStartTime","_endedHandler","_scratchBuffer","destinationNode","AbstractSoundInstance_destroy","disconnect","setPosition","_cleanUpAudioNode","_createAndPlayAudioNode","numberOfOutputs","audioNode","buffer","dur","pos","currentTime","createBufferSource","start","newVolume","gain","AbstractPlugin_constructor","dynamicsCompressorNode","createDynamicsCompressor","destination","_addPropsToClasses","_unlocked","DEFAULT_SAMPLE_RATE","isMobilePhoneGap","_isFileXHRSupported","_generateCapabilities","playEmptySound","source","supported","xhr","t","canPlayType","_createAudioContext","createBuffer","_compatibilitySetUp","state","_unlock","panning","tracks","supportedExtensions","extensionMap","playType","numberOfChannels","AudioCtor","AudioContext","webkitAudioContext","sampleRate","dummy","close","createGainNode","noteGrainOn","noteOff","HTMLAudioTagPool","_tags","_tagPool","TagPool","_tagUsed","getDuration","pop","HTMLAudioSoundInstance","_audioSpriteStopTime","_delayTimeoutId","_readyHandler","_handleTagReady","_stalledHandler","_audioSpriteEndHandler","_handleAudioSpriteLoop","_loopHandler","isMuted","_AUDIO_SEEKED","pause","_AUDIO_ENDED","_AUDIO_READY","_AUDIO_STALLED","_TIME_UPDATE","AbstractSoundInstance__beginPlaying","_handleSetPositionSeek","MAX_INSTANCES","AbstractPlugin_register","AbstractPlugin_removeSound","AbstractPlugin_create"],"sources":["/Users/canozdemir/Downloads/web-based-navigation-rosbridge/node_modules/latest-createjs/lib/soundjs/soundjs.js"],"sourcesContent":["/*!\n* SoundJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n//##############################################################################\n// version.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of the library.\n\t * The SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\n\t * for information on using sound.\n\t * @class SoundJS\n\t **/\n\tvar s = createjs.SoundJS = createjs.SoundJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"1.0.0\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Tue, 10 Oct 2017 12:24:35 GMT\"; // injected by build process\n\n})();\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function(subclass, superclass) {\n\t\"use strict\";\n\n\tfunction o() { this.constructor = subclass; }\n\to.prototype = superclass.prototype;\n\treturn (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function(subclass, prefix) {\n\t\"use strict\";\n\n\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\tif (supP) {\n\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\tfor (var n in supP) {\n\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t}\n\t}\n\treturn subclass;\n};\n\n//##############################################################################\n// deprecate.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Wraps deprecated methods so they still be used, but throw warnings to developers.\n *\n *\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n *\n * The recommended approach for deprecated properties is:\n *\n *\ttry {\n *\t\tObj\tect.defineProperties(object, {\n *\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n *\t\t\treadWriteProp: {\n *\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n *\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n *\t\t});\n *\t} catch (e) {}\n *\n * @method deprecate\n * @param {Function} [fallbackMethod=null] A method to call when the deprecated method is used. See the example for how\n * @param {String} [name=null] The name of the method or property to display in the console warning.\n * to deprecate properties.\n * @return {Function} If a fallbackMethod is supplied, returns a closure that will call the fallback method after\n * logging the warning in the console.\n */\ncreatejs.deprecate = function(fallbackMethod, name) {\n\t\"use strict\";\n\treturn function() {\n\t\tvar msg = \"Deprecated property or method '\"+name+\"'. See docs for info.\";\n\t\tconsole && (console.warn ? console.warn(msg) : console.log(msg));\n\t\treturn fallbackMethod && fallbackMethod.apply(this, arguments);\n\t}\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// proxy.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t * method gets called in the correct scope.\n\t *\n\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t *\n\t *      function myHandler(arg1, arg2) {\n\t *           // This gets called when myObject.myCallback is executed.\n\t *      }\n\t *\n\t * @method proxy\n\t * @param {Function} method The function to call\n\t * @param {Object} scope The scope to call the method name on\n\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t * @public\n\t * @static\n\t */\n\tcreatejs.proxy = function (method, scope) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\treturn function () {\n\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t};\n\t}\n\n}());\n\n//##############################################################################\n// BrowserDetect.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n/**\n * @class Utility Methods\n */\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * An object that determines the current browser, version, operating system, and other environment\n\t * variables via user agent string.\n\t *\n\t * Used for audio because feature detection is unable to detect the many limitations of mobile devices.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      if (createjs.BrowserDetect.isIOS) { // do stuff }\n\t *\n\t * @property BrowserDetect\n\t * @type {Object}\n\t * @param {Boolean} isFirefox True if our browser is Firefox.\n\t * @param {Boolean} isOpera True if our browser is opera.\n\t * @param {Boolean} isChrome True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\n\t * completely different browser with different abilities.\n\t * @param {Boolean} isIOS True if our browser is safari for iOS devices (iPad, iPhone, and iPod).\n\t * @param {Boolean} isAndroid True if our browser is Android.\n\t * @param {Boolean} isBlackberry True if our browser is Blackberry.\n\t * @constructor\n\t * @static\n\t */\n\tfunction BrowserDetect() {\n\t\tthrow \"BrowserDetect cannot be instantiated\";\n\t};\n\n\tvar agent = BrowserDetect.agent = window.navigator.userAgent;\n\tBrowserDetect.isWindowPhone = (agent.indexOf(\"IEMobile\") > -1) || (agent.indexOf(\"Windows Phone\") > -1);\n\tBrowserDetect.isFirefox = (agent.indexOf(\"Firefox\") > -1);\n\tBrowserDetect.isOpera = (window.opera != null);\n\tBrowserDetect.isChrome = (agent.indexOf(\"Chrome\") > -1);  // NOTE that Chrome on Android returns true but is a completely different browser with different abilities\n\tBrowserDetect.isIOS = (agent.indexOf(\"iPod\") > -1 || agent.indexOf(\"iPhone\") > -1 || agent.indexOf(\"iPad\") > -1) && !BrowserDetect.isWindowPhone;\n\tBrowserDetect.isAndroid = (agent.indexOf(\"Android\") > -1) && !BrowserDetect.isWindowPhone;\n\tBrowserDetect.isBlackberry = (agent.indexOf(\"Blackberry\") > -1);\n\n\tcreatejs.BrowserDetect = BrowserDetect;\n\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\r\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n\t *\r\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n\t * \r\n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n\t * \r\n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n\t * \r\n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n\t *\r\n\t *      EventDispatcher.initialize(MyClass.prototype);\r\n\t *\r\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n\t *\r\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\r\n\t *      function handlerMethod(event) {\r\n\t *          console.log(event.target + \" Was Clicked\");\r\n\t *      }\r\n\t *\r\n\t * <b>Maintaining proper scope</b><br />\r\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n\t * method to subscribe to events simplifies this.\r\n\t *\r\n\t *      instance.addEventListener(\"click\", function(event) {\r\n\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t *      });\r\n\t *      \r\n\t *      instance.on(\"click\", function(event) {\r\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t *      });\r\n\t * \r\n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n\t * scope.\r\n\t *\r\n\t * <b>Browser support</b>\r\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n\t * requires modern browsers (IE9+).\r\n\t *      \r\n\t *\r\n\t * @class EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction EventDispatcher() {\r\n\t\r\n\t\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _listeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._listeners = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _captureListeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._captureListeners = null;\r\n\t}\r\n\tvar p = EventDispatcher.prototype;\r\n\r\n// static public methods:\r\n\t/**\r\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t * \r\n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t * \r\n\t * @method initialize\r\n\t * @static\r\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t * prototype.\r\n\t **/\r\n\tEventDispatcher.initialize = function(target) {\r\n\t\ttarget.addEventListener = p.addEventListener;\r\n\t\ttarget.on = p.on;\r\n\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\r\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\ttarget.willTrigger = p.willTrigger;\r\n\t};\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t * multiple callbacks getting fired.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t *      function handleClick(event) {\r\n\t *         // Click happened.\r\n\t *      }\r\n\t *\r\n\t * @method addEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t **/\r\n\tp.addEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners;\r\n\t\tif (useCapture) {\r\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t} else {\r\n\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t}\r\n\t\tvar arr = listeners[type];\r\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\telse { arr.push(listener); }\r\n\t\treturn listener;\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t * \r\n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t * to `on` with the same params will create multiple listeners.\r\n\t * \r\n\t * <h4>Example</h4>\r\n\t * \r\n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t * \t\tfunction handleClick(evt, data) {\r\n\t * \t\t\tdata.count -= 1;\r\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t * \t\t\tif (data.count == 0) {\r\n\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t * \t\t\t\t// alternately: evt.remove();\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t * \r\n\t * @method on\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t **/\r\n\tp.on = function(type, listener, scope, once, data, useCapture) {\r\n\t\tif (listener.handleEvent) {\r\n\t\t\tscope = scope||listener;\r\n\t\t\tlistener = listener.handleEvent;\r\n\t\t}\r\n\t\tscope = scope||this;\r\n\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\t\tlistener.call(scope, evt, data);\r\n\t\t\t\tonce&&evt.remove();\r\n\t\t\t}, useCapture);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified event listener.\r\n\t *\r\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t * closure will not work.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t *\r\n\t * @method removeEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.removeEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\tif (!listeners) { return; }\r\n\t\tvar arr = listeners[type];\r\n\t\tif (!arr) { return; }\r\n\t\tfor (var i=0,l=arr.length; i<l; i++) {\r\n\t\t\tif (arr[i] == listener) {\r\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t * .on method.\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t *\r\n\t * @method off\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.off = p.removeEventListener;\r\n\r\n\t/**\r\n\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Remove all listeners\r\n\t *      displayObject.removeAllEventListeners();\r\n\t *\r\n\t *      // Remove all click listeners\r\n\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t *\r\n\t * @method removeAllEventListeners\r\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t **/\r\n\tp.removeAllEventListeners = function(type) {\r\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\telse {\r\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Dispatches the specified event to all listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Use a string event\r\n\t *      this.dispatchEvent(\"complete\");\r\n\t *\r\n\t *      // Use an Event instance\r\n\t *      var event = new createjs.Event(\"progress\");\r\n\t *      this.dispatchEvent(event);\r\n\t *\r\n\t * @method dispatchEvent\r\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t **/\r\n\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\r\n\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\r\n\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\teventObj = eventObj.clone();\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\r\n\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t} else {\r\n\t\t\tvar top=this, list=[top];\r\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\tvar i, l=list.length;\r\n\r\n\t\t\t// capture & atTarget\r\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t}\r\n\t\t\t// bubbling\r\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !eventObj.defaultPrevented;\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type.\r\n\t * @method hasEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.hasEventListener = function(type) {\r\n\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t * \r\n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t * event flow for a listener, not just this object.\r\n\t * @method willTrigger\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.willTrigger = function(type) {\r\n\t\tvar o = this;\r\n\t\twhile (o) {\r\n\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\to = o.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[EventDispatcher]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _dispatchEvent\r\n\t * @param {Object | Event} eventObj\r\n\t * @param {Object} eventPhase\r\n\t * @protected\r\n\t **/\r\n\tp._dispatchEvent = function(eventObj, eventPhase) {\r\n\t\tvar l, arr, listeners = (eventPhase <= 2) ? this._captureListeners : this._listeners;\r\n\t\tif (eventObj && listeners && (arr = listeners[eventObj.type]) && (l=arr.length)) {\r\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\ttry { eventObj.eventPhase = eventPhase|0; } catch (e) {}\r\n\t\t\teventObj.removed = false;\r\n\t\t\t\r\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\tvar o = arr[i];\r\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\telse { o(eventObj); }\r\n\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (eventPhase === 2) { this._dispatchEvent(eventObj, 2.1); }\r\n\t};\r\n\r\n\r\n\tcreatejs.EventDispatcher = EventDispatcher;\r\n}());\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n\tfunction Event(type, bubbles, cancelable) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n\t\tthis.type = type;\n\t\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.target = null;\n\t\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.currentTarget = null;\n\t\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.eventPhase = 0;\n\t\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.bubbles = !!bubbles;\n\t\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.cancelable = !!cancelable;\n\t\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.timeStamp = (new Date()).getTime();\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.defaultPrevented = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.propagationStopped = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.immediatePropagationStopped = false;\n\t\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.removed = false;\n\t}\n\tvar p = Event.prototype;\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n\tp.preventDefault = function() {\n\t\tthis.defaultPrevented = this.cancelable&&true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n\tp.stopPropagation = function() {\n\t\tthis.propagationStopped = true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n\tp.stopImmediatePropagation = function() {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t};\n\t\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n\tp.remove = function() {\n\t\tthis.removed = true;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t};\n\t\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t};\n\n\tcreatejs.Event = Event;\n}());\n\n//##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs||{};\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n\t * @class ErrorEvent\n\t * @param {String} [title] The error title\n\t * @param {String} [message] The error description\n\t * @param {Object} [data] Additional error data\n\t * @constructor\n\t */\n\tfunction ErrorEvent(title, message, data) {\n\t\tthis.Event_constructor(\"error\");\n\n\t\t/**\n\t\t * The short error title, which indicates the type of error that occurred.\n\t\t * @property title\n\t\t * @type String\n\t\t */\n\t\tthis.title = title;\n\n\t\t/**\n\t\t * The verbose error message, containing details about the error.\n\t\t * @property message\n\t\t * @type String\n\t\t */\n\t\tthis.message = message;\n\n\t\t/**\n\t\t * Additional data attached to an error.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\tvar p = createjs.extend(ErrorEvent, createjs.Event);\n\n\tp.clone = function() {\n\t\treturn new createjs.ErrorEvent(this.title, this.message, this.data);\n\t};\n\n\tcreatejs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n\n}());\n\n//##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function (scope) {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n\t * @class ProgressEvent\n\t * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n\t * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n\t * a percentage (between 0 and 1), it can be omitted.\n\t * @todo Consider having this event be a \"fileprogress\" event as well\n\t * @constructor\n\t */\n\tfunction ProgressEvent(loaded, total) {\n\t\tthis.Event_constructor(\"progress\");\n\n\t\t/**\n\t\t * The amount that has been loaded (out of a total amount)\n\t\t * @property loaded\n\t\t * @type {Number}\n\t\t */\n\t\tthis.loaded = loaded;\n\n\t\t/**\n\t\t * The total \"size\" of the load.\n\t\t * @property total\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.total = (total == null) ? 1 : total;\n\n\t\t/**\n\t\t * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = (total == 0) ? 0 : this.loaded / this.total;\n\t};\n\n\tvar p = createjs.extend(ProgressEvent, createjs.Event);\n\n\t/**\n\t * Returns a clone of the ProgressEvent instance.\n\t * @method clone\n\t * @return {ProgressEvent} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new createjs.ProgressEvent(this.loaded, this.total);\n\t};\n\n\tcreatejs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n\n}(window));\n\n//##############################################################################\n// LoadItem.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n\t * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n\t * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n\t * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n\t * @class LoadItem\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\tfunction LoadItem() {\n\t\t/**\n\t\t * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n\t\t * string (recommended), or an HTML tag.\n\t\t * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = null;\n\n\t\t/**\n\t\t * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n\t\t * be set manually. This is helpful in cases where a file does not have an extension.\n\t\t * @property type\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.type = null;\n\n\t\t/**\n\t\t * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n\t\t * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n\t\t * @property id\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.id = null;\n\n\t\t/**\n\t\t * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n\t\t * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n\t\t * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n\t\t * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n\t\t * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n\t\t * @property maintainOrder\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.maintainOrder = false;\n\n\t\t/**\n\t\t * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n\t\t * @property callback\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.callback = null;\n\n\t\t/**\n\t\t * An arbitrary data object, which is included with the loaded object.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.data = null;\n\n\t\t/**\n\t\t * The request method used for HTTP calls. Both {{#crossLink \"Methods/GET:property\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Methods/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n\t\t * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t\t * @property method\n\t\t * @type {String}\n\t\t * @default GET\n\t\t */\n\t\tthis.method = createjs.Methods.GET;\n\n\t\t/**\n\t\t * An object hash of name/value pairs to send to the server.\n\t\t * @property values\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.values = null;\n\n\t\t/**\n\t\t * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n\t\t * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n\t\t * default headers by including them in your headers object.\n\t\t * @property headers\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.headers = null;\n\n\t\t/**\n\t\t * Enable credentials for XHR requests.\n\t\t * @property withCredentials\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.withCredentials = false;\n\n\t\t/**\n\t\t * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n\t\t * based files (json, xml, text, css, js).\n\t\t * @property mimeType\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.mimeType = null;\n\n\t\t/**\n\t\t * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n\t\t * @property crossOrigin\n\t\t * @type {boolean}\n\t\t * @default Anonymous\n\t\t */\n\t\tthis.crossOrigin = null;\n\n\t\t/**\n\t\t * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t\t * @property loadTimeout\n\t\t * @type {Number}\n\t\t * @default 8000 (8 seconds)\n\t\t */\n\t\tthis.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t};\n\n\tvar p = LoadItem.prototype = {};\n\tvar s = LoadItem;\n\n\t/**\n\t * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t * @property LOAD_TIMEOUT_DEFAULT\n\t * @type {number}\n\t * @static\n\t */\n\ts.LOAD_TIMEOUT_DEFAULT = 8000;\n\n\t/**\n\t * Create a LoadItem.\n\t * <ul>\n\t *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n\t *     <li>LoadItem instances are returned as-is</li>\n\t *     <li>Objects are returned with any needed properties added</li>\n\t * </ul>\n\t * @method create\n\t * @param {LoadItem|String|Object} value The load item value\n\t * @returns {LoadItem|Object}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (typeof value == \"string\") {\n\t\t\tvar item = new LoadItem();\n\t\t\titem.src = value;\n\t\t\treturn item;\n\t\t} else if (value instanceof s) {\n\t\t\treturn value;\n\t\t} else if (value instanceof Object && value.src) {\n\t\t\tif (value.loadTimeout == null) {\n\t\t\t\tvalue.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t\t\t}\n\t\t\treturn value;\n\t\t} else {\n\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t}\n\t};\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n\t * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\tcreatejs.LoadItem = s;\n\n}());\n\n//##############################################################################\n// Methods.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * Defines a POST request, use for a method value when loading data.\n\t * @property POST\n\t * @type {string}\n\t * @default post\n\t * @static\n\t */\n\ts.POST = \"POST\";\n\n\t/**\n\t * Defines a GET request, use for a method value when loading data.\n\t * @property GET\n\t * @type {string}\n\t * @default get\n\t * @static\n\t */\n\ts.GET = \"GET\";\n\n\tcreatejs.Methods = s;\n}());\n\n//##############################################################################\n// Types.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t * @property BINARY\n\t * @type {String}\n\t * @default binary\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.BINARY = \"binary\";\n\n\t/**\n\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t * &lt;style&gt; tag when loaded with tags.\n\t * @property CSS\n\t * @type {String}\n\t * @default css\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.CSS = \"css\";\n\n\t/**\n\t * The preload type for font files.\n\t * @property FONT\n\t * @type {String}\n\t * @default font\n\t * @static\n\t * @since 0.9.0\n\t */\n\ts.FONT = \"font\";\n\n\t/**\n\t * The preload type for fonts specified with CSS (such as Google fonts)\n\t * @property FONTCSS\n\t * @type {String}\n\t * @default fontcss\n\t * @static\n\t * @since 0.9.0\n\t */\n\ts.FONTCSS = \"fontcss\";\n\n\t/**\n\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t * @property IMAGE\n\t * @type {String}\n\t * @default image\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.IMAGE = \"image\";\n\n\t/**\n\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t * &lt;script&gt; tag.\n\t *\n\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t * only tag-loaded scripts are injected.\n\t * @property JAVASCRIPT\n\t * @type {String}\n\t * @default javascript\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JAVASCRIPT = \"javascript\";\n\n\t/**\n\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t * must contain a matching wrapper function.\n\t * @property JSON\n\t * @type {String}\n\t * @default json\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSON = \"json\";\n\n\t/**\n\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t * property is set to.\n\t * @property JSONP\n\t * @type {String}\n\t * @default jsonp\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSONP = \"jsonp\";\n\n\t/**\n\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t * @property MANIFEST\n\t * @type {String}\n\t * @default manifest\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.MANIFEST = \"manifest\";\n\n\t/**\n\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t * &lt;audio&gt; tag.\n\t * @property SOUND\n\t * @type {String}\n\t * @default sound\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SOUND = \"sound\";\n\n\t/**\n\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t * &lt;video&gt; tag.\n\t * @property VIDEO\n\t * @type {String}\n\t * @default video\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.VIDEO = \"video\";\n\n\t/**\n\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t * @property SPRITESHEET\n\t * @type {String}\n\t * @default spritesheet\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SPRITESHEET = \"spritesheet\";\n\n\t/**\n\t * The preload type for SVG files.\n\t * @property SVG\n\t * @type {String}\n\t * @default svg\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SVG = \"svg\";\n\n\t/**\n\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t * loaded as raw text.\n\t * @property TEXT\n\t * @type {String}\n\t * @default text\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.TEXT = \"text\";\n\n\t/**\n\t * The preload type for xml files. XML is loaded into an XML document.\n\t * @property XML\n\t * @type {String}\n\t * @default xml\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.XML = \"xml\";\n\n\tcreatejs.Types = s;\n}());\n\n//##############################################################################\n// Elements.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Convenience methods for creating various elements used by PrelaodJS.\n\t *\n\t * @class DomUtils\n\t */\n\tvar s = {};\n\n\ts.a = function() {\n\t\treturn s.el(\"a\");\n\t}\n\n\ts.svg = function() {\n\t\treturn s.el(\"svg\");\n\t}\n\n\ts.object = function() {\n\t\treturn s.el(\"object\");\n\t}\n\n\ts.image = function() {\n\t\treturn s.el(\"image\");\n\t}\n\n\ts.img = function() {\n\t\treturn s.el(\"img\");\n\t}\n\n\ts.style = function() {\n\t\treturn s.el(\"style\");\n\t}\n\n\ts.link = function() {\n\t\treturn s.el(\"link\");\n\t}\n\n\ts.script = function() {\n\t\treturn s.el(\"script\");\n\t}\n\n\ts.audio = function() {\n\t\treturn s.el(\"audio\");\n\t}\n\n\ts.video = function() {\n\t\treturn s.el(\"video\");\n\t}\n\n\ts.text = function(value) {\n\t\treturn document.createTextNode(value);\n\t}\n\n\ts.el = function(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\tcreatejs.Elements = s;\n\n}());\n\n//##############################################################################\n// DomUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * A few utilities for interacting with the dom.\n\t * @class DomUtils\n\t */\n\tvar s = {\n\t\tcontainer: null\n\t};\n\n\ts.appendToHead = function (el) {\n\t\ts.getHead().appendChild(el);\n\t}\n\n\ts.appendToBody = function (el) {\n\t\tif (s.container == null) {\n\t\t\ts.container = document.createElement(\"div\");\n\t\t\ts.container.id = \"preloadjs-container\";\n\t\t\tvar style = s.container.style;\n\t\t\tstyle.visibility = \"hidden\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = s.container.style.height = \"10px\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tstyle.transform = style.msTransform = style.webkitTransform = style.oTransform = \"translate(-10px, -10px)\"; //LM: Not working\n\t\t\ts.getBody().appendChild(s.container);\n\t\t}\n\t\ts.container.appendChild(el);\n\t}\n\n\ts.getHead = function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}\n\n\ts.getBody = function () {\n\t\treturn document.body || document.getElementsByTagName(\"body\")[0];\n\t}\n\n\ts.removeChild = function(el) {\n\t\tif (el.parent) {\n\t\t\tel.parent.removeChild(el);\n\t\t}\n\t}\n\n\t/**\n\t * Check if item is a valid HTMLImageElement\n\t * @method isImageTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isImageTag = function(item) {\n\t\treturn item instanceof HTMLImageElement;\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLAudioElement\n\t * @method isAudioTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isAudioTag = function(item) {\n\t\tif (window.HTMLAudioElement) {\n\t\t\treturn item instanceof HTMLAudioElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLVideoElement\n\t * @method isVideoTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isVideoTag = function(item) {\n\t\tif (window.HTMLVideoElement) {\n\t\t\treturn item instanceof HTMLVideoElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tcreatejs.DomUtils = s;\n\n}());\n\n//##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class RequestUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n\t * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n\t * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n\t * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n\t * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t * @method isBinary\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is binary.\n\t * @static\n\t */\n\ts.isBinary = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.Types.IMAGE:\n\t\t\tcase createjs.Types.BINARY:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n\t * @method isText\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is text.\n\t * @static\n\t */\n\ts.isText = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.Types.TEXT:\n\t\t\tcase createjs.Types.JSON:\n\t\t\tcase createjs.Types.MANIFEST:\n\t\t\tcase createjs.Types.XML:\n\t\t\tcase createjs.Types.CSS:\n\t\t\tcase createjs.Types.SVG:\n\t\t\tcase createjs.Types.JAVASCRIPT:\n\t\t\tcase createjs.Types.SPRITESHEET:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n\t * if it is an unusual extension.\n\t * @method getTypeByExtension\n\t * @param {String} extension The file extension to use to determine the load type.\n\t * @return {String} The determined load type (for example, `createjs.Types.IMAGE`). Will return `null` if\n\t * the type can not be determined by the extension.\n\t * @static\n\t */\n\ts.getTypeByExtension = function (extension) {\n\t\tif (extension == null) {\n\t\t\treturn createjs.Types.TEXT;\n\t\t}\n\n\t\tswitch (extension.toLowerCase()) {\n\t\t\tcase \"jpeg\":\n\t\t\tcase \"jpg\":\n\t\t\tcase \"gif\":\n\t\t\tcase \"png\":\n\t\t\tcase \"webp\":\n\t\t\tcase \"bmp\":\n\t\t\t\treturn createjs.Types.IMAGE;\n\t\t\tcase \"ogg\":\n\t\t\tcase \"mp3\":\n\t\t\tcase \"webm\":\n\t\t\t\treturn createjs.Types.SOUND;\n\t\t\tcase \"mp4\":\n\t\t\tcase \"webm\":\n\t\t\tcase \"ts\":\n\t\t\t\treturn createjs.Types.VIDEO;\n\t\t\tcase \"json\":\n\t\t\t\treturn createjs.Types.JSON;\n\t\t\tcase \"xml\":\n\t\t\t\treturn createjs.Types.XML;\n\t\t\tcase \"css\":\n\t\t\t\treturn createjs.Types.CSS;\n\t\t\tcase \"js\":\n\t\t\t\treturn createjs.Types.JAVASCRIPT;\n\t\t\tcase 'svg':\n\t\t\t\treturn createjs.Types.SVG;\n\t\t\tdefault:\n\t\t\t\treturn createjs.Types.TEXT;\n\t\t}\n\t};\n\n\tcreatejs.RequestUtils = s;\n\n}());\n\n//##############################################################################\n// URLUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class URLUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * The Regular Expression used to test file URLS for an absolute path.\n\t * @property ABSOLUTE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n\n\t/**\n\t * The Regular Expression used to test file URLS for a relative path.\n\t * @property RELATIVE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.RELATIVE_PATT = (/^[./]*?\\//i);\n\n\t/**\n\t * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n\t * removed.\n\t * @property EXTENSION_PATT\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n\n\t/**\n\t * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n\t * <ul>\n\t *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n\t *     `//networkPath`)</li>\n\t *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n\t *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n\t *     the file path is expected to follow the format `name.ext`.</li>\n\t * </ul>\n\t *\n\t * @method parseURI\n\t * @param {String} path\n\t * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n\t * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n\t * \tas well as an optional 'extension` property, which is the lowercase extension.\n\t *\n\t * @static\n\t */\n\ts.parseURI = function (path) {\n\t\tvar info = {\n\t\t\tabsolute: false,\n\t\t\trelative: false,\n\t\t\tprotocol: null,\n\t\t\thostname: null,\n\t\t\tport: null,\n\t\t\tpathname: null,\n\t\t\tsearch: null,\n\t\t\thash: null,\n\t\t\thost: null\n\t\t};\n\n\t\tif (path == null) { return info; }\n\n\t\t// Inject the path parts.\n\t\tvar parser = createjs.Elements.a();\n\t\tparser.href = path;\n\n\t\tfor (var n in info) {\n\t\t\tif (n in parser) {\n\t\t\t\tinfo[n] = parser[n];\n\t\t\t}\n\t\t}\n\n\t\t// Drop the query string\n\t\tvar queryIndex = path.indexOf(\"?\");\n\t\tif (queryIndex > -1) {\n\t\t\tpath = path.substr(0, queryIndex);\n\t\t}\n\n\t\t// Absolute\n\t\tvar match;\n\t\tif (s.ABSOLUTE_PATT.test(path)) {\n\t\t\tinfo.absolute = true;\n\n\t\t\t// Relative\n\t\t} else if (s.RELATIVE_PATT.test(path)) {\n\t\t\tinfo.relative = true;\n\t\t}\n\n\t\t// Extension\n\t\tif (match = path.match(s.EXTENSION_PATT)) {\n\t\t\tinfo.extension = match[1].toLowerCase();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t/**\n\t * Formats an object into a query string for either a POST or GET request.\n\t * @method formatQueryString\n\t * @param {Object} data The data to convert to a query string.\n\t * @param {Array} [query] Existing name/value pairs to append on to this query.\n\t * @static\n\t */\n\ts.formatQueryString = function (data, query) {\n\t\tif (data == null) {\n\t\t\tthrow new Error(\"You must specify data.\");\n\t\t}\n\t\tvar params = [];\n\t\tfor (var n in data) {\n\t\t\tparams.push(n + \"=\" + escape(data[n]));\n\t\t}\n\t\tif (query) {\n\t\t\tparams = params.concat(query);\n\t\t}\n\t\treturn params.join(\"&\");\n\t};\n\n\t/**\n\t * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n\t * @method buildURI\n\t * @param {String} src The source path to add values to.\n\t * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n\t * path will be preserved.\n\t * @returns {string} A formatted string that contains the path and the supplied parameters.\n\t * @static\n\t */\n\ts.buildURI = function (src, data) {\n\t\tif (data == null) {\n\t\t\treturn src;\n\t\t}\n\n\t\tvar query = [];\n\t\tvar idx = src.indexOf(\"?\");\n\n\t\tif (idx != -1) {\n\t\t\tvar q = src.slice(idx + 1);\n\t\t\tquery = query.concat(q.split(\"&\"));\n\t\t}\n\n\t\tif (idx != -1) {\n\t\t\treturn src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n\t\t} else {\n\t\t\treturn src + \"?\" + this.formatQueryString(data, query);\n\t\t}\n\t};\n\n\t/**\n\t * @method isCrossDomain\n\t * @param {LoadItem|Object} item A load item with a `src` property.\n\t * @return {Boolean} If the load item is loading from a different domain than the current location.\n\t * @static\n\t */\n\ts.isCrossDomain = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\n\t\tvar host = createjs.Elements.a();\n\t\thost.href = location.href;\n\n\t\tvar crossdomain = (target.hostname != \"\") &&\n\t\t\t(target.port != host.port ||\n\t\t\ttarget.protocol != host.protocol ||\n\t\t\ttarget.hostname != host.hostname);\n\t\treturn crossdomain;\n\t};\n\n\t/**\n\t * @method isLocal\n\t * @param {LoadItem|Object} item A load item with a `src` property\n\t * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n\t * well.\n\t * @static\n\t */\n\ts.isLocal = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\t\treturn target.hostname == \"\" && target.protocol == \"file:\";\n\t};\n\n\tcreatejs.URLUtils = s;\n\n}());\n\n//##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n\t * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n\t * @class AbstractLoader\n\t * @param {LoadItem|object|string} loadItem The item to be loaded.\n\t * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n\t * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n\t * other, so this is a suggested directive.\n\t * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n\t * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n\t * @extends EventDispatcher\n\t */\n\tfunction AbstractLoader(loadItem, preferXHR, type) {\n\t\tthis.EventDispatcher_constructor();\n\n\t\t// public properties\n\t\t/**\n\t\t * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n\t\t * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t * @property loaded\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.loaded = false;\n\n\t\t/**\n\t\t * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n\t\t * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n\t\t * instead.\n\t\t * @property canceled\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.canceled = false;\n\n\t\t/**\n\t\t * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     var queue = new createjs.LoadQueue();\n\t\t *     queue.loadFile(\"largeImage.png\");\n\t\t *     queue.on(\"progress\", function() {\n\t\t *         console.log(\"Progress:\", queue.progress, event.progress);\n\t\t *     });\n\t\t *\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = 0;\n\n\t\t/**\n\t\t * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n\t\t * supported types.\n\t\t * @property type\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n\t\t * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n\t\t * can be overridden to provide custom formatting.\n\t\t *\n\t\t * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n\t\t * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n\t\t * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n\t\t * called in the current scope, as well as the success and error callbacks.\n\t\t *\n\t\t * <h4>Example asynchronous resultFormatter</h4>\n\t\t *\n\t\t * \tfunction _formatResult(loader) {\n\t\t * \t\treturn function(success, error) {\n\t\t * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t * \t\t\tsuccess(result);\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @property resultFormatter\n\t\t * @type {Function}\n\t\t * @default null\n\t\t */\n\t\tthis.resultFormatter = null;\n\n\t\t// protected properties\n\t\t/**\n\t\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t\t * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n\t\t * @property _item\n\t\t * @type {LoadItem|Object}\n\t\t * @private\n\t\t */\n\t\tif (loadItem) {\n\t\t\tthis._item = createjs.LoadItem.create(loadItem);\n\t\t} else {\n\t\t\tthis._item = null;\n\t\t}\n\n\t\t/**\n\t\t * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n\t\t * @property _preferXHR\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._preferXHR = preferXHR;\n\n\t\t/**\n\t\t * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n\t\t * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n\t\t * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n\t\t * @property _result\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._result = null;\n\n\t\t/**\n\t\t * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n\t\t * method, and passing `true`.\n\t\t * @property _rawResult\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._rawResult = null;\n\n\t\t/**\n\t\t * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n\t\t * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t * @property _loadItems\n\t\t * @type {null}\n\t\t * @protected\n\t\t */\n\t\tthis._loadedItems = null;\n\n\t\t/**\n\t\t * The attribute the items loaded using tags use for the source.\n\t\t * @type {string}\n\t\t * @default null\n\t\t * @private\n\t\t */\n\t\tthis._tagSrcAttribute = null;\n\n\t\t/**\n\t\t * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n\t\t * @property _tag\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._tag = null;\n\t};\n\n\tvar p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n\tvar s = AbstractLoader;\n\n\t// Remove these @deprecated properties after 1.0\n\ttry {\n\t\tObject.defineProperties(s, {\n\t\t\tPOST: { get: createjs.deprecate(function() { return createjs.Methods.POST; }, \"AbstractLoader.POST\") },\n\t\t\tGET: { get: createjs.deprecate(function() { return createjs.Methods.GET; }, \"AbstractLoader.GET\") },\n\n\t\t\tBINARY: { get: createjs.deprecate(function() { return createjs.Types.BINARY; }, \"AbstractLoader.BINARY\") },\n\t\t\tCSS: { get: createjs.deprecate(function() { return createjs.Types.CSS; }, \"AbstractLoader.CSS\") },\n\t\t\tFONT: { get: createjs.deprecate(function() { return createjs.Types.FONT; }, \"AbstractLoader.FONT\") },\n\t\t\tFONTCSS: { get: createjs.deprecate(function() { return createjs.Types.FONTCSS; }, \"AbstractLoader.FONTCSS\") },\n\t\t\tIMAGE: { get: createjs.deprecate(function() { return createjs.Types.IMAGE; }, \"AbstractLoader.IMAGE\") },\n\t\t\tJAVASCRIPT: { get: createjs.deprecate(function() { return createjs.Types.JAVASCRIPT; }, \"AbstractLoader.JAVASCRIPT\") },\n\t\t\tJSON: { get: createjs.deprecate(function() { return createjs.Types.JSON; }, \"AbstractLoader.JSON\") },\n\t\t\tJSONP: { get: createjs.deprecate(function() { return createjs.Types.JSONP; }, \"AbstractLoader.JSONP\") },\n\t\t\tMANIFEST: { get: createjs.deprecate(function() { return createjs.Types.MANIFEST; }, \"AbstractLoader.MANIFEST\") },\n\t\t\tSOUND: { get: createjs.deprecate(function() { return createjs.Types.SOUND; }, \"AbstractLoader.SOUND\") },\n\t\t\tVIDEO: { get: createjs.deprecate(function() { return createjs.Types.VIDEO; }, \"AbstractLoader.VIDEO\") },\n\t\t\tSPRITESHEET: { get: createjs.deprecate(function() { return createjs.Types.SPRITESHEET; }, \"AbstractLoader.SPRITESHEET\") },\n\t\t\tSVG: { get: createjs.deprecate(function() { return createjs.Types.SVG; }, \"AbstractLoader.SVG\") },\n\t\t\tTEXT: { get: createjs.deprecate(function() { return createjs.Types.TEXT; }, \"AbstractLoader.TEXT\") },\n\t\t\tXML: { get: createjs.deprecate(function() { return createjs.Types.XML; }, \"AbstractLoader.XML\") }\n\t\t});\n\t} catch (e) {}\n\n// Events\n\t/**\n\t * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n\t * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event progress\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n\t * @event loadstart\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.1\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n\t * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n\t * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event error\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n\t * This enables loaders to maintain internal queues, and surface file load errors.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileerror\")\n\t * @param {LoadItem|object} The item that encountered the error\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n\t * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n\t * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n\t * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileload\")\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a `src` property.\n\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t * to a usable object.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n\t * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n\t * @event initialize\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"initialize\")\n\t * @param {AbstractLoader} loader The loader that has been initialized.\n\t */\n\n\n\t/**\n\t * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n\t * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n\t * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t * @method getItem\n\t * @return {Object} The manifest item that this loader is responsible for loading.\n\t * @since 0.6.0\n\t */\n\tp.getItem = function () {\n\t\treturn this._item;\n\t};\n\n\t/**\n\t * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n\t * event is dispatched.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n\t * data (if it exists).\n\t * @return {Object}\n\t * @since 0.6.0\n\t */\n\tp.getResult = function (raw) {\n\t\treturn raw ? this._rawResult : this._result;\n\t};\n\n\t/**\n\t * Return the `tag` this object creates or uses for loading.\n\t * @method getTag\n\t * @return {Object} The tag instance\n\t * @since 0.6.0\n\t */\n\tp.getTag = function () {\n\t\treturn this._tag;\n\t};\n\n\t/**\n\t * Set the `tag` this item uses for loading.\n\t * @method setTag\n\t * @param {Object} tag The tag instance\n\t * @since 0.6.0\n\t */\n\tp.setTag = function(tag) {\n\t  this._tag = tag;\n\t};\n\n\t/**\n\t * Begin loading the item. This method is required when using a loader by itself.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *      queue.on(\"complete\", handleComplete);\n\t *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n\t *      queue.load();\n\t *\n\t * @method load\n\t */\n\tp.load = function () {\n\t\tthis._createRequest();\n\n\t\tthis._request.on(\"complete\", this, this);\n\t\tthis._request.on(\"progress\", this, this);\n\t\tthis._request.on(\"loadStart\", this, this);\n\t\tthis._request.on(\"abort\", this, this);\n\t\tthis._request.on(\"timeout\", this, this);\n\t\tthis._request.on(\"error\", this, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._request;\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._request.load();\n\t};\n\n\t/**\n\t * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n\t * the background), but events will not longer be dispatched.\n\t * @method cancel\n\t */\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis.destroy();\n\t};\n\n\t/**\n\t * Clean up the loader.\n\t * @method destroy\n\t */\n\tp.destroy = function() {\n\t\tif (this._request) {\n\t\t\tthis._request.removeAllEventListeners();\n\t\t\tthis._request.destroy();\n\t\t}\n\n\t\tthis._request = null;\n\n\t\tthis._item = null;\n\t\tthis._rawResult = null;\n\t\tthis._result = null;\n\n\t\tthis._loadItems = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t * to expose items it loads internally.\n\t * @method getLoadedItems\n\t * @return {Array} A list of the items loaded by the loader.\n\t * @since 0.6.0\n\t */\n\tp.getLoadedItems = function () {\n\t\treturn this._loadedItems;\n\t};\n\n\n\t// Private methods\n\t/**\n\t * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n\t * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n\t * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n\t * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n\t * @method _createRequest\n\t * @protected\n\t */\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n\t/**\n\t * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n\t * by loaders that require tag loading.\n\t * @method _createTag\n\t * @param {String} src The tag source\n\t * @return {HTMLElement} The tag that was created\n\t * @protected\n\t */\n\tp._createTag = function(src) { return null; };\n\n\t/**\n\t * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendLoadStart\n\t * @protected\n\t */\n\tp._sendLoadStart = function () {\n\t\tif (this._isCanceled()) { return; }\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n\t * @method _sendProgress\n\t * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n\t * and <code>total</code> properties.\n\t * @protected\n\t */\n\tp._sendProgress = function (value) {\n\t\tif (this._isCanceled()) { return; }\n\t\tvar event = null;\n\t\tif (typeof(value) == \"number\") {\n\t\t\tthis.progress = value;\n\t\t\tevent = new createjs.ProgressEvent(this.progress);\n\t\t} else {\n\t\t\tevent = value;\n\t\t\tthis.progress = value.loaded / value.total;\n\t\t\tevent.progress = this.progress;\n\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t}\n\t\tthis.hasEventListener(\"progress\") && this.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n\t * @method _sendComplete\n\t * @protected\n\t */\n\tp._sendComplete = function () {\n\t\tif (this._isCanceled()) { return; }\n\n\t\tthis.loaded = true;\n\n\t\tvar event = new createjs.Event(\"complete\");\n\t\tevent.rawResult = this._rawResult;\n\n\t\tif (this._result != null) {\n\t\t\tevent.result = this._result;\n\t\t}\n\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendError\n\t * @param {ErrorEvent} event The event object containing specific error properties.\n\t * @protected\n\t */\n\tp._sendError = function (event) {\n\t\tif (this._isCanceled() || !this.hasEventListener(\"error\")) { return; }\n\t\tif (event == null) {\n\t\t\tevent = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n\t\t}\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n\t * do not cause issues after the queue has been cleaned up.\n\t * @method _isCanceled\n\t * @return {Boolean} If the loader has been canceled.\n\t * @protected\n\t */\n\tp._isCanceled = function () {\n\t\tif (window.createjs == null || this.canceled) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n\t * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n\t * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n\t * @property resultFormatter\n\t * @type Function\n\t * @return {Object} The formatted result\n\t * @since 0.6.0\n\t */\n\tp.resultFormatter = null;\n\n\t/**\n\t * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n\t * this method can be overridden for custom behaviours.\n\t * @method handleEvent\n\t * @param {Event} event The event that the internal request dispatches.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target._response;\n\t\t\t\tvar result = this.resultFormatter && this.resultFormatter(this);\n\t\t\t\t// The resultFormatter is asynchronous\n\t\t\t\tif (result instanceof Function) {\n\t\t\t\t\tresult.call(this,\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatSuccess, this),\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatFailed, this)\n\t\t\t\t\t);\n\t\t\t\t// The result formatter is synchronous\n\t\t\t\t} else {\n\t\t\t\t\tthis._result =  result || this._rawResult;\n\t\t\t\t\tthis._sendComplete();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"progress\":\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis._sendError(event);\n\t\t\t\tbreak;\n\t\t\tcase \"loadstart\":\n\t\t\t\tthis._sendLoadStart();\n\t\t\t\tbreak;\n\t\t\tcase \"abort\":\n\t\t\tcase \"timeout\":\n\t\t\t\tif (!this._isCanceled()) {\n\t\t\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/**\n\t * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} result The formatted result\n\t * @private\n\t */\n\tp._resultFormatSuccess = function (result) {\n\t\tthis._result = result;\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} error The error event\n\t * @private\n\t */\n\tp._resultFormatFailed = function (event) {\n\t\tthis._sendError(event);\n\t};\n\n\t/**\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function () {\n\t\treturn \"[PreloadJS AbstractLoader]\";\n\t};\n\n\tcreatejs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n\t * handle HTML media elements, such as Video and Audio.\n\t * @class AbstractMediaLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction AbstractMediaLoader(loadItem, preferXHR, type) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, type);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\n        this.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);\n\n\t// static properties\n\t// public methods\n\tp.load = function () {\n\t\t// TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n\t\tif (!this._tag) {\n\t\t\tthis._tag = this._createTag(this._item.src);\n\t\t}\n\n\t\tthis._tag.preload = \"auto\";\n\t\tthis._tag.load();\n\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\t/**\n\t * Creates a new tag for loading if it doesn't exist yet.\n\t * @method _createTag\n\t * @private\n\t */\n\tp._createTag = function () {};\n\n\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n    // protected methods\n    /**\n     * Before the item loads, set its mimeType and responseType.\n     * @property _updateXHR\n     * @param {Event} event\n     * @private\n     */\n    p._updateXHR = function (event) {\n        // Only exists for XHR\n        if (event.loader.setResponseType) {\n            event.loader.setResponseType(\"blob\");\n        }\n    };\n\n\t/**\n\t * The result formatter for media files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLVideoElement|HTMLAudioElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.onstalled = null;\n\t\tif (this._preferXHR) {\n            var URL = window.URL || window.webkitURL;\n            var result = loader.getResult(true);\n\n\t\t\tloader.getTag().src = URL.createObjectURL(result);\n\t\t}\n\t\treturn loader.getTag();\n\t};\n\n\tcreatejs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n\t * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n\t * hood to get data.\n\t * @class AbstractRequest\n\t * @param {LoadItem} item\n\t * @constructor\n\t */\n\tvar AbstractRequest = function (item) {\n\t\tthis._item = item;\n\t};\n\n\tvar p = createjs.extend(AbstractRequest, createjs.EventDispatcher);\n\n\t// public methods\n\t/**\n\t * Begin a load.\n\t * @method load\n\t */\n\tp.load =  function() {};\n\n\t/**\n\t * Clean up a request.\n\t * @method destroy\n\t */\n\tp.destroy = function() {};\n\n\t/**\n\t * Cancel an in-progress request.\n\t * @method cancel\n\t */\n\tp.cancel = function() {};\n\n\tcreatejs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// TagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n\t * @class TagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t */\n\tfunction TagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\t/**\n\t\t * The HTML tag instance that is used to load.\n\t\t * @property _tag\n\t\t * @type {HTMLElement}\n\t\t * @protected\n\t\t */\n\t\tthis._tag = tag;\n\n\t\t/**\n\t\t * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t * @property _tagSrcAttribute\n\t\t * @type {String}\n\t\t * @protected\n\t\t */\n\t\tthis._tagSrcAttribute = srcAttribute;\n\n\t\t/**\n\t\t * A method closure used for handling the tag load event.\n\t\t * @property _loadedHandler\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\n\t\t/**\n\t\t * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n\t\t * @property _addedToDOM\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._addedToDOM = false;\n\n\t};\n\n\tvar p = createjs.extend(TagRequest, createjs.AbstractRequest);\n\n\t// public methods\n\tp.load = function () {\n\t\tthis._tag.onload = createjs.proxy(this._handleTagComplete, this);\n\t\tthis._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n\t\tthis._tag.onerror = createjs.proxy(this._handleError, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._tag;\n\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\tthis._tag[this._tagSrcAttribute] = this._item.src;\n\n\t\t// wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\t\tif (this._tag.parentNode == null) {\n\t\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\t\t\tthis._addedToDOM = true;\n\t\t}\n\t};\n\n\tp.destroy = function() {\n\t\tthis._clean();\n\t\tthis._tag = null;\n\n\t\tthis.AbstractRequest_destroy();\n\t};\n\n\t// private methods\n\t/**\n\t * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n\t * and LINK tags), but other cases may exist.\n\t * @method _handleReadyStateChange\n\t * @private\n\t */\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\t/**\n\t * Handle any error events from the tag.\n\t * @method _handleError\n\t * @protected\n\t */\n\tp._handleError = function() {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(\"error\");\n\t};\n\n\t/**\n\t * Handle the tag's onload callback.\n\t * @method _handleTagComplete\n\t * @private\n\t */\n\tp._handleTagComplete = function () {\n\t\tthis._rawResult = this._tag;\n\t\tthis._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * The tag request has not loaded within the time specified in loadTimeout.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.Event(\"timeout\"));\n\t};\n\n\t/**\n\t * Remove event listeners, but don't destroy the request object\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function() {\n\t\tthis._tag.onload = null;\n\t\tthis._tag.onreadystatechange = null;\n\t\tthis._tag.onerror = null;\n\t\tif (this._addedToDOM && this._tag.parentNode != null) {\n\t\t\tthis._tag.parentNode.removeChild(this._tag);\n\t\t}\n\t\tclearTimeout(this._loadTimeout);\n\t};\n\n\t/**\n\t * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n\t * that is already in a load, but not complete.\n\t * @method _handleStalled\n\t * @private\n\t */\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\tcreatejs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n\t * @class MediaTagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLAudioElement|HTMLVideoElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t * @constructor\n\t */\n\tfunction MediaTagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\tthis._tag = tag;\n\t\tthis._tagSrcAttribute = srcAttribute;\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\t};\n\n\tvar p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n\tvar s = MediaTagRequest;\n\n\t// public methods\n\tp.load = function () {\n\t\tvar sc = createjs.proxy(this._handleStalled, this);\n\t\tthis._stalledCallback = sc;\n\n\t\tvar pc = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleProgress = pc;\n\n\t\tthis._tag.addEventListener(\"stalled\", sc);\n\t\tthis._tag.addEventListener(\"progress\", pc);\n\n\t\t// This will tell us when audio is buffered enough to play through, but not when its loaded.\n\t\t// The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\t\tthis._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n\t\tthis.TagRequest_load();\n\t};\n\n\t// private methods\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\t/**\n\t * An XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t// protected methods\n\tp._clean = function () {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\t\tthis._tag.removeEventListener(\"progress\", this._progressCallback);\n\n\t\tthis.TagRequest__clean();\n\t};\n\n\tcreatejs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n\n}());\n\n//##############################################################################\n// XHRRequest.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n\t * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n\t * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n\t * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n\t * cross-domain loading.\n\t * @class XHRRequest\n\t * @constructor\n\t * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * for an overview of supported file properties.\n\t * @extends AbstractLoader\n\t */\n\tfunction XHRRequest (item) {\n\t\tthis.AbstractRequest_constructor(item);\n\n\t\t// protected properties\n\t\t/**\n\t\t * A reference to the XHR request used to load the content.\n\t\t * @property _request\n\t\t * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n\t\t * @private\n\t\t */\n\t\tthis._request = null;\n\n\t\t/**\n\t\t * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n\t\t * typically IE9).\n\t\t * @property _loadTimeout\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._loadTimeout = null;\n\n\t\t/**\n\t\t * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n\t\t * the version, so we use capabilities to make a best guess.\n\t\t * @property _xhrLevel\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @private\n\t\t */\n\t\tthis._xhrLevel = 1;\n\n\t\t/**\n\t\t * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n\t\t * null until the file is loaded.\n\t\t * @property _response\n\t\t * @type {mixed}\n\t\t * @private\n\t\t */\n\t\tthis._response = null;\n\n\t\t/**\n\t\t * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n\t\t * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n\t\t * want to access the raw content as it was loaded.\n\t\t * @property _rawResponse\n\t\t * @type {String|Object}\n\t\t * @private\n\t\t */\n\t\tthis._rawResponse = null;\n\n\t\tthis._canceled = false;\n\n\t\t// Setup our event handlers now.\n\t\tthis._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n\t\tthis._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n\t\tthis._handleErrorProxy = createjs.proxy(this._handleError, this);\n\t\tthis._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n\t\tthis._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n\t\tthis._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\n\t\tif (!this._createXHR(item)) {\n\t\t\t//TODO: Throw error?\n\t\t}\n\t};\n\n\tvar p = createjs.extend(XHRRequest, createjs.AbstractRequest);\n\n// static properties\n\t/**\n\t * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n\t * @property ACTIVEX_VERSIONS\n\t * @type {Array}\n\t * @since 0.4.2\n\t * @private\n\t */\n\tXHRRequest.ACTIVEX_VERSIONS = [\n\t\t\"Msxml2.XMLHTTP.6.0\",\n\t\t\"Msxml2.XMLHTTP.5.0\",\n\t\t\"Msxml2.XMLHTTP.4.0\",\n\t\t\"MSXML2.XMLHTTP.3.0\",\n\t\t\"MSXML2.XMLHTTP\",\n\t\t\"Microsoft.XMLHTTP\"\n\t];\n\n// Public methods\n\t/**\n\t * Look up the loaded result.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t * returned instead.\n\t * @return {Object} A result object containing the content that was loaded, such as:\n\t * <ul>\n\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n\t *      HTML head.</li>\n\t *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n\t *      <li>Raw text for TEXT</li>\n\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t *      <li>An XML document</li>\n\t *      <li>An binary arraybuffer loaded by XHR</li>\n\t * </ul>\n\t * Note that if a raw result is requested, but not found, the result will be returned instead.\n\t */\n\tp.getResult = function (raw) {\n\t\tif (raw && this._rawResponse) {\n\t\t\treturn this._rawResponse;\n\t\t}\n\t\treturn this._response;\n\t};\n\n\t// Overrides abstract method in AbstractRequest\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis._clean();\n\t\tthis._request.abort();\n\t};\n\n\t// Overrides abstract method in AbstractLoader\n\tp.load = function () {\n\t\tif (this._request == null) {\n\t\t\tthis._handleError();\n\t\t\treturn;\n\t\t}\n\n\t\t//Events\n\t\tif (this._request.addEventListener != null) {\n\t\t\tthis._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\t\t\tthis._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\t\t\tthis._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\t\t\tthis._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\t\t\tthis._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false);\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\t\t\tthis._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n\t\t} else {\n\t\t\t// IE9 support\n\t\t\tthis._request.onloadstart = this._handleLoadStartProxy;\n\t\t\tthis._request.onprogress = this._handleProgressProxy;\n\t\t\tthis._request.onabort = this._handleAbortProxy;\n\t\t\tthis._request.onerror = this._handleErrorProxy;\n\t\t\tthis._request.ontimeout = this._handleTimeoutProxy;\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.onload = this._handleLoadProxy;\n\t\t\tthis._request.onreadystatechange = this._handleReadyStateChangeProxy;\n\t\t}\n\n\t\t// Set up a timeout if we don't have XHR2\n\t\tif (this._xhrLevel == 1) {\n\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\t}\n\n\t\t// Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\t\ttry {\n\t\t\tif (!this._item.values) {\n\t\t\t\tthis._request.send();\n\t\t\t} else {\n\t\t\t\tthis._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n\t\t}\n\t};\n\n\tp.setResponseType = function (type) {\n\t\t// Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n\t\tif (type === 'blob') {\n\t\t\ttype = window.URL ? 'blob' : 'arraybuffer';\n\t\t\tthis._responseType = type;\n\t\t}\n\t\tthis._request.responseType = type;\n\t};\n\n\t/**\n\t * Get all the response headers from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n\t * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n\t * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n\t * pair.\n\t * @method getAllResponseHeaders\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getAllResponseHeaders = function () {\n\t\tif (this._request.getAllResponseHeaders instanceof Function) {\n\t\t\treturn this._request.getAllResponseHeaders();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t * Get a specific response header from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n\t * header, unless the field name is Set-Cookie or Set-Cookie2.\n\t * @method getResponseHeader\n\t * @param {String} header The header name to retrieve.\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getResponseHeader = function (header) {\n\t\tif (this._request.getResponseHeader instanceof Function) {\n\t\t\treturn this._request.getResponseHeader(header);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n// protected methods\n\t/**\n\t * The XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t/**\n\t * The XHR request has reported a load start.\n\t * @method _handleLoadStart\n\t * @param {Object} event The XHR loadStart event.\n\t * @private\n\t */\n\tp._handleLoadStart = function (event) {\n\t\tclearTimeout(this._loadTimeout);\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * The XHR request has reported an abort event.\n\t * @method handleAbort\n\t * @param {Object} event The XHR abort event.\n\t * @private\n\t */\n\tp._handleAbort = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n\t};\n\n\t/**\n\t * The XHR request has reported an error event.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleError = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(event.message));\n\t};\n\n\t/**\n\t * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n\t * event, so we must monitor the readyStateChange to determine if the file is loaded.\n\t * @method _handleReadyStateChange\n\t * @param {Object} event The XHR readyStateChange event.\n\t * @private\n\t */\n\tp._handleReadyStateChange = function (event) {\n\t\tif (this._request.readyState == 4) {\n\t\t\tthis._handleLoad();\n\t\t}\n\t};\n\n\t/**\n\t * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n\t * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n\t *\n\t * Note that This method uses {{#crossLink \"_checkError\"}}{{/crossLink}} to determine if the server has returned an\n\t * error code.\n\t * @method _handleLoad\n\t * @param {Object} event The XHR load event.\n\t * @private\n\t */\n\tp._handleLoad = function (event) {\n\t\tif (this.loaded) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loaded = true;\n\n\t\tvar error = this._checkError();\n\t\tif (error) {\n\t\t\tthis._handleError(error);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._response = this._getResponse();\n\t\t// Convert arraybuffer back to blob\n\t\tif (this._responseType === 'arraybuffer') {\n\t\t\ttry {\n\t\t\t\tthis._response = new Blob([this._response]);\n\t\t\t} catch (e) {\n\t\t\t\t// Fallback to use BlobBuilder if Blob constructor is not supported\n\t\t\t\t// Tested on Android 2.3 ~ 4.2 and iOS5 safari\n\t\t\t\twindow.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\t\t\t\tif (e.name === 'TypeError' && window.BlobBuilder) {\n\t\t\t\t\tvar builder = new BlobBuilder();\n\t\t\t\t\tbuilder.append(this._response);\n\t\t\t\t\tthis._response = builder.getBlob();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(new createjs.Event(\"complete\"));\n\t};\n\n\t/**\n\t * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n\t * callback.\n\t * @method _handleTimeout\n\t * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n\t * @private\n\t */\n\tp._handleTimeout = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n\t};\n\n// Protected\n\t/**\n\t * Determine if there is an error in the current load.\n\t * Currently this checks the status of the request for problem codes, and not actual response content:\n\t * <ul>\n\t *     <li>Status codes between 400 and 599 (HTTP error range)</li>\n\t *     <li>A status of 0, but *only when the application is running on a server*. If the application is running\n\t *     on `file:`, then it may incorrectly treat an error on local (or embedded applications) as a successful\n\t *     load.</li>\n\t * </ul>\n\t * @method _checkError\n\t * @return {Error} An error with the status code in the `message` argument.\n\t * @private\n\t */\n\tp._checkError = function () {\n\t\tvar status = parseInt(this._request.status);\n\t\tif (status >= 400 && status <= 599) {\n\t\t\treturn new Error(status);\n\t\t} else if (status == 0) {\n\t\t\tif ((/^https?:/).test(location.protocol)) { return new Error(0); }\n\t\t\treturn null; // Likely an embedded app.\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\t/**\n\t * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n\t * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n\t * @method _getResponse\n\t * @private\n\t */\n\tp._getResponse = function () {\n\t\tif (this._response != null) {\n\t\t\treturn this._response;\n\t\t}\n\n\t\tif (this._request.response != null) {\n\t\t\treturn this._request.response;\n\t\t}\n\n\t\t// Android 2.2 uses .responseText\n\t\ttry {\n\t\t\tif (this._request.responseText != null) {\n\t\t\t\treturn this._request.responseText;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\t// When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\t\ttry {\n\t\t\tif (this._request.responseXML != null) {\n\t\t\t\treturn this._request.responseXML;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n\t * Create an XHR request. Depending on a number of factors, we get totally different results.\n\t * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n\t *      <li>XMLHttpRequest are created when available.</li>\n\t *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n\t *      <li>Text requests override the mime type if possible</li>\n\t *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n\t *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n\t * @method _createXHR\n\t * @param {Object} item The requested item that is being loaded.\n\t * @return {Boolean} If an XHR request or equivalent was successfully created.\n\t * @private\n\t */\n\tp._createXHR = function (item) {\n\t\t// Check for cross-domain loads. We can't fully support them, but we can try.\n\t\tvar crossdomain = createjs.URLUtils.isCrossDomain(item);\n\t\tvar headers = {};\n\n\t\t// Create the request. Fallback to whatever support we have.\n\t\tvar req = null;\n\t\tif (window.XMLHttpRequest) {\n\t\t\treq = new XMLHttpRequest();\n\t\t\t// This is 8 or 9, so use XDomainRequest instead.\n\t\t\tif (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n\t\t\t\treq = new XDomainRequest();\n\t\t\t}\n\t\t} else { // Old IE versions use a different approach\n\t\t\tfor (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n\t\t\t\tvar axVersion = s.ACTIVEX_VERSIONS[i];\n\t\t\t\ttry {\n\t\t\t\t\treq = new ActiveXObject(axVersion);\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (req == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Default to utf-8 for Text requests.\n\t\tif (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n\t\t\titem.mimeType = \"text/plain; charset=utf-8\";\n\t\t}\n\n\t\t// IE9 doesn't support overrideMimeType(), so we need to check for it.\n\t\tif (item.mimeType && req.overrideMimeType) {\n\t\t\treq.overrideMimeType(item.mimeType);\n\t\t}\n\n\t\t// Determine the XHR level\n\t\tthis._xhrLevel = (typeof req.responseType === \"string\") ? 2 : 1;\n\n\t\tvar src = null;\n\t\tif (item.method == createjs.Methods.GET) {\n\t\t\tsrc = createjs.URLUtils.buildURI(item.src, item.values);\n\t\t} else {\n\t\t\tsrc = item.src;\n\t\t}\n\n\t\t// Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\t\treq.open(item.method || createjs.Methods.GET, src, true);\n\n\t\tif (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n\t\t\theaders[\"Origin\"] = location.origin;\n\t\t}\n\n\t\t// To send data we need to set the Content-type header)\n\t\tif (item.values && item.method == createjs.Methods.POST) {\n\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\tif (!crossdomain && !headers[\"X-Requested-With\"]) {\n\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t}\n\n\t\tif (item.headers) {\n\t\t\tfor (var n in item.headers) {\n\t\t\t\theaders[n] = item.headers[n];\n\t\t\t}\n\t\t}\n\n\t\tfor (n in headers) {\n\t\t\treq.setRequestHeader(n, headers[n])\n\t\t}\n\n\t\tif (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n\t\t\treq.withCredentials = item.withCredentials;\n\t\t}\n\n\t\tthis._request = req;\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * A request has completed (or failed or canceled), and needs to be disposed.\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function () {\n\t\tclearTimeout(this._loadTimeout);\n\n\t\tif (this._request.removeEventListener != null) {\n\t\t\tthis._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\t\t\tthis._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\t\t\tthis._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\t\t\tthis._request.removeEventListener(\"error\", this._handleErrorProxy);\n\t\t\tthis._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\t\t\tthis._request.removeEventListener(\"load\", this._handleLoadProxy);\n\t\t\tthis._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n\t\t} else {\n\t\t\tthis._request.onloadstart = null;\n\t\t\tthis._request.onprogress = null;\n\t\t\tthis._request.onabort = null;\n\t\t\tthis._request.onerror = null;\n\t\t\tthis._request.ontimeout = null;\n\t\t\tthis._request.onload = null;\n\t\t\tthis._request.onreadystatechange = null;\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[PreloadJS XHRRequest]\";\n\t};\n\n\tcreatejs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// SoundLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n\t * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n\t * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n\t * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n\t * @class SoundLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractMediaLoader\n\t * @constructor\n\t */\n\tfunction SoundLoader(loadItem, preferXHR) {\n\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.Types.SOUND);\n\n\t\t// protected properties\n\t\tif (createjs.DomUtils.isAudioTag(loadItem)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n\t\t\tthis._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n\t\t}\n\n\t\tif (this._tag != null) {\n\t\t\tthis._preferXHR = false;\n\t\t}\n\t};\n\n\tvar p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n\tvar s = SoundLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"Types/SOUND:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.Types.SOUND;\n\t};\n\n\t// protected methods\n\tp._createTag = function (src) {\n\t\tvar tag = createjs.Elements.audio();\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\ttag.src = src;\n\t\treturn tag;\n\t};\n\n\tcreatejs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n\n}());\n\n//##############################################################################\n// AudioSprite.js\n//##############################################################################\n\n//  NOTE this is \"Class\" is purely to document audioSprite Setup and usage.\n\n\n/**\n * <strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\n * out here for quick reference.</strong>\n *\n * Audio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\n * Audio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\n * time. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\n * accidentally playing bits of the neighbouring clips.\n *\n * <strong>Benefits of Audio Sprites:</strong>\n * <ul>\n *     <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n *     <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n *     sounds that could be loaded at once.</li>\n *     <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\n * where the network round trip for each file can add significant latency.</li>\n * </ul>\n *\n * <strong>Drawbacks of Audio Sprites</strong>\n * <ul>\n *     <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n * \t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n * \t\tit.</li>\n *     <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n *     (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n *     `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n *     sounds, the audio may not yet have downloaded fully.</li>\n *     <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n * \t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n * </ul>\n *\n * <h4>Example</h4>\n *\n *\t\tcreatejs.Sound.initializeDefaultPlugins();\n *\t\tvar assetsPath = \"./assets/\";\n *\t\tvar sounds = [{\n *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n *\t\t\t\taudioSprite: [\n *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n *\t\t\t\t]}\n *\t\t\t}\n *\t\t];\n *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n *\t\t// after load is complete\n *\t\tcreatejs.Sound.play(\"sound2\");\n *\n * You can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n *\n * \t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n *\n * The excellent CreateJS community has created a tool to create audio sprites, available at\n * <a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\n * as well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\n * to SoundJS format.\n *\n * @class AudioSprite\n * @since 0.6.0\n */\n\n//##############################################################################\n// PlayPropsConfig.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\t/**\n\t * A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n\t * {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n\t *\n\t * Optional Play Properties Include:\n\t * <ul>\n\t * <li>interrupt - How to interrupt any currently playing instances of audio with the same source,\n\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n\t * <li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n\t * <li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n\t * <li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t * loops), and -1 can be used for infinite playback.</li>\n\t * <li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t * against the individual volume.</li>\n\t * <li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n\t * <li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n\t * <li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n\t * </ul>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tvar props = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n\t * \tcreatejs.Sound.play(\"mySound\", props);\n\t * \t// OR\n\t * \tmySoundInstance.play(props);\n\t *\n\t * @class PlayPropsConfig\n\t * @constructor\n\t * @since 0.6.1\n\t */\n\t// TODO think of a better name for this class\n\tvar PlayPropsConfig = function () {\n// Public Properties\n\t\t/**\n\t\t * How to interrupt any currently playing instances of audio with the same source,\n\t\t * if the maximum number of instances of the sound are already playing. Values are defined as\n\t\t * <code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n\t\t * {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t\t * @property interrupt\n\t\t * @type {string}\n\t\t * @default null\n\t\t */\n\t\tthis.interrupt = null;\n\n\t\t/**\n\t\t * The amount of time to delay the start of audio playback, in milliseconds.\n\t\t * @property delay\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.delay = null;\n\n\t\t/**\n\t\t * The offset from the start of the audio to begin playback, in milliseconds.\n\t\t * @property offset\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.offset = null;\n\n\t\t/**\n\t\t * How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t * loops), and -1 can be used for infinite playback.\n\t\t * @property loop\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.loop = null;\n\n\t\t/**\n\t\t * The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t * against the individual volume.\n\t\t * @property volume\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.volume = null;\n\n\t\t/**\n\t\t * The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t\t * @property pan\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.pan = null;\n\n\t\t/**\n\t\t * Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t\t * @property startTime\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.startTime = null;\n\n\t\t/**\n\t\t * Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t\t * @property duration\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.duration = null;\n\t};\n\tvar p = PlayPropsConfig.prototype = {};\n\tvar s = PlayPropsConfig;\n\n\n// Static Methods\n\t/**\n\t * Creates a PlayPropsConfig from another PlayPropsConfig or an Object.\n\t *\n\t * @method create\n\t * @param {PlayPropsConfig|Object} value The play properties\n\t * @returns {PlayPropsConfig}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (typeof(value) === \"string\") {\n\t\t\t// Handle the old API gracefully.\n\t\t\tconsole && (console.warn || console.log)(\"Deprecated behaviour. Sound.play takes a configuration object instead of individual arguments. See docs for info.\");\n\t\t\treturn new createjs.PlayPropsConfig().set({interrupt:value});\n\t\t} else if (value == null || value instanceof s || value instanceof Object) {\n\t\t\treturn new createjs.PlayPropsConfig().set(value);\n\t\t} else if (value == null) {\n\t\t\tthrow new Error(\"PlayProps configuration not recognized.\");\n\t\t}\n\t};\n\n// Public Methods\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the PlayPropsConfig instance.\n\t * @return {PlayPropsConfig} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tif (props != null) {\n\t\t\tfor (var n in props) { this[n] = props[n]; }\n\t\t}\n\t\treturn this;\n\t};\n\n\tp.toString = function() {\n\t\treturn \"[PlayPropsConfig]\";\n\t};\n\n\tcreatejs.PlayPropsConfig = s;\n\n}());\n\n//##############################################################################\n// Sound.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\n\t * All Sound APIs on this class are static.\n\t *\n\t * <b>Registering and Preloading</b><br />\n\t * Before you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\n\t * or register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\n\t * sound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\n\t * the sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\n\t * preloaded. It is recommended to preload sounds either internally using the register functions or externally using\n\t * PreloadJS so they are ready when you want to use them.\n\t *\n\t * <b>Playback</b><br />\n\t * To play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\n\t * This method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\n\t * Please see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n\t *\n\t * <b>Plugins</b><br />\n\t * By default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\n\t * are used (when available), although developers can change plugin priority or add new plugins (such as the\n\t * provided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\n\t * methods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n\t * {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t *      createjs.Sound.on(\"fileload\", this.loadHandler, this);\n\t *      createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n\t *      function loadHandler(event) {\n     *          // This is fired for each sound that is registered.\n     *          var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n     *          instance.on(\"complete\", this.handleComplete, this);\n     *          instance.volume = 0.5;\n\t *      }\n\t *\n\t * The maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\n\t * of {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\n\t * a default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\n\t * default limit of 100.\n\t *\n\t *      createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n\t *\n\t * Sound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\n\t * automatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\n\t * load. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\n\t * the {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\n\t * preloading. It is recommended that all audio is preloaded before it is played.\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *\t\tqueue.installPlugin(createjs.Sound);\n\t *\n\t * <b>Audio Sprites</b><br />\n\t * SoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\n\t * For those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\n\t * grouped into a single file.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar assetsPath = \"./assets/\";\n\t *\t\tvar sounds = [{\n\t *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t *\t\t\t\taudioSprite: [\n\t *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t *\t\t\t\t]}\n \t *\t\t\t}\n\t *\t\t];\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t *\t\t// after load is complete\n\t *\t\tcreatejs.Sound.play(\"sound2\");\n\t *\n\t * <b>Mobile Playback</b><br />\n\t * Devices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\n\t * initiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\n\t * longer necessary as of SoundJS 0.6.2.\n\t * <ul>\n\t *     <li>\n\t *         In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n\t *         method in the call stack of a user input event to manually unlock the audio context.\n\t *     </li>\n\t *     <li>\n\t *         In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n\t *         and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n\t *         context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n\t *     </li>\n\t *     <li>\n\t *         Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n\t *         will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n\t *         as a \"click\", so if the user long-presses the button, it will no longer work.\n\t *     </li>\n\t *     <li>\n\t *         When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n\t *         the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n\t *         only touch events fire. To get around this, you can either rely on \"touchend\", or:\n\t *         <ol>\n\t *             <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n\t *             <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n\t *         </ol>\n\t *         These settings may change how your application behaves, and are not recommended.\n\t *     </li>\n\t * </ul>\n\t *\n\t * <b>Loading Alternate Paths and Extension-less Files</b><br />\n\t * SoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\n\t * the `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\n\t * how SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\n\t * different folders, or on CDNs, which often has completely different filenames for each file.\n\t *\n\t * Priority is determined by the property order (first property is tried first).  This is supported by both internal loading\n\t * and loading with PreloadJS.\n\t *\n\t * <em>Note: an id is required for playback.</em>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar sounds = {path:\"./audioPath/\",\n\t * \t\t\t\tmanifest: [\n\t *\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n\t *\t\t]};\n\t *\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n\t *\t\tcreatejs.Sound.registerSounds(sounds);\n\t *\n\t * <h3>Known Browser and OS issues</h3>\n\t * <b>IE 9 HTML Audio limitations</b><br />\n\t * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n\t * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n\t * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n     * <li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\n\t * encoding with 64kbps works.</li>\n\t * <li>Occasionally very short samples will get cut off.</li>\n\t * <li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\n\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\n\t * estimate.</li></ul>\n\t *\n\t * <b>Firefox 25 Web Audio limitations</b>\n\t * <ul><li>mp3 audio files do not load properly on all windows machines, reported\n\t * <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\n\t * For this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\n\t * possible.</li></ul>\n\n\t * <b>Safari limitations</b><br />\n\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t *\n\t * <b>iOS 6 Web Audio limitations</b><br />\n\t * <ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\n\t * Mobile Playback above.</li>\n\t * <li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\n\t * at a different sampleRate.</li>\n\t * </ul>\n\t *\n\t * <b>Android HTML Audio limitations</b><br />\n\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t * <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\n\t * a delay.</li></ul>\n\t *\n\t * <b>Web Audio and PreloadJS</b><br />\n\t * <ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\n\t * This means that tag loading can not be used to avoid cross domain issues.</li><ul>\n\t *\n\t * @class Sound\n\t * @static\n\t * @uses EventDispatcher\n\t */\n\tfunction Sound() {\n\t\tthrow \"Sound cannot be instantiated\";\n\t}\n\n\tvar s = Sound;\n\n\n// Static Properties\n\t/**\n\t * The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\n\t * instances of the sound are already playing.\n\t * @property INTERRUPT_ANY\n\t * @type {String}\n\t * @default any\n\t * @static\n\t */\n\ts.INTERRUPT_ANY = \"any\";\n\n\t/**\n\t * The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\n\t * least distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t * @property INTERRUPT_EARLY\n\t * @type {String}\n\t * @default early\n\t * @static\n\t */\n\ts.INTERRUPT_EARLY = \"early\";\n\n\t/**\n\t * The interrupt value to interrupt the currently playing instance with the same source that progressed the most\n\t * distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t * @property INTERRUPT_LATE\n\t * @type {String}\n\t * @default late\n\t * @static\n\t */\n\ts.INTERRUPT_LATE = \"late\";\n\n\t/**\n\t * The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\n\t * instances of the sound are already playing.\n\t * @property INTERRUPT_NONE\n\t * @type {String}\n\t * @default none\n\t * @static\n\t */\n\ts.INTERRUPT_NONE = \"none\";\n\n\t/**\n\t * Defines the playState of an instance that is still initializing.\n\t * @property PLAY_INITED\n\t * @type {String}\n\t * @default playInited\n\t * @static\n\t */\n\ts.PLAY_INITED = \"playInited\";\n\n\t/**\n\t * Defines the playState of an instance that is currently playing or paused.\n\t * @property PLAY_SUCCEEDED\n\t * @type {String}\n\t * @default playSucceeded\n\t * @static\n\t */\n\ts.PLAY_SUCCEEDED = \"playSucceeded\";\n\n\t/**\n\t * Defines the playState of an instance that was interrupted by another instance.\n\t * @property PLAY_INTERRUPTED\n\t * @type {String}\n\t * @default playInterrupted\n\t * @static\n\t */\n\ts.PLAY_INTERRUPTED = \"playInterrupted\";\n\n\t/**\n\t * Defines the playState of an instance that completed playback.\n\t * @property PLAY_FINISHED\n\t * @type {String}\n\t * @default playFinished\n\t * @static\n\t */\n\ts.PLAY_FINISHED = \"playFinished\";\n\n\t/**\n\t * Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\n\t * when the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.\n\t * @property PLAY_FAILED\n\t * @type {String}\n\t * @default playFailed\n\t * @static\n\t */\n\ts.PLAY_FAILED = \"playFailed\";\n\n\t/**\n\t * A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\n\t * can play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\n\t * support additional media types.\n\t *\n\t * NOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * More details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\n\t * A very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.\n\t * @property SUPPORTED_EXTENSIONS\n\t * @type {Array[String]}\n\t * @default [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.SUPPORTED_EXTENSIONS = [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"];\n\n\t/**\n\t * Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\n\t * that support so plugins can accurately determine if an extension is supported.  Adding to this list can help\n\t * plugins determine more accurately if an extension is supported.\n\t *\n \t * A useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.\n\t * @property EXTENSION_MAP\n\t * @type {Object}\n\t * @since 0.4.0\n\t * @default {m4a:\"mp4\"}\n\t * @static\n\t */\n\ts.EXTENSION_MAP = {\n\t\tm4a:\"mp4\"\n\t};\n\n\t/**\n\t * The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\n\t * query strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.\n\t * @property FILE_PATTERN\n\t * @type {RegExp}\n\t * @static\n\t * @private\n\t */\n\ts.FILE_PATTERN = /^(?:(\\w+:)\\/{2}(\\w+(?:\\.\\w+)*\\/?))?([/.]*?(?:[^?]+)?\\/)?((?:[^/?]+)\\.(\\w+))(?:\\?(\\S+)?)?$/;\n\n\n// Class Public properties\n\t/**\n\t * Determines the default behavior for interrupting other currently playing instances with the same source, if the\n\t * maximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\n\t * but this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t * is called without passing a value for interrupt.\n\t * @property defaultInterruptBehavior\n\t * @type {String}\n\t * @default Sound.INTERRUPT_NONE, or \"none\"\n\t * @static\n\t * @since 0.4.0\n\t */\n\ts.defaultInterruptBehavior = s.INTERRUPT_NONE;  // OJR does s.INTERRUPT_ANY make more sense as default?  Needs game dev testing to see which case makes more sense.\n\n\t/**\n\t * An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\n\t * These are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\n\t * extensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\n\t * to exist in the same location, as only the extension is altered.\n\t *\n\t * Note that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\n\t * and {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\tvar sounds = [\n\t *\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n\t *\t];\n\t *\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n\t *\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t *\tcreatejs.Sound.registerSounds(sounds, assetPath);\n\t *\t// ...\n\t *\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach\n\t *\n\t * @property alternateExtensions\n\t * @type {Array}\n\t * @since 0.5.2\n\t * @static\n\t */\n\ts.alternateExtensions = [];\n\n\t/**\n\t * The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\n\t * Sound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t * @property activePlugin\n\t * @type {Object}\n\t * @static\n\t */\n    s.activePlugin = null;\n\n\n// class getter / setter properties\n\n\t/**\n\t * Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\n\t * example, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\n\t * sound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}}\n\t * instead.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.volume = 0.5;\n\t *\n\t * @property volume\n\t * @type {Number}\n\t * @default 1\n\t * @since 0.6.1\n\t */\n\n\t/**\n\t * The internal volume level. Use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} to adjust the master volume.\n\t * @property _masterVolume\n\t * @type {number}\n\t * @default 1\n\t * @private\n\t */\n\ts._masterVolume = 1;\n\n\t/**\n\t * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n\t * @method _getMasterVolume\n\t * @private\n\t * @static\n\t * @return {Number}\n\t **/\n\ts._getMasterVolume = function() {\n\t\treturn this._masterVolume;\n\t};\n\t// Sound.getMasterVolume is @deprecated. Remove for 1.1+\n\ts.getVolume = createjs.deprecate(s._getMasterVolume, \"Sound.getVolume\");\n\t/**\n\t * Use the {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} property instead.\n\t * @method _setMasterVolume\n\t * @static\n\t * @private\n\t **/\n\ts._setMasterVolume = function(value) {\n\t\tif (Number(value) == null) { return; }\n\t\tvalue = Math.max(0, Math.min(1, value));\n\t\ts._masterVolume = value;\n\t\tif (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\tinstances[i].setMasterVolume(value);\n\t\t\t}\n\t\t}\n\t};\n\t// Sound.stMasterVolume is @deprecated. Remove for 1.1+\n\ts.setVolume = createjs.deprecate(s._setMasterVolume, \"Sound.setVolume\");\n\n\t/**\n\t * Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\n\t * separately and when set will override, but not change the mute property of individual instances. To mute an individual\n\t * instance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.muted = true;\n\t *\n\t *\n\t * @property muted\n\t * @type {Boolean}\n\t * @default false\n\t * @since 0.6.1\n\t */\n\ts._masterMute = false;\n\n\t/**\n\t * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n\t * @method _getMute\n\t * @returns {Boolean}\n\t * @static\n\t * @private\n\t */\n\ts._getMute = function () {\n\t\treturn this._masterMute;\n\t};\n\t// Sound.getMute is @deprecated. Remove for 1.1+\n\ts.getMute = createjs.deprecate(s._getMute, \"Sound.getMute\");\n\n\t/**\n\t * Use the {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} property instead.\n\t * @method _setMute\n\t * @param {Boolean} value The muted value\n\t * @static\n\t * @private\n\t */\n\ts._setMute = function (value) {\n\t\tif (value == null) { return; }\n\t\tthis._masterMute = value;\n\t\tif (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\tinstances[i].setMasterMute(value);\n\t\t\t}\n\t\t}\n\t};\n\t// Sound.setMute is @deprecated. Remove for 1.1+\n\ts.setMute = createjs.deprecate(s._setMute, \"Sound.setMute\");\n\n\t/**\n\t * Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\n\t * or if the plugin supports a specific feature. Capabilities include:\n\t * <ul>\n\t *     <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n\t *     <li><b>volume;</b> If the plugin can control audio volume.</li>\n\t *     <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n\t *     if there is no known limit.</li>\n\t * <br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n\t *     <li><b>mp3:</b> If MP3 audio is supported.</li>\n\t *     <li><b>ogg:</b> If OGG audio is supported.</li>\n\t *     <li><b>wav:</b> If WAV audio is supported.</li>\n\t *     <li><b>mpeg:</b> If MPEG audio is supported.</li>\n\t *     <li><b>m4a:</b> If M4A audio is supported.</li>\n\t *     <li><b>mp4:</b> If MP4 audio is supported.</li>\n\t *     <li><b>aiff:</b> If aiff audio is supported.</li>\n\t *     <li><b>wma:</b> If wma audio is supported.</li>\n\t *     <li><b>mid:</b> If mid audio is supported.</li>\n\t * </ul>\n\t *\n\t * You can get a specific capability of the active plugin using standard object notation\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var mp3 = createjs.Sound.capabilities.mp3;\n\t *\n\t * Note this property is read only.\n\t *\n\t * @property capabilities\n\t * @type {Object}\n\t * @static\n\t * @readOnly\n\t * @since 0.6.1\n\t */\n\n\t/**\n\t * Use the {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} property instead.\n\t * @returns {null}\n\t * @private\n\t */\n\ts._getCapabilities = function() {\n\t\tif (s.activePlugin == null) { return null; }\n\t\treturn s.activePlugin._capabilities;\n\t};\n\t// Sound.getCapabilities is @deprecated. Remove for 1.1+\n\ts.getCapabilities = createjs.deprecate(s._getCapabilities, \"Sound.getCapabilities\");\n\n\tObject.defineProperties(s, {\n\t\tvolume: { get: s._getMasterVolume, set: s._setMasterVolume },\n\t\tmuted: { get: s._getMute, set: s._setMute },\n\t\tcapabilities: { get: s._getCapabilities }\n\t});\n\n\n// Class Private properties\n\t/**\n\t * Determines if the plugins have been registered. If false, the first call to {{#crossLink \"play\"}}{{/crossLink}} will instantiate the default\n\t * plugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\n\t * If plugins have been registered, but none are applicable, then sound playback will fail.\n\t * @property _pluginsRegistered\n\t * @type {Boolean}\n\t * @default false\n\t * @static\n\t * @private\n\t */\n\ts._pluginsRegistered = false;\n\n\t/**\n\t * Used internally to assign unique IDs to each AbstractSoundInstance.\n\t * @property _lastID\n\t * @type {Number}\n\t * @static\n\t * @private\n\t */\n\ts._lastID = 0;\n\n\t/**\n\t * An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\n\t * all instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/volume:property\"}}{{/crossLink}}.\n\t * When an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\n\t * method. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\n\t * method.\n\t * @property _instances\n\t * @type {Array}\n\t * @private\n\t * @static\n\t */\n\ts._instances = [];\n\n\t/**\n\t * An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.\n\t * @property _idHash\n\t * @type {Object}\n\t * @private\n\t * @static\n\t */\n\ts._idHash = {};\n\n\t/**\n\t * An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\n\t * source, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\n\t * and data.\n\t * @property _preloadHash\n\t * @type {Object}\n\t * @private\n\t * @static\n\t */\n\ts._preloadHash = {};\n\n\t/**\n\t * An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * @property _defaultPlayPropsHash\n\t * @type {Object}\n\t * @private\n\t * @static\n\t * @since 0.6.1\n\t */\n\ts._defaultPlayPropsHash = {};\n\n\n// EventDispatcher methods:\n\ts.addEventListener = null;\n\ts.removeEventListener = null;\n\ts.removeAllEventListeners = null;\n\ts.dispatchEvent = null;\n\ts.hasEventListener = null;\n\ts._listeners = null;\n\n\tcreatejs.EventDispatcher.initialize(s); // inject EventDispatcher methods.\n\n\n// Events\n\t/**\n\t * This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\n\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} src The source of the sound that was loaded.\n\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t * @since 0.4.1\n\t */\n\n\t/**\n\t * This event is fired when a file fails loading internally. This event is fired for each loaded sound,\n\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} src The source of the sound that was loaded.\n\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t * @since 0.6.0\n\t */\n\n\n// Class Public Methods\n\t/**\n\t * Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * Any load calls that have the matching type or extension will fire the callback method, and use the resulting\n\t * object, which is potentially modified by Sound. This helps when determining the correct path, as well as\n\t * registering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.\n\t * @method getPreloadHandlers\n\t * @return {Object} An object containing:\n\t * <ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n\t *      Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n\t *      <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n\t *      <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>\n\t * @static\n\t * @private\n\t */\n\ts.getPreloadHandlers = function () {\n\t\treturn {\n\t\t\tcallback:createjs.proxy(s.initLoad, s),\n\t\t\ttypes:[\"sound\"],\n\t\t\textensions:s.SUPPORTED_EXTENSIONS\n\t\t};\n\t};\n\n\t/**\n\t * Used to dispatch fileload events from internal loading.\n\t * @method _handleLoadComplete\n\t * @param event A loader event.\n\t * @private\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts._handleLoadComplete = function(event) {\n\t\tvar src = event.target.getItem().src;\n\t\tif (!s._preloadHash[src]) {return;}\n\n\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\tvar item = s._preloadHash[src][i];\n\t\t\ts._preloadHash[src][i] = true;\n\n\t\t\tif (!s.hasEventListener(\"fileload\")) { continue; }\n\n\t\t\tvar event = new createjs.Event(\"fileload\");\n\t\t\tevent.src = item.src;\n\t\t\tevent.id = item.id;\n\t\t\tevent.data = item.data;\n\t\t\tevent.sprite = item.sprite;\n\n\t\t\ts.dispatchEvent(event);\n\t\t}\n\t};\n\n\t/**\n\t * Used to dispatch error events from internal preloading.\n\t * @param event\n\t * @private\n\t * @since 0.6.0\n\t * @static\n\t */\n\ts._handleLoadError = function(event) {\n\t\tvar src = event.target.getItem().src;\n\t\tif (!s._preloadHash[src]) {return;}\n\n\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\tvar item = s._preloadHash[src][i];\n\t\t\ts._preloadHash[src][i] = false;\n\n\t\t\tif (!s.hasEventListener(\"fileerror\")) { continue; }\n\n\t\t\tvar event = new createjs.Event(\"fileerror\");\n\t\t\tevent.src = item.src;\n\t\t\tevent.id = item.id;\n\t\t\tevent.data = item.data;\n\t\t\tevent.sprite = item.sprite;\n\n\t\t\ts.dispatchEvent(event);\n\t\t}\n\t};\n\n\t/**\n\t * Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.\n\t *\n\t * @method _registerPlugin\n\t * @param {Object} plugin The plugin class to install.\n\t * @return {Boolean} Whether the plugin was successfully initialized.\n\t * @static\n\t * @private\n\t */\n\ts._registerPlugin = function (plugin) {\n\t\t// Note: Each plugin is passed in as a class reference, but we store the activePlugin as an instance\n\t\tif (plugin.isSupported()) {\n\t\t\ts.activePlugin = new plugin();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t *\n\t * @method registerPlugins\n\t * @param {Array} plugins An array of plugins classes to install.\n\t * @return {Boolean} Whether a plugin was successfully initialized.\n\t * @static\n\t */\n\ts.registerPlugins = function (plugins) {\n\t\ts._pluginsRegistered = true;\n\t\tfor (var i = 0, l = plugins.length; i < l; i++) {\n\t\t\tif (s._registerPlugin(plugins[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Initialize the default plugins. This method is automatically called when any audio is played or registered before\n\t * the user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\n\t * default plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tif (!createjs.initializeDefaultPlugins()) { return; }\n\t *\n\t * @method initializeDefaultPlugins\n\t * @returns {Boolean} True if a plugin was initialized, false otherwise.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.initializeDefaultPlugins = function () {\n\t\tif (s.activePlugin != null) {return true;}\n\t\tif (s._pluginsRegistered) {return false;}\n\t\tif (s.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])) {return true;}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Determines if Sound has been initialized, and a plugin has been activated.\n\t *\n\t * <h4>Example</h4>\n\t * This example sets up a Flash fallback, but only if there is no plugin specified yet.\n\t *\n\t * \tif (!createjs.Sound.isReady()) {\n\t *\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t * \t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t *\t}\n\t *\n\t * @method isReady\n\t * @return {Boolean} If Sound has initialized a plugin.\n\t * @static\n\t */\n\ts.isReady = function () {\n\t\treturn (s.activePlugin != null);\n\t};\n\n\t/**\n\t * Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\n\t * for usage by a plugin, and not for direct interaction.\n\t * @method initLoad\n\t * @param {Object} src The object to load.\n\t * @return {Object|AbstractLoader} An instance of AbstractLoader.\n\t * @private\n\t * @static\n\t */\n\ts.initLoad = function (loadItem) {\n\t\tif (loadItem.type == \"video\") { return true; } // Don't handle video. PreloadJS's plugin model is really aggressive.\n\t\treturn s._registerSound(loadItem);\n\t};\n\n\t/**\n\t * Internal method for loading sounds.  This should not be called directly.\n\t *\n\t * @method _registerSound\n\t * @param {Object} src The object to load, containing src property and optionally containing id and data.\n\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t * Returns true if the source is already loaded.\n\t * @static\n\t * @private\n\t * @since 0.6.0\n\t */\n\n\ts._registerSound = function (loadItem) {\n\t\tif (!s.initializeDefaultPlugins()) {return false;}\n\n\t\tvar details;\n\t\tif (loadItem.src instanceof Object) {\n\t\t\tdetails = s._parseSrc(loadItem.src);\n\t\t\tdetails.src = loadItem.path + details.src;\n\t\t} else {\n\t\t\tdetails = s._parsePath(loadItem.src);\n\t\t}\n\t\tif (details == null) {return false;}\n\t\tloadItem.src = details.src;\n\t\tloadItem.type = \"sound\";\n\n\t\tvar data = loadItem.data;\n\t\tvar numChannels = null;\n\t\tif (data != null) {\n\t\t\tif (!isNaN(data.channels)) {\n\t\t\t\tnumChannels = parseInt(data.channels);\n\t\t\t} else if (!isNaN(data)) {\n\t\t\t\tnumChannels = parseInt(data);\n\t\t\t}\n\n\t\t\tif(data.audioSprite) {\n\t\t\t\tvar sp;\n\t\t\t\tfor(var i = data.audioSprite.length; i--; ) {\n\t\t\t\t\tsp = data.audioSprite[i];\n\t\t\t\t\ts._idHash[sp.id] = {src: loadItem.src, startTime: parseInt(sp.startTime), duration: parseInt(sp.duration)};\n\n\t\t\t\t\tif (sp.defaultPlayProps) {\n\t\t\t\t\t\ts._defaultPlayPropsHash[sp.id] = createjs.PlayPropsConfig.create(sp.defaultPlayProps);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (loadItem.id != null) {s._idHash[loadItem.id] = {src: loadItem.src}};\n\t\tvar loader = s.activePlugin.register(loadItem);\n\n\t\tSoundChannel.create(loadItem.src, numChannels);\n\n\t\t// return the number of instances to the user.  This will also be returned in the load event.\n\t\tif (data == null || !isNaN(data)) {\n\t\t\tloadItem.data = numChannels || SoundChannel.maxPerChannel();\n\t\t} else {\n\t\t\tloadItem.data.channels = numChannels || SoundChannel.maxPerChannel();\n\t\t}\n\n\t\tif (loader.type) {loadItem.type = loader.type;}\n\n\t\tif (loadItem.defaultPlayProps) {\n\t\t\ts._defaultPlayPropsHash[loadItem.src] = createjs.PlayPropsConfig.create(loadItem.defaultPlayProps);\n\t\t}\n\t\treturn loader;\n\t};\n\n\t/**\n\t * Register an audio file for loading and future playback in Sound. This is automatically called when using\n\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\n\t * need to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t *      createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n\t *      createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);\n\t *\n\t *\n\t * @method registerSound\n\t * @param {String | Object} src The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.\n\t * @param {String} [id] An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.\n\t * @param {Number | Object} [data] Data associated with the item. Sound uses the data parameter as the number of\n\t * channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n\t * for other information. The audio channels will set a default based on plugin if no value is found.\n\t * Sound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n\t *   id used to play the sound later, in the same manner as a sound src with an id.<br/>\n\t *   startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n\t *   duration is the amount of time to play the clip for, in milliseconds.<br/>\n\t * This allows Sound to support audio sprites that are played back by id.\n\t * @param {string} basePath Set a path that will be prepended to src for loading.\n\t * @param {Object | PlayPropsConfig} defaultPlayProps Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\n\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.\n\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t * Returns true if the source is already loaded.\n\t * @static\n\t * @since 0.4.0\n\t */\n\ts.registerSound = function (src, id, data, basePath, defaultPlayProps) {\n\t\tvar loadItem = {src: src, id: id, data:data, defaultPlayProps:defaultPlayProps};\n\t\tif (src instanceof Object && src.src) {\n\t\t\tbasePath = id;\n\t\t\tloadItem = src;\n\t\t}\n\t\tloadItem = createjs.LoadItem.create(loadItem);\n\t\tloadItem.path = basePath;\n\n\t\tif (basePath != null && !(loadItem.src instanceof Object)) {loadItem.src = basePath + loadItem.src;}\n\n\t\tvar loader = s._registerSound(loadItem);\n\t\tif(!loader) {return false;}\n\n\t\tif (!s._preloadHash[loadItem.src]) { s._preloadHash[loadItem.src] = [];}\n\t\ts._preloadHash[loadItem.src].push(loadItem);\n\t\tif (s._preloadHash[loadItem.src].length == 1) {\n\t\t\t// OJR note this will disallow reloading a sound if loading fails or the source changes\n\t\t\tloader.on(\"complete\", this._handleLoadComplete, this);\n\t\t\tloader.on(\"error\", this._handleLoadError, this);\n\t\t\ts.activePlugin.preload(loader);\n\t\t} else {\n\t\t\tif (s._preloadHash[loadItem.src][0] == true) {return true;}\n\t\t}\n\n\t\treturn loadItem;\n\t};\n\n\t/**\n\t * Register an array of audio files for loading and future playback in Sound. It is recommended to register all\n\t * sounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\n\t * when required.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tvar assetPath = \"./myAudioPath/\";\n\t *      var sounds = [\n\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t *          {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n\t *      ];\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n\t *      createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t *      createjs.Sound.registerSounds(sounds, assetPath);\n\t *\n\t * @method registerSounds\n\t * @param {Array} sounds An array of objects to load. Objects are expected to be in the format needed for\n\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\n\t * with \"id\" and \"data\" being optional.\n\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\n\t * Note id is required if src is an object with extension labeled src properties.\n\t * @param {string} basePath Set a path that will be prepended to each src when loading.  When creating, playing, or removing\n\t * audio that was loaded with a basePath by src, the basePath must be included.\n\t * @return {Object} An array of objects with the modified values that were passed in, which defines each sound.\n\t * Like registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\n\t * Also, it will return true for any values when the source is already loaded.\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.registerSounds = function (sounds, basePath) {\n\t\tvar returnValues = [];\n\t\tif (sounds.path) {\n\t\t\tif (!basePath) {\n\t\t\t\tbasePath = sounds.path;\n\t\t\t} else {\n\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t}\n\t\t\tsounds = sounds.manifest;\n\t\t\t// TODO document this feature\n\t\t}\n\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\treturnValues[i] = createjs.Sound.registerSound(sounds[i].src, sounds[i].id, sounds[i].data, basePath, sounds[i].defaultPlayProps);\n\t\t}\n\t\treturn returnValues;\n\t};\n\n\t/**\n\t * Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on active instances playing this sound before deleting them.\n\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.removeSound(\"myID\");\n\t *      createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n\t *      createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n\t *      createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");\n\t *\n\t * @method removeSound\n\t * @param {String | Object} src The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.\n\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t * @return {Boolean} True if sound is successfully removed.\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeSound = function(src, basePath) {\n\t\tif (s.activePlugin == null) {return false;}\n\n\t\tif (src instanceof Object && src.src) {src = src.src;}\n\n\t\tvar details;\n\t\tif (src instanceof Object) {\n\t\t\tdetails = s._parseSrc(src);\n\t\t} else {\n\t\t\tsrc = s._getSrcById(src).src;\n\t\t\tdetails = s._parsePath(src);\n\t\t}\n\t\tif (details == null) {return false;}\n\t\tsrc = details.src;\n\t\tif (basePath != null) {src = basePath + src;}\n\n\t\tfor(var prop in s._idHash){\n\t\t\tif(s._idHash[prop].src == src) {\n\t\t\t\tdelete(s._idHash[prop]);\n\t\t\t}\n\t\t}\n\n\t\t// clear from SoundChannel, which also stops and deletes all instances\n\t\tSoundChannel.removeSrc(src);\n\n\t\tdelete(s._preloadHash[src]);\n\n\t\ts.activePlugin.removeSound(src);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on active instances playing this audio before deleting them.\n\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tassetPath = \"./myPath/\";\n\t *      var sounds = [\n\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t *      ];\n\t *      createjs.Sound.removeSounds(sounds, assetPath);\n\t *\n\t * @method removeSounds\n\t * @param {Array} sounds An array of objects to remove. Objects are expected to be in the format needed for\n\t * {{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\n\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.\n\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t * @return {Object} An array of Boolean values representing if the sounds with the same array index were\n\t * successfully removed.\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeSounds = function (sounds, basePath) {\n\t\tvar returnValues = [];\n\t\tif (sounds.path) {\n\t\t\tif (!basePath) {\n\t\t\t\tbasePath = sounds.path;\n\t\t\t} else {\n\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t}\n\t\t\tsounds = sounds.manifest;\n\t\t}\n\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\treturnValues[i] = createjs.Sound.removeSound(sounds[i].src, basePath);\n\t\t}\n\t\treturn returnValues;\n\t};\n\n\t/**\n\t * Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on all active sound instances before deleting them.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.removeAllSounds();\n\t *\n\t * @method removeAllSounds\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeAllSounds = function() {\n\t\ts._idHash = {};\n\t\ts._preloadHash = {};\n\t\tSoundChannel.removeAll();\n\t\tif (s.activePlugin) {s.activePlugin.removeAllSounds();}\n\t};\n\n\t/**\n\t * Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\n\t * not completed preloading will not kick off a new internal preload if they are played.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     var mySound = \"assetPath/asset0.ogg\";\n\t *     if(createjs.Sound.loadComplete(mySound) {\n\t *         createjs.Sound.play(mySound);\n\t *     }\n\t *\n\t * @method loadComplete\n\t * @param {String} src The src or id that is being loaded.\n\t * @return {Boolean} If the src is already loaded.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.loadComplete = function (src) {\n\t\tif (!s.isReady()) { return false; }\n\t\tvar details = s._parsePath(src);\n\t\tif (details) {\n\t\t\tsrc = s._getSrcById(details.src).src;\n\t\t} else {\n\t\t\tsrc = s._getSrcById(src).src;\n\t\t}\n\t\tif(s._preloadHash[src] == undefined) {return false;}\n\t\treturn (s._preloadHash[src][0] == true);  // src only loads once, so if it's true for the first it's true for all\n\t};\n\n\t/**\n\t * Parse the path of a sound. Alternate extensions will be attempted in order if the\n\t * current extension is not supported\n\t * @method _parsePath\n\t * @param {String} value The path to an audio source.\n\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * @private\n\t * @static\n\t */\n\ts._parsePath = function (value) {\n\t\tif (typeof(value) != \"string\") {value = value.toString();}\n\n\t\tvar match = value.match(s.FILE_PATTERN);\n\t\tif (match == null) {return false;}\n\n\t\tvar name = match[4];\n\t\tvar ext = match[5];\n\t\tvar c = s.capabilities;\n\t\tvar i = 0;\n\t\twhile (!c[ext]) {\n\t\t\text = s.alternateExtensions[i++];\n\t\t\tif (i > s.alternateExtensions.length) { return null;}\t// no extensions are supported\n\t\t}\n\t\tvalue = value.replace(\".\"+match[5], \".\"+ext);\n\n\t\tvar ret = {name:name, src:value, extension:ext};\n\t\treturn ret;\n\t};\n\n\t/**\n\t * Parse the path of a sound based on properties of src matching with supported extensions.\n\t * Returns false if none of the properties are supported\n\t * @method _parseSrc\n\t * @param {Object} value The paths to an audio source, indexed by extension type.\n\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * @private\n\t * @static\n\t */\n\ts._parseSrc = function (value) {\n\t\tvar ret = {name:undefined, src:undefined, extension:undefined};\n\t\tvar c = s.capabilities;\n\n\t\tfor (var prop in value) {\n\t\t  if(value.hasOwnProperty(prop) && c[prop]) {\n\t\t\t\tret.src = value[prop];\n\t\t\t\tret.extension = prop;\n\t\t\t\tbreak;\n\t\t  }\n\t\t}\n\t\tif (!ret.src) {return false;}\t// no matches\n\n\t\tvar i = ret.src.lastIndexOf(\"/\");\n\t\tif (i != -1) {\n\t\t\tret.name = ret.src.slice(i+1);\n\t\t} else {\n\t\t\tret.name = ret.src;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\t/* ---------------\n\t Static API.\n\t --------------- */\n\t/**\n\t * Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to\n\t * play, an AbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\n\t * Note that even on sounds with failed playback, you may still be able to call the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\n\t * method, since the failure could be due to lack of available channels. If the src does not have a supported\n\t * extension or if there is no available plugin, a default AbstractSoundInstance will still be returned, which will\n\t * not play any audio, but will not generate errors.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t *      function handleLoad(event) {\n\t *      \tcreatejs.Sound.play(\"myID\");\n\t *      \t// store off AbstractSoundInstance for controlling\n\t *      \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n\t *      }\n\t *\n\t * NOTE: To create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t *\n\t * @method play\n\t * @param {String} src The src or ID of the audio.\n\t * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n\t * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled\n\t * after it is created.\n\t * @static\n\t */\n\ts.play = function (src, props) {\n\t\tvar playProps = createjs.PlayPropsConfig.create(props);\n\t\tvar instance = s.createInstance(src, playProps.startTime, playProps.duration);\n\t\tvar ok = s._playInstance(instance, playProps);\n\t\tif (!ok) {instance._playFailed();}\n\t\treturn instance;\n\t};\n\n\t/**\n\t * Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\n\t * supported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\n\t * called safely but does nothing.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = null;\n\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t *      function handleLoad(event) {\n\t *      \tmyInstance = createjs.Sound.createInstance(\"myID\");\n\t *      \t// alternately we could call the following\n\t *      \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n\t *      }\n\t *\n\t * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t *\n\t * @method createInstance\n\t * @param {String} src The src or ID of the audio.\n\t * @param {Number} [startTime=null] To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t * @param {Number} [duration=null] To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n\t * Unsupported extensions will return the default AbstractSoundInstance.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.createInstance = function (src, startTime, duration) {\n\t\tif (!s.initializeDefaultPlugins()) { return new createjs.DefaultSoundInstance(src, startTime, duration); }\n\n\t\tvar defaultPlayProps = s._defaultPlayPropsHash[src];\t// for audio sprites, which create and store defaults by id\n\t\tsrc = s._getSrcById(src);\n\n\t\tvar details = s._parsePath(src.src);\n\n\t\tvar instance = null;\n\t\tif (details != null && details.src != null) {\n\t\t\tSoundChannel.create(details.src);\n\t\t\tif (startTime == null) { startTime = src.startTime; }\n\t\t\tinstance = s.activePlugin.create(details.src, startTime, duration || src.duration);\n\n\t\t\tdefaultPlayProps = defaultPlayProps || s._defaultPlayPropsHash[details.src];\n\t\t\tif (defaultPlayProps) {\n\t\t\t\tinstance.applyPlayProps(defaultPlayProps);\n\t\t\t}\n\t\t} else {\n\t\t\tinstance = new createjs.DefaultSoundInstance(src, startTime, duration);\n\t\t}\n\n\t\tinstance.uniqueId = s._lastID++;\n\n\t\treturn instance;\n\t};\n\n\t/**\n\t * Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\n\t * call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.stop();\n\t *\n\t * @method stop\n\t * @static\n\t */\n\ts.stop = function () {\n\t\tvar instances = this._instances;\n\t\tfor (var i = instances.length; i--; ) {\n\t\t\tinstances[i].stop();  // NOTE stop removes instance from this._instances\n\t\t}\n\t};\n\n\t/**\n\t * Set the default playback properties for all new SoundInstances of the passed in src or ID.\n\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.\n\t *\n\t * @method setDefaultPlayProps\n\t * @param {String} src The src or ID used to register the audio.\n\t * @param {Object | PlayPropsConfig} playProps The playback properties you would like to set.\n\t * @since 0.6.1\n\t */\n\ts.setDefaultPlayProps = function(src, playProps) {\n\t\tsrc = s._getSrcById(src);\n\t\ts._defaultPlayPropsHash[s._parsePath(src.src).src] = createjs.PlayPropsConfig.create(playProps);\n\t};\n\n\t/**\n\t * Get the default playback properties for the passed in src or ID.  These properties are applied to all\n\t * new SoundInstances.  Returns null if default does not exist.\n\t *\n\t * @method getDefaultPlayProps\n\t * @param {String} src The src or ID used to register the audio.\n\t * @returns {PlayPropsConfig} returns an existing PlayPropsConfig or null if one does not exist\n\t * @since 0.6.1\n\t */\n\ts.getDefaultPlayProps = function(src) {\n\t\tsrc = s._getSrcById(src);\n\t\treturn s._defaultPlayPropsHash[s._parsePath(src.src).src];\n\t};\n\n\n\t/* ---------------\n\t Internal methods\n\t --------------- */\n\t/**\n\t * Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\n\t * control delays.\n\t * @method _playInstance\n\t * @param {AbstractSoundInstance} instance The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n\t * have a delay will return true, but may still fail to play.\n\t * @private\n\t * @static\n\t */\n\ts._playInstance = function (instance, playProps) {\n\t\tvar defaultPlayProps = s._defaultPlayPropsHash[instance.src] || {};\n\t\tif (playProps.interrupt == null) {playProps.interrupt = defaultPlayProps.interrupt || s.defaultInterruptBehavior};\n\t\tif (playProps.delay == null) {playProps.delay = defaultPlayProps.delay || 0;}\n\t\tif (playProps.offset == null) {playProps.offset = instance.position;}\n\t\tif (playProps.loop == null) {playProps.loop = instance.loop;}\n\t\tif (playProps.volume == null) {playProps.volume = instance.volume;}\n\t\tif (playProps.pan == null) {playProps.pan = instance.pan;}\n\n\t\tif (playProps.delay == 0) {\n\t\t\tvar ok = s._beginPlaying(instance, playProps);\n\t\t\tif (!ok) {return false;}\n\t\t} else {\n\t\t\t//Note that we can't pass arguments to proxy OR setTimeout (IE only), so just wrap the function call.\n\t\t\t// OJR WebAudio may want to handle this differently, so it might make sense to move this functionality into the plugins in the future\n\t\t\tvar delayTimeoutId = setTimeout(function () {\n\t\t\t\ts._beginPlaying(instance, playProps);\n\t\t\t}, playProps.delay);\n\t\t\tinstance.delayTimeoutId = delayTimeoutId;\n\t\t}\n\n\t\tthis._instances.push(instance);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.\n\t * @method _beginPlaying\n\t * @param {AbstractSoundInstance} instance A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If the sound can start playing. If there are no available channels, or the instance fails to\n\t * start, this will return false.\n\t * @private\n\t * @static\n\t */\n\ts._beginPlaying = function (instance, playProps) {\n\t\tif (!SoundChannel.add(instance, playProps.interrupt)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar result = instance._beginPlaying(playProps);\n\t\tif (!result) {\n\t\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\t\tif (index > -1) {this._instances.splice(index, 1);}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\n\t * instead.\n\t * @method _getSrcById\n\t * @param {String} value The ID the sound was registered with.\n\t * @return {String} The source of the sound if it has been registered with this ID or the value that was passed in.\n\t * @private\n\t * @static\n\t */\n\ts._getSrcById = function (value) {\n\t\treturn s._idHash[value] || {src: value};\n\t};\n\n\t/**\n\t * A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\n\t * Sound management. It will be added again, if the sound re-plays. Note that this method is called from the\n\t * instances themselves.\n\t * @method _playFinished\n\t * @param {AbstractSoundInstance} instance The instance that finished playback.\n\t * @private\n\t * @static\n\t */\n\ts._playFinished = function (instance) {\n\t\tSoundChannel.remove(instance);\n\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\tif (index > -1) {this._instances.splice(index, 1);}\t// OJR this will always be > -1, there is no way for an instance to exist without being added to this._instances\n\t};\n\n\tcreatejs.Sound = Sound;\n\n\t/**\n\t * An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\n\t * each sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\t *\n\t * The number of sounds is artificially limited by Sound in order to prevent over-saturation of a\n\t * single sound, as well as to stay within hardware limitations, although the latter may disappear with better\n\t * browser support.\n\t *\n\t * When a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\n\t * sound that is already playing.\n\t * #class SoundChannel\n\t * @param {String} src The source of the instances\n\t * @param {Number} [max=1] The number of instances allowed\n\t * @constructor\n\t * @protected\n\t */\n\tfunction SoundChannel(src, max) {\n\t\tthis.init(src, max);\n\t}\n\n\t/* ------------\n\t Static API\n\t ------------ */\n\t/**\n\t * A hash of channel instances indexed by source.\n\t * #property channels\n\t * @type {Object}\n\t * @static\n\t */\n\tSoundChannel.channels = {};\n\n\t/**\n\t * Create a sound channel. Note that if the sound channel already exists, this will fail.\n\t * #method create\n\t * @param {String} src The source for the channel\n\t * @param {Number} max The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.\n\t * @return {Boolean} If the channels were created.\n\t * @static\n\t */\n\tSoundChannel.create = function (src, max) {\n\t\tvar channel = SoundChannel.get(src);\n\t\tif (channel == null) {\n\t\t\tSoundChannel.channels[src] = new SoundChannel(src, max);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\t/**\n\t * Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n\t * #method remove\n\t * @param {String} src The source for the channel\n\t * @return {Boolean} If the channels were deleted.\n\t * @static\n\t */\n\tSoundChannel.removeSrc = function (src) {\n\t\tvar channel = SoundChannel.get(src);\n\t\tif (channel == null) {return false;}\n\t\tchannel._removeAll();\t// this stops and removes all active instances\n\t\tdelete(SoundChannel.channels[src]);\n\t\treturn true;\n\t};\n\t/**\n\t * Delete all sound channels, stop and delete all related instances.\n\t * #method removeAll\n\t * @static\n\t */\n\tSoundChannel.removeAll = function () {\n\t\tfor(var channel in SoundChannel.channels) {\n\t\t\tSoundChannel.channels[channel]._removeAll();\t// this stops and removes all active instances\n\t\t}\n\t\tSoundChannel.channels = {};\n\t};\n\t/**\n\t * Add an instance to a sound channel.\n\t * #method add\n\t * @param {AbstractSoundInstance} instance The instance to add to the channel\n\t * @param {String} interrupt The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t * for details on interrupt modes.\n\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t * @static\n\t */\n\tSoundChannel.add = function (instance, interrupt) {\n\t\tvar channel = SoundChannel.get(instance.src);\n\t\tif (channel == null) {return false;}\n\t\treturn channel._add(instance, interrupt);\n\t};\n\t/**\n\t * Remove an instance from the channel.\n\t * #method remove\n\t * @param {AbstractSoundInstance} instance The instance to remove from the channel\n\t * @return The success of the method call. If there is no channel, it will return false.\n\t * @static\n\t */\n\tSoundChannel.remove = function (instance) {\n\t\tvar channel = SoundChannel.get(instance.src);\n\t\tif (channel == null) {return false;}\n\t\tchannel._remove(instance);\n\t\treturn true;\n\t};\n\t/**\n\t * Get the maximum number of sounds you can have in a channel.\n\t * #method maxPerChannel\n\t * @return {Number} The maximum number of sounds you can have in a channel.\n\t */\n\tSoundChannel.maxPerChannel = function () {\n\t\treturn p.maxDefault;\n\t};\n\t/**\n\t * Get a channel instance by its src.\n\t * #method get\n\t * @param {String} src The src to use to look up the channel\n\t * @static\n\t */\n\tSoundChannel.get = function (src) {\n\t\treturn SoundChannel.channels[src];\n\t};\n\n\tvar p = SoundChannel.prototype;\n\tp.constructor = SoundChannel;\n\n\t/**\n\t * The source of the channel.\n\t * #property src\n\t * @type {String}\n\t */\n\tp.src = null;\n\n\t/**\n\t * The maximum number of instances in this channel.  -1 indicates no limit\n\t * #property max\n\t * @type {Number}\n\t */\n\tp.max = null;\n\n\t/**\n\t * The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n\t * #property maxDefault\n\t * @type {Number}\n\t * @default 100\n\t * @since 0.4.0\n\t */\n\tp.maxDefault = 100;\n\n\t/**\n\t * The current number of active instances.\n\t * #property length\n\t * @type {Number}\n\t */\n\tp.length = 0;\n\n\t/**\n\t * Initialize the channel.\n\t * #method init\n\t * @param {String} src The source of the channel\n\t * @param {Number} max The maximum number of instances in the channel\n\t * @protected\n\t */\n\tp.init = function (src, max) {\n\t\tthis.src = src;\n\t\tthis.max = max || this.maxDefault;\n\t\tif (this.max == -1) {this.max = this.maxDefault;}\n\t\tthis._instances = [];\n\t};\n\n\t/**\n\t * Get an instance by index.\n\t * #method get\n\t * @param {Number} index The index to return.\n\t * @return {AbstractSoundInstance} The AbstractSoundInstance at a specific instance.\n\t */\n\tp._get = function (index) {\n\t\treturn this._instances[index];\n\t};\n\n\t/**\n\t * Add a new instance to the channel.\n\t * #method add\n\t * @param {AbstractSoundInstance} instance The instance to add.\n\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t */\n\tp._add = function (instance, interrupt) {\n\t\tif (!this._getSlot(interrupt, instance)) {return false;}\n\t\tthis._instances.push(instance);\n\t\tthis.length++;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n\t * #method remove\n\t * @param {AbstractSoundInstance} instance The instance to remove\n\t * @return {Boolean} The success of the remove call. If the instance is not found in this channel, it will\n\t * return false.\n\t */\n\tp._remove = function (instance) {\n\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\tif (index == -1) {return false;}\n\t\tthis._instances.splice(index, 1);\n\t\tthis.length--;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n\t * #method removeAll\n\t */\n\tp._removeAll = function () {\n\t\t// Note that stop() removes the item from the list\n\t\tfor (var i=this.length-1; i>=0; i--) {\n\t\t\tthis._instances[i].stop();\n\t\t}\n\t};\n\n\t/**\n\t * Get an available slot depending on interrupt value and if slots are available.\n\t * #method getSlot\n\t * @param {String} interrupt The interrupt value to use.\n\t * @param {AbstractSoundInstance} instance The sound instance that will go in the channel if successful.\n\t * @return {Boolean} Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n\t * an existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.\n\t */\n\tp._getSlot = function (interrupt, instance) {\n\t\tvar target, replacement;\n\n\t\tif (interrupt != Sound.INTERRUPT_NONE) {\n\t\t\t// First replacement candidate\n\t\t\treplacement = this._get(0);\n\t\t\tif (replacement == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = this.max; i < l; i++) {\n\t\t\ttarget = this._get(i);\n\n\t\t\t// Available Space\n\t\t\tif (target == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Audio is complete or not playing\n\t\t\tif (target.playState == Sound.PLAY_FINISHED ||\n\t\t\t\ttarget.playState == Sound.PLAY_INTERRUPTED ||\n\t\t\t\ttarget.playState == Sound.PLAY_FAILED) {\n\t\t\t\treplacement = target;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (interrupt == Sound.INTERRUPT_NONE) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Audio is a better candidate than the current target, according to playhead\n\t\t\tif ((interrupt == Sound.INTERRUPT_EARLY && target.position < replacement.position) ||\n\t\t\t\t(interrupt == Sound.INTERRUPT_LATE && target.position > replacement.position)) {\n\t\t\t\t\treplacement = target;\n\t\t\t}\n\t\t}\n\n\t\tif (replacement != null) {\n\t\t\treplacement._interrupt();\n\t\t\tthis._remove(replacement);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[Sound SoundChannel]\";\n\t};\n\t// do not add SoundChannel to namespace\n\n}());\n\n//##############################################################################\n// AbstractSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n * {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\n * for control by the user.\n *\n * <h4>Example</h4>\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *\n * A number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\n * API method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n *\n * Once a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\n * the AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\n * is then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\n * playback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\n * will rebuild the references the Sound class need to control it.\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n *      myInstance.on(\"loop\", handleLoop);\n *      function handleLoop(event) {\n *          myInstance.volume = myInstance.volume * 0.5;\n *      }\n *\n * Events are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *      myInstance.on(\"complete\", handleComplete);\n *      myInstance.on(\"loop\", handleLoop);\n *      myInstance.on(\"failed\", handleFailed);\n *\n *\n * @class AbstractSoundInstance\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @extends EventDispatcher\n * @constructor\n */\n\n(function () {\n\t\"use strict\";\n\n\n// Constructor:\n\tvar AbstractSoundInstance = function (src, startTime, duration, playbackResource) {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t// public properties:\n\t\t/**\n\t\t * The source of the sound.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = src;\n\n\t\t/**\n\t\t * The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * @property uniqueId\n\t\t * @type {String} | Number\n\t\t * @default -1\n\t\t */\n\t\tthis.uniqueId = -1;\n\n\t\t/**\n\t\t * The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * @property playState\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.playState = null;\n\n\t\t/**\n\t\t * A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\n\t\t * This allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.\n\t\t * @property delayTimeoutId\n\t\t * @type {timeoutVariable}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis.delayTimeoutId = null;\n\t\t// TODO consider moving delay into AbstractSoundInstance so it can be handled by plugins\n\n\n\t// private properties\n\t// Getter / Setter Properties\n\t\t// OJR TODO find original reason that we didn't use defined functions.  I think it was performance related\n\t\t/**\n\t\t * The volume of the sound, between 0 and 1.\n\t\t *\n\t\t * The actual output volume of a sound can be calculated using:\n\t\t * <code>myInstance.volume * createjs.Sound._getVolume();</code>\n\t\t *\n\t\t * @property volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._volume =  1;\n\t\tObject.defineProperty(this, \"volume\", {\n\t\t\tget: this._getVolume,\n\t\t\tset: this._setVolume\n\t\t});\n\n\t\t/**\n\t\t * The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n\t\t *\n\t\t * Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio\n\t\t * @property pan\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pan =  0;\n\t\tObject.defineProperty(this, \"pan\", {\n\t\t\tget: this._getPan,\n\t\t\tset: this._setPan\n\t\t});\n\n\t\t/**\n\t\t * Audio sprite property used to determine the starting offset.\n\t\t * @property startTime\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis._startTime = Math.max(0, startTime || 0);\n\t\tObject.defineProperty(this, \"startTime\", {\n\t\t\tget: this._getStartTime,\n\t\t\tset: this._setStartTime\n\t\t});\n\n\t\t/**\n\t\t * Sets or gets the length of the audio clip, value is in milliseconds.\n\t\t *\n\t\t * @property duration\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._duration = Math.max(0, duration || 0);\n\t\tObject.defineProperty(this, \"duration\", {\n\t\t\tget: this._getDuration,\n\t\t\tset: this._setDuration\n\t\t});\n\n\t\t/**\n\t\t * Object that holds plugin specific resource need for audio playback.\n\t\t * This is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\n\t\t * HTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.\n\t\t *\n\t\t * @property playbackResource\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._playbackResource = null;\n\t\tObject.defineProperty(this, \"playbackResource\", {\n\t\t\tget: this._getPlaybackResource,\n\t\t\tset: this._setPlaybackResource\n\t\t});\n\t\tif(playbackResource !== false && playbackResource !== true) { this._setPlaybackResource(playbackResource); }\n\n\t\t/**\n\t\t * The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.\n\t\t *\n\t\t * @property position\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._position = 0;\n\t\tObject.defineProperty(this, \"position\", {\n\t\t\tget: this._getPosition,\n\t\t\tset: this._setPosition\n\t\t});\n\n\t\t/**\n\t\t * The number of play loops remaining. Negative values will loop infinitely.\n\t\t *\n\t\t * @property loop\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @public\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._loop = 0;\n\t\tObject.defineProperty(this, \"loop\", {\n\t\t\tget: this._getLoop,\n\t\t\tset: this._setLoop\n\t\t});\n\n\t\t/**\n\t\t * Mutes or unmutes the current audio instance.\n\t\t *\n\t\t * @property muted\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._muted = false;\n\t\tObject.defineProperty(this, \"muted\", {\n\t\t\tget: this._getMuted,\n\t\t\tset: this._setMuted\n\t\t});\n\n\t\t/**\n\t\t * Pauses or resumes the current audio instance.\n\t\t *\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._paused = false;\n\t\tObject.defineProperty(this, \"paused\", {\n\t\t\tget: this._getPaused,\n\t\t\tset: this._setPaused\n\t\t});\n\n\n\t// Events\n\t\t/**\n\t\t * The event that is fired when playback has started successfully.\n\t\t * @event succeeded\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback is interrupted. This happens when another sound with the same\n\t\t * src property is played using an interrupt value that causes this instance to stop playing.\n\t\t * @event interrupted\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback has failed. This happens when there are too many channels with the same\n\t\t * src property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\n\t\t * the sound could not be played, perhaps due to a 404 error.\n\t\t * @event failed\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when a sound has completed playing but has loops remaining.\n\t\t * @event loop\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback completes. This means that the sound has finished playing in its\n\t\t * entirety, including its loop iterations.\n\t\t * @event complete\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\t};\n\n\tvar p = createjs.extend(AbstractSoundInstance, createjs.EventDispatcher);\n\n// Public Methods:\n\t/**\n\t * Play an instance. This method is intended to be called on SoundInstances that already exist (created\n\t * with the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = createjs.Sound.createInstance(mySrc);\n\t *      myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n\t *\n\t * Note that if this sound is already playing, this call will still set the passed in parameters.\n\n\t * <b>Parameters Deprecated</b><br />\n\t * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n\t *\n\t * @method play\n\t * @param {Object | PlayPropsConfig} props A PlayPropsConfig instance, or an object that contains the parameters to\n\t * play a sound. See the {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for more info.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.play = function (props) {\n\t\tvar playProps = createjs.PlayPropsConfig.create(props);\n\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis.applyPlayProps(playProps);\n\t\t\tif (this._paused) {\tthis._setPaused(false); }\n\t\t\treturn;\n\t\t}\n\t\tthis._cleanUp();\n\t\tcreatejs.Sound._playInstance(this, playProps);\t// make this an event dispatch??\n\t\treturn this;\n\t};\n\n\t/**\n\t * Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\n\t * will fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n     *\n     * If you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     myInstance.stop();\n\t *\n\t * @method stop\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.stop = function () {\n\t\tthis._position = 0;\n\t\tthis._paused = false;\n\t\tthis._handleStop();\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work\n\t * @method destroy\n\t * @since 0.6.0\n\t */\n\tp.destroy = function() {\n\t\tthis._cleanUp();\n\t\tthis.src = null;\n\t\tthis.playbackResource = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.\n\t * @method applyPlayProps\n\t * @param {PlayPropsConfig | Object} playProps A PlayPropsConfig or object containing the same properties.\n\t * @since 0.6.1\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.applyPlayProps = function(playProps) {\n\t\tif (playProps.offset != null) { this._setPosition(playProps.offset) }\n\t\tif (playProps.loop != null) { this._setLoop(playProps.loop); }\n\t\tif (playProps.volume != null) { this._setVolume(playProps.volume); }\n\t\tif (playProps.pan != null) { this._setPan(playProps.pan); }\n\t\tif (playProps.startTime != null) {\n\t\t\tthis._setStartTime(playProps.startTime);\n\t\t\tthis._setDuration(playProps.duration);\n\t\t}\n\t\treturn this;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[AbstractSoundInstance]\";\n\t};\n\n// get/set methods that allow support for IE8\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property.\n\t * @method _getPaused\n\t * @protected\n\t * @return {boolean} If the instance is currently paused\n\t * @since 0.6.0\n\t */\n\tp._getPaused = function() {\n\t\treturn this._paused;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPaused\n\t * @protected\n\t * @param {boolean} value\n\t * @since 0.6.0\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp._setPaused = function (value) {\n\t\tif ((value !== true && value !== false) || this._paused == value) {return;}\n\t\tif (value == true && this.playState != createjs.Sound.PLAY_SUCCEEDED) {return;}\n\t\tthis._paused = value;\n\t\tif(value) {\n\t\t\tthis._pause();\n\t\t} else {\n\t\t\tthis._resume();\n\t\t}\n\t\tclearTimeout(this.delayTimeoutId);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t * @method _setVolume\n\t * @protected\n\t * @param {Number} value The volume to set, between 0 and 1.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp._setVolume = function (value) {\n\t\tif (value == this._volume) { return this; }\n\t\tthis._volume = Math.max(0, Math.min(1, value));\n\t\tif (!this._muted) {\n\t\t\tthis._updateVolume();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t * @method _getVolume\n\t * @protected\n\t * @return {Number} The current volume of the sound instance.\n\t */\n\tp._getVolume = function () {\n\t\treturn this._volume;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t * @method _setMuted\n\t * @protected\n\t * @param {Boolean} value If the sound should be muted.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t * @since 0.6.0\n\t */\n\tp._setMuted = function (value) {\n\t\tif (value !== true && value !== false) {return;}\n\t\tthis._muted = value;\n\t\tthis._updateVolume();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t * @method _getMuted\n\t * @protected\n\t * @return {Boolean} If the sound is muted.\n\t * @since 0.6.0\n\t */\n\tp._getMuted = function () {\n\t\treturn this._muted;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPan\n\t * @protected\n\t * @param {Number} value The pan value, between -1 (left) and 1 (right).\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp._setPan = function (value) {\n\t\tif(value == this._pan) { return this; }\n\t\tthis._pan = Math.max(-1, Math.min(1, value));\n\t\tthis._updatePan();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t * @method _getPan\n\t * @protected\n\t * @return {Number} The value of the pan, between -1 (left) and 1 (right).\n\t */\n\tp._getPan = function () {\n\t\treturn this._pan;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t * @method _getPosition\n\t * @protected\n\t * @return {Number} The position of the playhead in the sound, in milliseconds.\n\t */\n\tp._getPosition = function () {\n\t\tif (!this._paused && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._position = this._calculateCurrentPosition();\n\t\t}\n\t\treturn this._position;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPosition\n\t * @protected\n\t * @param {Number} value The position to place the playhead, in milliseconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp._setPosition = function (value) {\n\t\tthis._position = Math.max(0, value);\n\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._updatePosition();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t * @method _getStartTime\n\t * @protected\n\t * @return {Number} The startTime of the sound instance in milliseconds.\n\t */\n\tp._getStartTime = function () {\n\t\treturn this._startTime;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t * @method _setStartTime\n\t * @protected\n\t * @param {number} value The new startTime time in milli seconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp._setStartTime = function (value) {\n\t\tif (value == this._startTime) { return this; }\n\t\tthis._startTime = Math.max(0, value || 0);\n\t\tthis._updateStartTime();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t * @method _getDuration\n\t * @protected\n\t * @return {Number} The duration of the sound instance in milliseconds.\n\t */\n\tp._getDuration = function () {\n\t\treturn this._duration;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t * @method _setDuration\n\t * @protected\n\t * @param {number} value The new duration time in milli seconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t * @since 0.6.0\n\t */\n\tp._setDuration = function (value) {\n\t\tif (value == this._duration) { return this; }\n\t\tthis._duration = Math.max(0, value || 0);\n\t\tthis._updateDuration();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t * @method _setPlaybackResource\n\t * @protected\n\t * @param {Object} value The new playback resource.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t * @since 0.6.0\n\t **/\n\tp._setPlaybackResource = function (value) {\n\t\tthis._playbackResource = value;\n\t\tif (this._duration == 0 && this._playbackResource) { this._setDurationFromSource(); }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t * @method _getPlaybackResource\n\t * @protected\n\t * @param {Object} value The new playback resource.\n\t * @return {Object} playback resource used for playing audio\n\t * @since 0.6.0\n\t **/\n\tp._getPlaybackResource = function () {\n\t\treturn this._playbackResource;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n\t * @method _getLoop\n\t * @protected\n\t * @return {number}\n\t * @since 0.6.0\n\t **/\n\tp._getLoop = function () {\n\t\treturn this._loop;\n\t};\n\n\t/**\n\t * Please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n\t * @method _setLoop\n\t * @protected\n\t * @param {number} value The number of times to loop after play.\n\t * @since 0.6.0\n\t */\n\tp._setLoop = function (value) {\n\t\tif(this._playbackResource != null) {\n\t\t\t// remove looping\n\t\t\tif (this._loop != 0 && value == 0) {\n\t\t\t\tthis._removeLooping(value);\n\t\t\t}\n\t\t\t// add looping\n\t\t\telse if (this._loop == 0 && value != 0) {\n\t\t\t\tthis._addLooping(value);\n\t\t\t}\n\t\t}\n\t\tthis._loop = value;\n\t};\n\n\n// Private Methods:\n\t/**\n\t * A helper method that dispatches all events for AbstractSoundInstance.\n\t * @method _sendEvent\n\t * @param {String} type The event type\n\t * @protected\n\t */\n\tp._sendEvent = function (type) {\n\t\tvar event = new createjs.Event(type);\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Clean up the instance. Remove references and clean up any additional properties such as timers.\n\t * @method _cleanUp\n\t * @protected\n\t */\n\tp._cleanUp = function () {\n\t\tclearTimeout(this.delayTimeoutId); // clear timeout that plays delayed sound\n\t\tthis._handleCleanUp();\n\t\tthis._paused = false;\n\n\t\tcreatejs.Sound._playFinished(this);\t// TODO change to an event\n\t};\n\n\t/**\n\t * The sound has been interrupted.\n\t * @method _interrupt\n\t * @protected\n\t */\n\tp._interrupt = function () {\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_INTERRUPTED;\n\t\tthis._sendEvent(\"interrupted\");\n\t};\n\n\t/**\n\t * Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\n\t * src is loaded, otherwise playback will fail.\n\t * @method _beginPlaying\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If playback succeeded.\n\t * @protected\n\t */\n\t// OJR FlashAudioSoundInstance overwrites\n\tp._beginPlaying = function (playProps) {\n\t\tthis._setPosition(playProps.offset);\n\t\tthis._setLoop(playProps.loop);\n\t\tthis._setVolume(playProps.volume);\n\t\tthis._setPan(playProps.pan);\n\t\tif (playProps.startTime != null) {\n\t\t\tthis._setStartTime(playProps.startTime);\n\t\t\tthis._setDuration(playProps.duration);\n\t\t}\n\n\t\tif (this._playbackResource != null && this._position < this._duration) {\n\t\t\tthis._paused = false;\n\t\t\tthis._handleSoundReady();\n\t\t\tthis.playState = createjs.Sound.PLAY_SUCCEEDED;\n\t\t\tthis._sendEvent(\"succeeded\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis._playFailed();\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Play has failed, which can happen for a variety of reasons.\n\t * Cleans up instance and dispatches failed event\n\t * @method _playFailed\n\t * @private\n\t */\n\tp._playFailed = function () {\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FAILED;\n\t\tthis._sendEvent(\"failed\");\n\t};\n\n\t/**\n\t * Audio has finished playing. Manually loop it if required.\n\t * @method _handleSoundComplete\n\t * @param event\n\t * @protected\n\t */\n\tp._handleSoundComplete = function (event) {\n\t\tthis._position = 0;  // have to set this as it can be set by pause during playback\n\n\t\tif (this._loop != 0) {\n\t\t\tthis._loop--;  // NOTE this introduces a theoretical limit on loops = float max size x 2 - 1\n\t\t\tthis._handleLoop();\n\t\t\tthis._sendEvent(\"loop\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\tthis._sendEvent(\"complete\");\n\t};\n\n// Plugin specific code\n\t/**\n\t * Handles starting playback when the sound is ready for playing.\n\t * @method _handleSoundReady\n\t * @protected\n \t */\n\tp._handleSoundReady = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the volume based on the instance volume, master volume, instance mute value,\n\t * and master mute value.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the pan\n\t * @method _updatePan\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updatePan = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the startTime of the audio.\n\t * @method _updateStartTime\n\t * @protected\n\t * @since 0.6.1\n\t */\n\tp._updateStartTime = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the duration of the audio.\n\t * @method _updateDuration\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updateDuration = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to get the duration of the audio from the source we'll be playing.\n\t * @method _updateDuration\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._setDurationFromSource = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function that calculates the current position of the playhead and sets this._position to that value\n\t * @method _calculateCurrentPosition\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._calculateCurrentPosition = function () {\n\t\t// plugin specific code that sets this.position\n\t};\n\n\t/**\n\t * Internal function used to update the position of the playhead.\n\t * @method _updatePosition\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updatePosition = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when looping is removed during playback.\n\t * @method _removeLooping\n\t * @param {number} value The number of times to loop after play.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._removeLooping = function (value) {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when looping is added during playback.\n\t * @method _addLooping\n\t * @param {number} value The number of times to loop after play.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._addLooping = function (value) {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when pausing playback\n\t * @method _pause\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._pause = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when resuming playback\n\t * @method _resume\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._resume = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when stopping playback\n\t * @method _handleStop\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleStop = function() {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when AbstractSoundInstance is being cleaned up\n\t * @method _handleCleanUp\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleCleanUp = function() {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when AbstractSoundInstance has played to end and is looping\n\t * @method _handleLoop\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleLoop = function () {\n\t\t// plugin specific code\n\t};\n\n\tcreatejs.AbstractSoundInstance = createjs.promote(AbstractSoundInstance, \"EventDispatcher\");\n\tcreatejs.DefaultSoundInstance = createjs.AbstractSoundInstance;\t// used when no plugin is supported\n}());\n\n//##############################################################################\n// AbstractPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n \t/**\n\t * A default plugin class used as a base for all other plugins.\n\t * @class AbstractPlugin\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\n\tvar AbstractPlugin = function () {\n\t// private properties:\n\t\t/**\n\t\t * The capabilities of the plugin.\n\t\t * method and is used internally.\n\t\t * @property _capabilities\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\tthis._capabilities = null;\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._loaders = {};\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\n\t\t * is currently loading, or has completed loading.  Can be used to store non boolean data after loading\n\t\t * is complete (for example arrayBuffers for web audio).\n\t\t * @property _audioSources\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._audioSources = {};\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\n\t\t * and properly destroy them if sources are removed\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._soundInstances = {};\n\n\t\t/**\n\t\t * The internal master volume value of the plugin.\n\t\t * @property _volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @protected\n\t\t */\n\t\tthis._volume = 1;\n\n\t\t/**\n\t\t * A reference to a loader class used by a plugin that must be set.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._loaderClass;\n\n\t\t/**\n\t\t * A reference to an AbstractSoundInstance class used by a plugin that must be set.\n\t\t * @type {Object}\n\t\t * @protected;\n\t\t */\n\t\tthis._soundInstanceClass;\n\t};\n\tvar p = AbstractPlugin.prototype;\n\n// Static Properties:\n// NOTE THESE PROPERTIES NEED TO BE ADDED TO EACH PLUGIN\n\t/**\n\t * The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @default null\n\t * @private\n\t * @static\n\t */\n\tAbstractPlugin._capabilities = null;\n\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\tAbstractPlugin.isSupported = function () {\n\t\treturn true;\n\t};\n\n\n// public methods:\n\t/**\n\t * Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t * Note all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\n\t * can use to assist with preloading.\n\t * @method register\n\t * @param {String} loadItem An Object containing the source of the audio\n\t * Note that not every plugin will manage this value.\n\t * @return {Object} A result object, containing a \"tag\" for preloading purposes.\n\t */\n\tp.register = function (loadItem) {\n\t\tvar loader = this._loaders[loadItem.src];\n\t\tif(loader && !loader.canceled) {return this._loaders[loadItem.src];}\t// already loading/loaded this, so don't load twice\n\t\t// OJR potential issue that we won't be firing loaded event, might need to trigger if this is already loaded?\n\t\tthis._audioSources[loadItem.src] = true;\n\t\tthis._soundInstances[loadItem.src] = [];\n\t\tloader = new this._loaderClass(loadItem);\n\t\tloader.on(\"complete\", this._handlePreloadComplete, this);\n\t\tthis._loaders[loadItem.src] = loader;\n\t\treturn loader;\n\t};\n\n\t// note sound calls register before calling preload\n\t/**\n\t * Internally preload a sound.\n\t * @method preload\n\t * @param {Loader} loader The sound URI to load.\n\t */\n\tp.preload = function (loader) {\n\t\tloader.on(\"error\", this._handlePreloadError, this);\n\t\tloader.load();\n\t};\n\n\t/**\n\t * Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\n\t * or has already finished loading.\n\t * @method isPreloadStarted\n\t * @param {String} src The sound URI to check.\n\t * @return {Boolean}\n\t */\n\tp.isPreloadStarted = function (src) {\n\t\treturn (this._audioSources[src] != null);\n\t};\n\n\t/**\n\t * Checks if preloading has finished for a specific source.\n\t * @method isPreloadComplete\n\t * @param {String} src The sound URI to load.\n\t * @return {Boolean}\n\t */\n\tp.isPreloadComplete = function (src) {\n\t\treturn (!(this._audioSources[src] == null || this._audioSources[src] == true));\n\t};\n\n\t/**\n\t * Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t * @method removeSound\n\t * @param {String} src The sound URI to unload.\n\t */\n\tp.removeSound = function (src) {\n\t\tif (!this._soundInstances[src]) { return; }\n\t\tfor (var i = this._soundInstances[src].length; i--; ) {\n\t\t\tvar item = this._soundInstances[src][i];\n\t\t\titem.destroy();\n\t\t}\n\t\tdelete(this._soundInstances[src]);\n\t\tdelete(this._audioSources[src]);\n\t\tif(this._loaders[src]) { this._loaders[src].destroy(); }\n\t\tdelete(this._loaders[src]);\n\t};\n\n\t/**\n\t * Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t * @method removeAllSounds\n\t * @param {String} src The sound URI to unload.\n\t */\n\tp.removeAllSounds = function () {\n\t\tfor(var key in this._audioSources) {\n\t\t\tthis.removeSound(key);\n\t\t}\n\t};\n\n\t/**\n\t * Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.\n\t * @method create\n\t * @param {String} src The sound source to use.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @return {AbstractSoundInstance} A sound instance for playback and control.\n\t */\n\tp.create = function (src, startTime, duration) {\n\t\tif (!this.isPreloadStarted(src)) {\n\t\t\tthis.preload(this.register(src));\n\t\t}\n\t\tvar si = new this._soundInstanceClass(src, startTime, duration, this._audioSources[src]);\n\t\tif(this._soundInstances[src]){\n\t\t\tthis._soundInstances[src].push(si);\n\t\t}\n\n\t\t// Plugins that don't have a setVolume should implement a setMasterVolune/setMasterMute\n\t\t// So we have to check that here.\n\t\tsi.setMasterVolume && si.setMasterVolume(createjs.Sound.volume);\n\t\tsi.setMasterMute && si.setMasterMute(createjs.Sound.muted);\n\n\t\treturn si;\n\t};\n\n\t// if a plugin does not support volume and mute, it should set these to null\n\t/**\n\t * Set the master volume of the plugin, which affects all SoundInstances.\n\t * @method setVolume\n\t * @param {Number} value The volume to set, between 0 and 1.\n\t * @return {Boolean} If the plugin processes the setVolume call (true). The Sound class will affect all the\n\t * instances manually otherwise.\n\t */\n\tp.setVolume = function (value) {\n\t\tthis._volume = value;\n\t\tthis._updateVolume();\n\t\treturn true;\n\t};\n\n\t/**\n\t * Get the master volume of the plugin, which affects all SoundInstances.\n\t * @method getVolume\n\t * @return {Number} The volume level, between 0 and 1.\n\t */\n\tp.getVolume = function () {\n\t\treturn this._volume;\n\t};\n\n\t/**\n\t * Mute all sounds via the plugin.\n\t * @method setMute\n\t * @param {Boolean} value If all sound should be muted or not. Note that plugin-level muting just looks up\n\t * the mute value of Sound {{#crossLink \"Sound/muted:property\"}}{{/crossLink}}, so this property is not used here.\n\t * @return {Boolean} If the mute call succeeds.\n\t */\n\tp.setMute = function (value) {\n\t\tthis._updateVolume();\n\t\treturn true;\n\t};\n\n\t// plugins should overwrite this method\n\tp.toString = function () {\n\t\treturn \"[AbstractPlugin]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * Handles internal preload completion.\n\t * @method _handlePreloadComplete\n\t * @param event\n\t * @protected\n\t */\n\tp._handlePreloadComplete = function (event) {\n\t\tvar src = event.target.getItem().src;\n\t\tthis._audioSources[src] = event.result;\n\t\tif (!this._soundInstances[src]) { return; }\n\t\tfor (var i = 0, l = this._soundInstances[src].length; i < l; i++) {\n\t\t\tvar item = this._soundInstances[src][i];\n\t\t\titem.playbackResource = this._audioSources[src];\n\t\t\t// ToDo consider adding play call here if playstate == playfailed\n\t\t\tthis._soundInstances[src] = null;\n\t\t}\n\t};\n\n\t/**\n\t * Handles internal preload errors\n\t * @method _handlePreloadError\n\t * @param event\n\t * @protected\n\t */\n\tp._handlePreloadError = function(event) {\n\t\t//delete(this._audioSources[src]);\n\t};\n\n\t/**\n\t * Set the gain value for master audio. Should not be called externally.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\t// Plugin Specific code\n\t};\n\n\tcreatejs.AbstractPlugin = AbstractPlugin;\n}());\n\n//##############################################################################\n// WebAudioLoader.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\n\t * the preloader, and the load method is called when the asset needs to be requested.\n\t *\n\t * @class WebAudioLoader\n\t * @param {String} loadItem The item to be loaded\n\t * @extends XHRRequest\n\t * @protected\n\t */\n\tfunction Loader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.Types.SOUND);\n\n\t};\n\tvar p = createjs.extend(Loader, createjs.AbstractLoader);\n\n\t/**\n\t * web audio context required for decoding audio\n\t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t */\n\tLoader.context = null;\n\n\n// public methods\n\tp.toString = function () {\n\t\treturn \"[WebAudioLoader]\";\n\t};\n\n\n// private methods\n\tp._createRequest = function() {\n\t\tthis._request = new createjs.XHRRequest(this._item, false);\n\t\tthis._request.setResponseType(\"arraybuffer\");\n\t};\n\n\tp._sendComplete = function (event) {\n\t\t// OJR we leave this wrapped in Loader because we need to reference src and the handler only receives a single argument, the decodedAudio\n\t\tLoader.context.decodeAudioData(this._rawResult,\n\t         createjs.proxy(this._handleAudioDecoded, this),\n\t         createjs.proxy(this._sendError, this));\n\t};\n\n\n\t/**\n\t* The audio has been decoded.\n\t* @method handleAudioDecoded\n\t* @param decoded\n\t* @protected\n\t*/\n\tp._handleAudioDecoded = function (decodedAudio) {\n\t\tthis._result = decodedAudio;\n\t\tthis.AbstractLoader__sendComplete();\n\t};\n\n\tcreatejs.WebAudioLoader = createjs.promote(Loader, \"AbstractLoader\");\n}());\n\n//##############################################################################\n// WebAudioSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n/**\n * WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n *\n * WebAudioSoundInstance exposes audioNodes for advanced users.\n *\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @class WebAudioSoundInstance\n * @extends AbstractSoundInstance\n * @constructor\n */\n(function () {\n\t\"use strict\";\n\n\tfunction WebAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n\n// public properties\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.\n\t\t * @property gainNode\n\t\t * @type {AudioGainNode}\n\t\t * @since 0.4.0\n\t\t *\n\t\t */\n\t\tthis.gainNode = s.context.createGain();\n\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t * @property panNode\n\t\t * @type {AudioPannerNode}\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis.panNode = s.context.createPanner();\n\t\tthis.panNode.panningModel = s._panningModel;\n\t\tthis.panNode.connect(this.gainNode);\n\t\tthis._updatePan();\n\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.\n\t\t * @property sourceNode\n\t\t * @type {AudioNode}\n\t\t * @since 0.4.0\n\t\t *\n\t\t */\n\t\tthis.sourceNode = null;\n\n\n// private properties\n\t\t/**\n\t\t * Timeout that is created internally to handle sound playing to completion.\n\t\t * Stored so we can remove it when stop, pause, or cleanup are called\n\t\t * @property _soundCompleteTimeout\n\t\t * @type {timeoutVariable}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis._soundCompleteTimeout = null;\n\n\t\t/**\n\t\t * NOTE this is only intended for use by very advanced users.\n\t\t * _sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\n\t\t * looping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t * @property _sourceNodeNext\n\t\t * @type {AudioNode}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.1\n\t\t *\n\t\t */\n\t\tthis._sourceNodeNext = null;\n\n\t\t/**\n\t\t * Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.\n\t\t * @property _playbackStartTime\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis._playbackStartTime = 0;\n\n\t\t// Proxies, make removing listeners easier.\n\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t};\n\tvar p = createjs.extend(WebAudioSoundInstance, createjs.AbstractSoundInstance);\n\tvar s = WebAudioSoundInstance;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n  \t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.context = null;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \n\t * This is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n  \t * @property _scratchBuffer\n\t * @type {AudioBufferSourceNode}\n\t * @static\n\t */\n\ts._scratchBuffer = null;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>\n\t * @property destinationNode\n\t * @type {AudioNode}\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.destinationNode = null;\n\n\t/**\n\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t * @property _panningModel\n\t * @type {Number / String}\n\t * @protected\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts._panningModel = \"equalpower\";\n\n\n// Public methods\n\tp.destroy = function() {\n\t\tthis.AbstractSoundInstance_destroy();\n\n\t\tthis.panNode.disconnect(0);\n\t\tthis.panNode = null;\n\t\tthis.gainNode.disconnect(0);\n\t\tthis.gainNode = null;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[WebAudioSoundInstance]\";\n\t};\n\n\n// Private Methods\n\tp._updatePan = function() {\n\t\tthis.panNode.setPosition(this._pan, 0, -0.5);\n\t\t// z need to be -0.5 otherwise the sound only plays in left, right, or center\n\t};\n\n\tp._removeLooping = function(value) {\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t};\n\n\tp._addLooping = function(value) {\n\t\tif (this.playState != createjs.Sound.PLAY_SUCCEEDED) { return; }\n\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t};\n\n\tp._setDurationFromSource = function () {\n\t\tthis._duration = this.playbackResource.duration * 1000;\n\t};\n\n\tp._handleCleanUp = function () {\n\t\tif (this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\t}\n\n\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\t\t// OJR there appears to be a bug that this doesn't always work in webkit (Chrome and Safari). According to the documentation, this should work.\n\n\t\tclearTimeout(this._soundCompleteTimeout);\n\n\t\tthis._playbackStartTime = 0;\t// This is used by _getPosition\n\t};\n\n\t/**\n\t * Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection\n\t * @method _cleanUpAudioNode\n\t * @param audioNode\n\t * @return {audioNode}\n\t * @protected\n\t * @since 0.4.1\n\t */\n\tp._cleanUpAudioNode = function(audioNode) {\n\t\tif(audioNode) {\n\t\t\taudioNode.stop(0);\n\t\t\taudioNode.disconnect(0);\n\t\t\t// necessary to prevent leak on iOS Safari 7-9. will throw in almost all other\n\t\t\t// browser implementations.\n\t\t\tif ( createjs.BrowserDetect.isIOS ) {\n\t\t\t\ttry { audioNode.buffer = s._scratchBuffer; } catch(e) {}\n\t\t\t}\n\t\t\taudioNode = null;\n\t\t}\n\t\treturn audioNode;\n\t};\n\n\tp._handleSoundReady = function (event) {\n\t\tthis.gainNode.connect(s.destinationNode);  // this line can cause a memory leak.  Nodes need to be disconnected from the audioDestination or any sequence that leads to it.\n\n\t\tvar dur = this._duration * 0.001,\n\t\t\tpos = Math.min(Math.max(0, this._position) * 0.001, dur);\n\t\tthis.sourceNode = this._createAndPlayAudioNode((s.context.currentTime - dur), pos);\n\t\tthis._playbackStartTime = this.sourceNode.startTime - pos;\n\n\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, (dur - pos) * 1000);\n\n\t\tif(this._loop != 0) {\n\t\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\t}\n\t};\n\n\t/**\n\t * Creates an audio node using the current src and context, connects it to the gain node, and starts playback.\n\t * @method _createAndPlayAudioNode\n\t * @param {Number} startTime The time to add this to the web audio context, in seconds.\n\t * @param {Number} offset The amount of time into the src audio to start playback, in seconds.\n\t * @return {audioNode}\n\t * @protected\n\t * @since 0.4.1\n\t */\n\tp._createAndPlayAudioNode = function(startTime, offset) {\n\t\tvar audioNode = s.context.createBufferSource();\n\t\taudioNode.buffer = this.playbackResource;\n\t\taudioNode.connect(this.panNode);\n\t\tvar dur = this._duration * 0.001;\n\t\taudioNode.startTime = startTime + dur;\n\t\taudioNode.start(audioNode.startTime, offset+(this._startTime*0.001), dur - offset);\n\t\treturn audioNode;\n\t};\n\n\tp._pause = function () {\n\t\tthis._position = (s.context.currentTime - this._playbackStartTime) * 1000;  // * 1000 to give milliseconds, lets us restart at same point\n\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\n\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\n\t\tclearTimeout(this._soundCompleteTimeout);\n\t};\n\n\tp._resume = function () {\n\t\tthis._handleSoundReady();\n\t};\n\n\t/*\n\tp._handleStop = function () {\n\t\t// web audio does not need to do anything extra\n\t};\n\t*/\n\n\tp._updateVolume = function () {\n\t\tvar newVolume = this._muted ? 0 : this._volume;\n\t  \tif (newVolume != this.gainNode.gain.value) {\n\t\t  this.gainNode.gain.value = newVolume;\n  \t\t}\n\t};\n\n\tp._calculateCurrentPosition = function () {\n\t\treturn ((s.context.currentTime - this._playbackStartTime) * 1000); // pos in seconds * 1000 to give milliseconds\n\t};\n\n\tp._updatePosition = function () {\n\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\tclearTimeout(this._soundCompleteTimeout);\n\n\t\tif (!this._paused) {this._handleSoundReady();}\n\t};\n\n\t// OJR we are using a look ahead approach to ensure smooth looping.\n\t// We add _sourceNodeNext to the audio context so that it starts playing even if this callback is delayed.\n\t// This technique is described here:  http://www.html5rocks.com/en/tutorials/audio/scheduling/\n\t// NOTE the cost of this is that our audio loop may not always match the loop event timing precisely.\n\tp._handleLoop = function () {\n\t\tthis._cleanUpAudioNode(this.sourceNode);\n\t\tthis.sourceNode = this._sourceNodeNext;\n\t\tthis._playbackStartTime = this.sourceNode.startTime;\n\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);\n\t};\n\n\tp._updateDuration = function () {\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._pause();\n\t\t\tthis._resume();\n\t\t}\n\t};\n\n\tcreatejs.WebAudioSoundInstance = createjs.promote(WebAudioSoundInstance, \"AbstractSoundInstance\");\n}());\n\n//##############################################################################\n// WebAudioPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t\"use strict\";\n\n\t/**\n\t * Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\n\t * anywhere that it is supported. To change plugin priority, check out the Sound API\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n\n\t * <h4>Known Browser and OS issues for Web Audio</h4>\n\t * <b>Firefox 25</b>\n\t * <li>\n\t *     mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n\t *     <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n\t *     extension, until this bug is resolved\n\t * </li>\n\t *\n\t * <b>Webkit (Chrome and Safari)</b>\n\t * <li>\n\t *     AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n\t * \t   are playing a lot of audio files.\n\t * </li>\n\t *\n\t * <b>iOS 6 limitations</b>\n\t * <ul>\n\t *     <li>\n\t *         Sound is initially muted and will only unmute through play being called inside a user initiated event\n\t *         (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n\t *         class for a full overview of the limitations, and how to get around them.\n\t *     </li>\n\t *\t   <li>\n\t *\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n\t *\t       this bug by ensuring the audio and video audio share the same sample rate.\n\t *\t   </li>\n\t * </ul>\n\t * @class WebAudioPlugin\n\t * @extends AbstractPlugin\n\t * @constructor\n\t * @since 0.4.0\n\t */\n\tfunction WebAudioPlugin() {\n\t\tthis.AbstractPlugin_constructor();\n\n\n// Private Properties\n\t\t/**\n\t\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t\t * @property _panningModel\n\t\t * @type {Number / String}\n\t\t * @protected\n\t\t */\n\t\tthis._panningModel = s._panningModel;;\n\n\t\t/**\n\t\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t\t * need to be created within this context.\n\t\t * @property context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = s.context;\n\n\t\t/**\n\t\t * A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\n\t\t * It is connected to <code>context.destination</code>.\n\t\t *\n\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.\n\t\t * @property dynamicsCompressorNode\n\t\t * @type {AudioNode}\n\t\t */\n\t\tthis.dynamicsCompressorNode = this.context.createDynamicsCompressor();\n\t\tthis.dynamicsCompressorNode.connect(this.context.destination);\n\n\t\t/**\n\t\t * A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n\t\t *\n\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.gainNode.\n\t\t * @property gainNode\n\t\t * @type {AudioGainNode}\n\t\t */\n\t\tthis.gainNode = this.context.createGain();\n\t\tthis.gainNode.connect(this.dynamicsCompressorNode);\n\t\tcreatejs.WebAudioSoundInstance.destinationNode = this.gainNode;\n\n\t\tthis._capabilities = s._capabilities;\n\n\t\tthis._loaderClass = createjs.WebAudioLoader;\n\t\tthis._soundInstanceClass = createjs.WebAudioSoundInstance;\n\n\t\tthis._addPropsToClasses();\n\t}\n\tvar p = createjs.extend(WebAudioPlugin, createjs.AbstractPlugin);\n\n// Static Properties\n\tvar s = WebAudioPlugin;\n\t/**\n\t * The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\n\t * method and is used internally.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @default null\n\t * @private\n\t * @static\n\t */\n\ts._capabilities = null;\n\n\t/**\n\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t * @property _panningModel\n\t * @type {Number / String}\n\t * @private\n\t * @static\n\t */\n\ts._panningModel = \"equalpower\";\n\n\t/**\n\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t * need to be created within this context.\n\t *\n\t * Advanced users can set this to an existing context, but <b>must</b> do so before they call\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t *\n\t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t */\n\ts.context = null;\n\n\t/**\n\t * The scratch buffer that will be assigned to the buffer property of a source node on close.\n\t * Works around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n\t *\n\t * Advanced users can set this to an existing source node, but <b>must</b> do so before they call\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t *\n\t * @property _scratchBuffer\n\t * @type {AudioBuffer}\n\t * @private\n\t * @static\n\t */\n\t s._scratchBuffer = null;\n\n\t/**\n\t * Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\n\t * empty sound.\n\t * @property _unlocked\n\t * @type {boolean}\n\t * @since 0.6.2\n\t * @private\n\t */\n\ts._unlocked = false;\n\n\t/**\n\t * The default sample rate used when checking for iOS compatibility. See {{#crossLink \"WebAudioPlugin/_createAudioContext\"}}{{/crossLink}}.\n\t * @property DEFAULT_SAMPLE_REATE\n\t * @type {number}\n\t * @default 44100\n\t * @static\n\t */\n\ts.DEFAULT_SAMPLE_RATE = 44100;\n\n// Static Public Methods\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\ts.isSupported = function () {\n\t\t// check if this is some kind of mobile device, Web Audio works with local protocol under PhoneGap and it is unlikely someone is trying to run a local file\n\t\tvar isMobilePhoneGap = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;\n\t\t// OJR isMobile may be redundant with _isFileXHRSupported available.  Consider removing.\n\t\tif (location.protocol == \"file:\" && !isMobilePhoneGap && !this._isFileXHRSupported()) { return false; }  // Web Audio requires XHR, which is not usually available locally\n\t\ts._generateCapabilities();\n\t\tif (s.context == null) {return false;}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n\t * require the first sound to be played inside of a user initiated event (touch/click).  This is called when\n\t * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\n\t * for example).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     function handleTouch(event) {\n\t *         createjs.WebAudioPlugin.playEmptySound();\n\t *     }\n\t *\n\t * @method playEmptySound\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.playEmptySound = function() {\n\t\tif (s.context == null) {return;}\n\t\tvar source = s.context.createBufferSource();\n\t\tsource.buffer = s._scratchBuffer;\n\t\tsource.connect(s.context.destination);\n\t\tsource.start(0, 0, 0);\n\t};\n\n\n// Static Private Methods\n\t/**\n\t * Determine if XHR is supported, which is necessary for web audio.\n\t * @method _isFileXHRSupported\n\t * @return {Boolean} If XHR is supported.\n\t * @since 0.4.2\n\t * @private\n\t * @static\n\t */\n\ts._isFileXHRSupported = function() {\n\t\t// it's much easier to detect when something goes wrong, so let's start optimistically\n\t\tvar supported = true;\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\ttry {\n\t\t\txhr.open(\"GET\", \"WebAudioPluginTest.fail\", false); // loading non-existant file triggers 404 only if it could load (synchronous call)\n\t\t} catch (error) {\n\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\tsupported = false;\n\t\t\treturn supported;\n\t\t}\n\t\txhr.onerror = function() { supported = false; }; // cause irrelevant\n\t\t// with security turned off, we can get empty success results, which is actually a failed read (status code 0?)\n\t\txhr.onload = function() { supported = this.status == 404 || (this.status == 200 || (this.status == 0 && this.response != \"\")); };\n\t\ttry {\n\t\t\txhr.send();\n\t\t} catch (error) {\n\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\tsupported = false;\n\t\t}\n\n\t\treturn supported;\n\t};\n\n\t/**\n\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n\t * method for an overview of plugin capabilities.\n\t * @method _generateCapabilities\n\t * @static\n\t * @private\n\t */\n\ts._generateCapabilities = function () {\n\t\tif (s._capabilities != null) {return;}\n\t\t// Web Audio can be in any formats supported by the audio element, from http://www.w3.org/TR/webaudio/#AudioContext-section\n\t\tvar t = document.createElement(\"audio\");\n\t\tif (t.canPlayType == null) {return null;}\n\n\t\tif (s.context == null) {\n\t\t\ts.context = s._createAudioContext();\n\t\t\tif (s.context == null) { return null; }\n\t\t}\n\t\tif (s._scratchBuffer == null) {\n\t\t\ts._scratchBuffer = s.context.createBuffer(1, 1, 22050);\n\t\t}\n\n\t\ts._compatibilitySetUp();\n\n\t\t// Listen for document level clicks to unlock WebAudio on iOS. See the _unlock method.\n\t\tif (\"ontouchstart\" in window && s.context.state != \"running\") {\n\t\t\ts._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n\t\t\tdocument.addEventListener(\"mousedown\", s._unlock, true);\n\t\t\tdocument.addEventListener(\"touchstart\", s._unlock, true);\n\t\t\tdocument.addEventListener(\"touchend\", s._unlock, true);\n\t\t}\n\n\t\ts._capabilities = {\n\t\t\tpanning:true,\n\t\t\tvolume:true,\n\t\t\ttracks:-1\n\t\t};\n\n\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\tvar ext = supportedExtensions[i];\n\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\n\t\t// 0=no output, 1=mono, 2=stereo, 4=surround, 6=5.1 surround.\n\t\t// See http://www.w3.org/TR/webaudio/#AudioChannelSplitter for more details on channels.\n\t\tif (s.context.destination.numberOfChannels < 2) {\n\t\t\ts._capabilities.panning = false;\n\t\t}\n\t};\n\n\t/**\n\t * Create an audio context for the sound.\n\t *\n\t * This method handles both vendor prefixes (specifically webkit support), as well as a case on iOS where\n\t * audio played with a different sample rate may play garbled when first started. The default sample rate is\n\t * 44,100, however it can be changed using the {{#crossLink \"WebAudioPlugin/DEFAULT_SAMPLE_RATE:property\"}}{{/crossLink}}.\n\t * @method _createAudioContext\n\t * @return {AudioContext | webkitAudioContext}\n\t * @private\n\t * @static\n\t * @since 1.0.0\n\t */\n\ts._createAudioContext = function() {\n\t\t// Slightly modified version of https://github.com/Jam3/ios-safe-audio-context\n\t\t// Resolves issues with first-run contexts playing garbled on iOS.\n\t\tvar AudioCtor = (window.AudioContext || window.webkitAudioContext);\n\t\tif (AudioCtor == null) { return null; }\n\t\tvar context = new AudioCtor();\n\n\t\t// Check if hack is necessary. Only occurs in iOS6+ devices\n\t\t// and only when you first boot the iPhone, or play a audio/video\n\t\t// with a different sample rate\n\t\tif (/(iPhone|iPad)/i.test(navigator.userAgent)\n\t\t\t\t&& context.sampleRate !== s.DEFAULT_SAMPLE_RATE) {\n\t\t\tvar buffer = context.createBuffer(1, 1, s.DEFAULT_SAMPLE_RATE),\n\t\t\t\t\tdummy = context.createBufferSource();\n\t\t\tdummy.buffer = buffer;\n\t\t\tdummy.connect(context.destination);\n\t\t\tdummy.start(0);\n\t\t\tdummy.disconnect();\n\t\t\tcontext.close() // dispose old context\n\n\t\t\tcontext = new AudioCtor();\n\t\t}\n\t\treturn context;\n\t}\n\n\t/**\n\t * Set up compatibility if only deprecated web audio calls are supported.\n\t * See http://www.w3.org/TR/webaudio/#DeprecationNotes\n\t * Needed so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\n\t * don't support new calls.\n\t *\n\t * @method _compatibilitySetUp\n\t * @static\n\t * @private\n\t * @since 0.4.2\n\t */\n\ts._compatibilitySetUp = function() {\n\t\ts._panningModel = \"equalpower\";\n\t\t//assume that if one new call is supported, they all are\n\t\tif (s.context.createGain) { return; }\n\n\t\t// simple name change, functionality the same\n\t\ts.context.createGain = s.context.createGainNode;\n\n\t\t// source node, add to prototype\n\t\tvar audioNode = s.context.createBufferSource();\n\t\taudioNode.__proto__.start = audioNode.__proto__.noteGrainOn;\t// note that noteGrainOn requires all 3 parameters\n\t\taudioNode.__proto__.stop = audioNode.__proto__.noteOff;\n\n\t\t// panningModel\n\t\ts._panningModel = 0;\n\t};\n\n\t/**\n\t * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n\t * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n\t * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n\t *\n\t * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n\t * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n\t * stick with `mousedown` and `touchend`.\n\t * @method _unlock\n\t * @since 0.6.2\n\t * @private\n\t */\n\ts._unlock = function() {\n\t\tif (s._unlocked) { return; }\n\t\ts.playEmptySound();\n\t\tif (s.context.state == \"running\") {\n\t\t\tdocument.removeEventListener(\"mousedown\", s._unlock, true);\n\t\t\tdocument.removeEventListener(\"touchend\", s._unlock, true);\n\t\t\tdocument.removeEventListener(\"touchstart\", s._unlock, true);\n\t\t\ts._unlocked = true;\n\t\t}\n\t};\n\n\n// Public Methods\n\tp.toString = function () {\n\t\treturn \"[WebAudioPlugin]\";\n\t};\n\n\n// Private Methods\n\t/**\n\t * Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.\n\t * @method _addPropsToClasses\n\t * @static\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._addPropsToClasses = function() {\n\t\tvar c = this._soundInstanceClass;\n\t\tc.context = this.context;\n\t\tc._scratchBuffer = s._scratchBuffer;\n\t\tc.destinationNode = this.gainNode;\n\t\tc._panningModel = this._panningModel;\n\n\t\tthis._loaderClass.context = this.context;\n\t};\n\n\n\t/**\n\t * Set the gain value for master audio. Should not be called externally.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\tvar newVolume = createjs.Sound._masterMute ? 0 : this._volume;\n\t\tif (newVolume != this.gainNode.gain.value) {\n\t\t\tthis.gainNode.gain.value = newVolume;\n\t\t}\n\t};\n\n\tcreatejs.WebAudioPlugin = createjs.promote(WebAudioPlugin, \"AbstractPlugin\");\n}());\n\n//##############################################################################\n// HTMLAudioTagPool.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * HTMLAudioTagPool is an object pool for HTMLAudio tag instances.\n\t * @class HTMLAudioTagPool\n\t * @param {String} src The source of the channel.\n\t * @protected\n\t */\n\tfunction HTMLAudioTagPool() {\n\t\t\tthrow \"HTMLAudioTagPool cannot be instantiated\";\n\t}\n\n\tvar s = HTMLAudioTagPool;\n\n// Static Properties\n\t/**\n\t * A hash lookup of each base audio tag, indexed by the audio source.\n\t * @property _tags\n\t * @type {{}}\n\t * @static\n\t * @private\n\t */\n\ts._tags = {};\n\n\t/**\n\t * An object pool for html audio tags\n\t * @property _tagPool\n\t * @type {TagPool}\n\t * @static\n\t * @private\n\t */\n\ts._tagPool = new TagPool();\n\n\t/**\n\t * A hash lookup of if a base audio tag is available, indexed by the audio source\n\t * @property _tagsUsed\n\t * @type {{}}\n\t * @private\n\t * @static\n\t */\n\ts._tagUsed = {};\n\n// Static Methods\n\t/**\n\t  * Get an audio tag with the given source.\n\t  * @method get\n\t  * @param {String} src The source file used by the audio tag.\n\t  * @static\n\t  */\n\t s.get = function (src) {\n\t\tvar t = s._tags[src];\n\t\tif (t == null) {\n\t\t\t// create new base tag\n\t\t\tt = s._tags[src] = s._tagPool.get();\n\t\t\tt.src = src;\n\t\t} else {\n\t\t\t// get base or pool\n\t\t\tif (s._tagUsed[src]) {\n\t\t\t\tt = s._tagPool.get();\n\t\t\t\tt.src = src;\n\t\t\t} else {\n\t\t\t\ts._tagUsed[src] = true;\n\t\t\t}\n\t\t}\n\t\treturn t;\n\t };\n\n\t /**\n\t  * Return an audio tag to the pool.\n\t  * @method set\n\t  * @param {String} src The source file used by the audio tag.\n\t  * @param {HTMLElement} tag Audio tag to set.\n\t  * @static\n\t  */\n\t s.set = function (src, tag) {\n\t\t // check if this is base, if yes set boolean if not return to pool\n\t\t if(tag == s._tags[src]) {\n\t\t\t s._tagUsed[src] = false;\n\t\t } else {\n\t\t\t s._tagPool.set(tag);\n\t\t }\n\t };\n\n\t/**\n\t * Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.\n\t * @method remove\n\t * @param {String} src The source for the tag\n\t * @return {Boolean} If the TagPool was deleted.\n\t * @static\n\t */\n\ts.remove = function (src) {\n\t\tvar tag = s._tags[src];\n\t\tif (tag == null) {return false;}\n\t\ts._tagPool.set(tag);\n\t\tdelete(s._tags[src]);\n\t\tdelete(s._tagUsed[src]);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Gets the duration of the src audio in milliseconds\n\t * @method getDuration\n\t * @param {String} src The source file used by the audio tag.\n\t * @return {Number} Duration of src in milliseconds\n\t * @static\n\t */\n\ts.getDuration= function (src) {\n\t\tvar t = s._tags[src];\n\t\tif (t == null || !t.duration) {return 0;}\t// OJR duration is NaN if loading has not completed\n\t\treturn t.duration * 1000;\n\t};\n\n\tcreatejs.HTMLAudioTagPool = HTMLAudioTagPool;\n\n\n// ************************************************************************************************************\n\t/**\n\t * The TagPool is an object pool for HTMLAudio tag instances.\n\t * #class TagPool\n\t * @param {String} src The source of the channel.\n\t * @protected\n\t */\n\tfunction TagPool(src) {\n\n// Public Properties\n\t\t/**\n\t\t * A list of all available tags in the pool.\n\t\t * #property tags\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._tags = [];\n\t};\n\n\tvar p = TagPool.prototype;\n\tp.constructor = TagPool;\n\n\n// Public Methods\n\t/**\n\t * Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n\t * #method get\n\t * @return {HTMLAudioElement} An HTML audio tag.\n\t */\n\tp.get = function () {\n\t\tvar tag;\n\t\tif (this._tags.length == 0) {\n\t\t\ttag = this._createTag();\n\t\t} else {\n\t\t\ttag = this._tags.pop();\n\t\t}\n\t\tif (tag.parentNode == null) {document.body.appendChild(tag);}\n\t\treturn tag;\n\t};\n\n\t/**\n\t * Put an HTMLAudioElement back in the pool for use.\n\t * #method set\n\t * @param {HTMLAudioElement} tag HTML audio tag\n\t */\n\tp.set = function (tag) {\n\t\t// OJR this first step seems unnecessary\n\t\tvar index = createjs.indexOf(this._tags, tag);\n\t\tif (index == -1) {\n\t\t\tthis._tags.src = null;\n\t\t\tthis._tags.push(tag);\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[TagPool]\";\n\t};\n\n\n// Private Methods\n\t/**\n\t * Create an HTML audio tag.\n\t * #method _createTag\n\t * @param {String} src The source file to set for the audio tag.\n\t * @return {HTMLElement} Returns an HTML audio tag.\n\t * @protected\n\t */\n\tp._createTag = function () {\n\t\tvar tag = document.createElement(\"audio\");\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\treturn tag;\n\t};\n\n}());\n\n//##############################################################################\n// HTMLAudioSoundInstance.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * @param {String} src The path to and file name of the sound.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n\t * @class HTMLAudioSoundInstance\n\t * @extends AbstractSoundInstance\n\t * @constructor\n\t */\n\tfunction HTMLAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n\n// Private Properties\n\t\tthis._audioSpriteStopTime = null;\n\t\tthis._delayTimeoutId = null;\n\n\t\t// Proxies, make removing listeners easier.\n\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t\tthis._readyHandler = createjs.proxy(this._handleTagReady, this);\n\t\tthis._stalledHandler = createjs.proxy(this._playFailed, this);\n\t\tthis._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this);\n\t\tthis._loopHandler = createjs.proxy(this._handleSoundComplete, this);\n\n\t\tif (duration) {\n\t\t\tthis._audioSpriteStopTime = (startTime + duration) * 0.001;\n\t\t} else {\n\t\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\t}\n\t}\n\tvar p = createjs.extend(HTMLAudioSoundInstance, createjs.AbstractSoundInstance);\n\n// Public Methods\n\t/**\n\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\n\t * undoc'd because it is not meant to be used outside of Sound\n\t * #method setMasterVolume\n\t * @param value\n\t */\n\tp.setMasterVolume = function (value) {\n\t\tthis._updateVolume();\n\t};\n\n\t/**\n\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\n\t * undoc'd because it is not meant to be used outside of Sound\n\t * #method setMasterMute\n\t * @param value\n\t */\n\tp.setMasterMute = function (isMuted) {\n\t\tthis._updateVolume();\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[HTMLAudioSoundInstance]\";\n\t};\n\n//Private Methods\n\tp._removeLooping = function() {\n\t\tif(this._playbackResource == null) {return;}\n\t\tthis._playbackResource.loop = false;\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t};\n\n\tp._addLooping = function() {\n\t\tif(this._playbackResource == null  || this._audioSpriteStopTime) {return;}\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\tthis._playbackResource.loop = true;\n\t};\n\n\tp._handleCleanUp = function () {\n\t\tvar tag = this._playbackResource;\n\t\tif (tag != null) {\n\t\t\ttag.pause();\n\t\t\ttag.loop = false;\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\n\t\t\ttry {\n\t\t\t\ttag.currentTime = this._startTime;\n\t\t\t} catch (e) {\n\t\t\t} // Reset Position\n\t\t\tcreatejs.HTMLAudioTagPool.set(this.src, tag);\n\t\t\tthis._playbackResource = null;\n\t\t}\n\t};\n\n\tp._beginPlaying = function (playProps) {\n\t\tthis._playbackResource = createjs.HTMLAudioTagPool.get(this.src);\n\t\treturn this.AbstractSoundInstance__beginPlaying(playProps);\n\t};\n\n\tp._handleSoundReady = function (event) {\n\t\tif (this._playbackResource.readyState !== 4) {\n\t\t\tvar tag = this._playbackResource;\n\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\ttag.preload = \"auto\"; // This is necessary for Firefox, as it won't ever \"load\" until this is set.\n\t\t\ttag.load();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateVolume();\n\t\tthis._playbackResource.currentTime = (this._startTime + this._position) * 0.001;\n\t\tif (this._audioSpriteStopTime) {\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t} else {\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tif(this._loop != 0) {\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\t\tthis._playbackResource.loop = true;\n\t\t\t}\n\t\t}\n\n\t\tthis._playbackResource.play();\n\t};\n\n\t/**\n\t * Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.\n\t * @method _handleTagReady\n\t * @param event\n\t * @protected\n\t */\n\tp._handleTagReady = function (event) {\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\n\t\tthis._handleSoundReady();\n\t};\n\n\tp._pause = function () {\n\t\tthis._playbackResource.pause();\n\t};\n\n\tp._resume = function () {\n\t\tthis._playbackResource.play();\n\t};\n\n\tp._updateVolume = function () {\n\t\tif (this._playbackResource != null) {\n\t\t\tvar newVolume = (this._muted || createjs.Sound._masterMute) ? 0 : this._volume * createjs.Sound._masterVolume;\n\t\t\tif (newVolume != this._playbackResource.volume) {this._playbackResource.volume = newVolume;}\n\t\t}\n\t};\n\n\tp._calculateCurrentPosition = function() {\n\t\treturn (this._playbackResource.currentTime * 1000) - this._startTime;\n\t};\n\n\tp._updatePosition = function() {\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\ttry {\n\t\t\tthis._playbackResource.currentTime = (this._position + this._startTime) * 0.001;\n\t\t} catch (error) { // Out of range\n\t\t\tthis._handleSetPositionSeek(null);\n\t\t}\n\t};\n\n\t/**\n\t * Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener\n\t * @method _handleSetPositionSeek\n\t * @param event\n\t * @protected\n\t */\n\tp._handleSetPositionSeek = function(event) {\n\t\tif (this._playbackResource == null) { return; }\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t};\n\n\t/**\n\t * Timer used to loop audio sprites.\n\t * NOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n\t * (up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired\n\t *\n\t * @method _handleAudioSpriteLoop\n\t * @param event\n\t * @private\n\t */\n\tp._handleAudioSpriteLoop = function (event) {\n\t\tif(this._playbackResource.currentTime <= this._audioSpriteStopTime) {return;}\n\t\tthis._playbackResource.pause();\n\t\tif(this._loop == 0) {\n\t\t\tthis._handleSoundComplete(null);\n\t\t} else {\n\t\t\tthis._position = 0;\n\t\t\tthis._loop--;\n\t\t\tthis._playbackResource.currentTime = this._startTime * 0.001;\n\t\t\tif(!this._paused) {this._playbackResource.play();}\n\t\t\tthis._sendEvent(\"loop\");\n\t\t}\n\t};\n\n\t// NOTE with this approach audio will loop as reliably as the browser allows\n\t// but we could end up sending the loop event after next loop playback begins\n\tp._handleLoop = function (event) {\n\t\tif(this._loop == 0) {\n\t\t\tthis._playbackResource.loop = false;\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t}\n\t};\n\n\tp._updateStartTime = function () {\n\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t}\n\t};\n\n\tp._updateDuration = function () {\n\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t}\n\t};\n\n\tp._setDurationFromSource = function () {\n\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\tthis._playbackResource = null;\n\t};\n\n\tcreatejs.HTMLAudioSoundInstance = createjs.promote(HTMLAudioSoundInstance, \"AbstractSoundInstance\");\n}());\n\n//##############################################################################\n// HTMLAudioPlugin.js\n//##############################################################################\n\nwindow.createjs = window.createjs || {};\n\n(function () {\n\n\t\"use strict\";\n\n\t/**\n\t * Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\n\t * by default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\n\t * audio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * <h4>Known Browser and OS issues for HTML Audio</h4>\n\t * <b>All browsers</b><br />\n\t * Testing has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\n\t * this limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\n\t * a guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n\t *\n     * <b>IE html limitations</b><br />\n     * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n     * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n     * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n     * <li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n     * 64kbps works.</li>\n\t * <li>Occasionally very short samples will get cut off.</li>\n\t * <li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\n\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\n\t * Note that audio sprites can be used as a solution to this issue.</li></ul>\n\t *\n\t * <b>Safari limitations</b><br />\n\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t *\n\t * <b>iOS 6 limitations</b><br />\n\t * <ul><li>can only have one &lt;audio&gt; tag</li>\n\t * \t\t<li>can not preload or autoplay the audio</li>\n\t * \t\t<li>can not cache the audio</li>\n\t * \t\t<li>can not play the audio except inside a user initiated event.</li>\n\t *\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n\t * \t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n\t * </ul>\n\t *\n\t * <b>Android Native Browser limitations</b><br />\n\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t *      <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n\t * <b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n\t * <ul> <li>Can only play 1 sound at a time.</li>\n\t *      <li>Sound is not cached.</li>\n\t *      <li>Sound can only be loaded in a user initiated touch/click event.</li>\n\t *      <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n\t * </ul>\n\t *\n\t * See {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.\n\t *\n\t * @class HTMLAudioPlugin\n\t * @extends AbstractPlugin\n\t * @constructor\n\t */\n\tfunction HTMLAudioPlugin() {\n\t\tthis.AbstractPlugin_constructor();\n\n\n\t// Public Properties\n\t\tthis._capabilities = s._capabilities;\n\n\t\tthis._loaderClass = createjs.SoundLoader;\n\t\tthis._soundInstanceClass = createjs.HTMLAudioSoundInstance;\n\t}\n\n\tvar p = createjs.extend(HTMLAudioPlugin, createjs.AbstractPlugin);\n\tvar s = HTMLAudioPlugin;\n\n// Static Properties\n\t/**\n\t * The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\n\t * The actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\n\t * Audio sprites work around this limitation.\n\t * @property MAX_INSTANCES\n\t * @type {Number}\n\t * @default 30\n\t * @static\n\t */\n\ts.MAX_INSTANCES = 30;\n\n\t/**\n\t * Event constant for the \"canPlayThrough\" event for cleaner code.\n\t * @property _AUDIO_READY\n\t * @type {String}\n\t * @default canplaythrough\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_READY = \"canplaythrough\";\n\n\t/**\n\t * Event constant for the \"ended\" event for cleaner code.\n\t * @property _AUDIO_ENDED\n\t * @type {String}\n\t * @default ended\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_ENDED = \"ended\";\n\n\t/**\n\t * Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.\n\t * @property _AUDIO_SEEKED\n\t * @type {String}\n\t * @default seeked\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_SEEKED = \"seeked\";\n\n\t/**\n\t * Event constant for the \"stalled\" event for cleaner code.\n\t * @property _AUDIO_STALLED\n\t * @type {String}\n\t * @default stalled\n\t * @static\n\t * @private\n\t */\n\ts._AUDIO_STALLED = \"stalled\";\n\n\t/**\n\t * Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\n\t * This event callsback ever 15 to 250ms and can be dropped by the browser for performance.\n\t * @property _TIME_UPDATE\n\t * @type {String}\n\t * @default timeupdate\n\t * @static\n\t * @private\n\t */\n\ts._TIME_UPDATE = \"timeupdate\";\n\n\t/**\n\t * The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\n\t * method. Please see the Sound {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} method for an overview of all\n\t * of the available properties.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @private\n\t * @static\n\t */\n\ts._capabilities = null;\n\n\n// Static Methods\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\n\t * browsers, but is disabled in iOS because of its limitations.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\ts.isSupported = function () {\n\t\ts._generateCapabilities();\n\t\treturn (s._capabilities != null);\n\t};\n\n\t/**\n\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}}\n\t * method for an overview of plugin capabilities.\n\t * @method _generateCapabilities\n\t * @static\n\t * @private\n\t */\n\ts._generateCapabilities = function () {\n\t\tif (s._capabilities != null) {return;}\n\t\tvar t = document.createElement(\"audio\");\n\t\tif (t.canPlayType == null) {return null;}\n\n\t\ts._capabilities = {\n\t\t\tpanning:false,\n\t\t\tvolume:true,\n\t\t\ttracks:-1\n\t\t};\n\n\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\tvar ext = supportedExtensions[i];\n\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\t};\n\n\n// public methods\n\tp.register = function (loadItem) {\n\t\tvar tag = createjs.HTMLAudioTagPool.get(loadItem.src);\n\t\tvar loader = this.AbstractPlugin_register(loadItem);\n\t\tloader.setTag(tag);\n\n\t\treturn loader;\n\t};\n\n\tp.removeSound = function (src) {\n\t\tthis.AbstractPlugin_removeSound(src);\n\t\tcreatejs.HTMLAudioTagPool.remove(src);\n\t};\n\n\tp.create = function (src, startTime, duration) {\n\t\tvar si = this.AbstractPlugin_create(src, startTime, duration);\n\t\tsi.playbackResource = null;\n\t\treturn si;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[HTMLAudioPlugin]\";\n\t};\n\n\t// plugin does not support these\n\tp.setVolume = p.getVolume = p.setMute = null;\n\n\n\tcreatejs.HTMLAudioPlugin = createjs.promote(HTMLAudioPlugin, \"AbstractPlugin\");\n}());\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEAA,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAI,CAAC,CAAC;AAEvC,CAAC,YAAY;EAEZ;AACD;AACA;AACA;AACA;AACA;EACC,IAAIC,CAAC,GAAGD,QAAQ,CAACE,OAAO,GAAGF,QAAQ,CAACE,OAAO,IAAI,CAAC,CAAC;;EAEjD;AACD;AACA;AACA;AACA;AACA;EACCD,CAAC,CAACE,OAAO,GAAG,YAAY,OAAO,CAAC,CAAC;;EAEjC;AACD;AACA;AACA;AACA;AACA;EACCF,CAAC,CAACG,SAAS,GAAG,SAAS,+BAA+B,CAAC,CAAC;AAEzD,CAAC,EAAE,CAAC;;AAEJ;AACA;AACA;;AAEAL,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAE,CAAC,CAAC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,QAAQ,CAACK,MAAM,GAAG,UAASC,QAAQ,EAAEC,UAAU,EAAE;EAChD,YAAY;;EAEZ,SAASC,CAACA,CAAA,EAAG;IAAE,IAAI,CAACC,WAAW,GAAGH,QAAQ;EAAE;EAC5CE,CAAC,CAACE,SAAS,GAAGH,UAAU,CAACG,SAAS;EAClC,OAAQJ,QAAQ,CAACI,SAAS,GAAG,IAAIF,CAAC,CAAC,CAAC;AACrC,CAAC;;AAED;AACA;AACA;;AAEAT,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAE,CAAC,CAAC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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C,CAACA,UAAU;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACe,SAAS,GAAI,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;;IAEvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACT,gBAAgB,GAAG,KAAK;;IAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACD,kBAAkB,GAAG,KAAK;;IAE/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACO,2BAA2B,GAAG,KAAK;;IAExC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACD,OAAO,GAAG,KAAK;EACrB;EACA,IAAIvC,CAAC,GAAG2B,KAAK,CAAC3E,SAAS;;EAExB;EACC;AACD;AACA;AACA;AACA;AACA;EACCgD,CAAC,CAAC4C,cAAc,GAAG,YAAW;IAC7B,IAAI,CAACV,gBAAgB,GAAG,IAAI,CAACR,UAAU,IAAE,IAAI;EAC9C,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC1B,CAAC,CAAC6C,eAAe,GAAG,YAAW;IAC9B,IAAI,CAACZ,kBAAkB,GAAG,IAAI;EAC/B,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;EACCjC,CAAC,CAAC8C,wBAAwB,GAAG,YAAW;IACvC,IAAI,CAACN,2BAA2B,GAAG,IAAI,CAACP,kBAAkB,GAAG,IAAI;EAClE,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCjC,CAAC,CAACsB,MAAM,GAAG,YAAW;IACrB,IAAI,CAACiB,OAAO,GAAG,IAAI;EACpB,CAAC;;EAED;AACD;AACA;AACA;AACA;EACCvC,CAAC,CAAC4B,KAAK,GAAG,YAAW;IACpB,OAAO,IAAID,KAAK,CAAC,IAAI,CAACf,IAAI,EAAE,IAAI,CAACa,OAAO,EAAE,IAAI,CAACC,UAAU,CAAC;EAC3D,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC1B,CAAC,CAAC+C,GAAG,GAAG,UAASC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I,CAACsK,2BAA2B,CAAC,CAAC;;IAElC;IACA;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC5H,MAAM,GAAG,KAAK;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC6H,QAAQ,GAAG,KAAK;;IAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC3H,QAAQ,GAAG,CAAC;;IAEjB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAAC5C,IAAI,GAAGA,IAAI;;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACwK,eAAe,GAAG,IAAI;;IAE3B;IACA;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAIJ,QAAQ,EAAE;MACb,IAAI,CAACK,KAAK,GAAG/O,QAAQ,CAACmH,QAAQ,CAACc,MAAM,CAACyG,QAAQ,CAAC;IAChD,CAAC,MAAM;MACN,IAAI,CAACK,KAAK,GAAG,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAGL,SAAS;;IAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACM,OAAO,GAAG,IAAI;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,YAAY,GAAG,IAAI;;IAExB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,IAAI,GAAG,IAAI;EACjB;EAAC;EAED,IAAI3L,CAAC,GAAG1D,QAAQ,CAACK,MAAM,CAACoO,cAAc,EAAEzO,QAAQ,CAACuD,eAAe,CAAC;EACjE,IAAItD,CAAC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D,CAAC,EAAE,CAAC;;EAEd;EACC;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;EAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC7B,CAAC,CAAC8L,OAAO,GAAG,YAAY;IACvB,OAAO,IAAI,CAACT,KAAK;EAClB,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCrL,CAAC,CAAC+L,SAAS,GAAG,UAAUC,GAAG,EAAE;IAC5B,OAAOA,GAAG,GAAG,IAAI,CAACR,UAAU,GAAG,IAAI,CAACD,OAAO;EAC5C,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;EACCvL,CAAC,CAACiM,MAAM,GAAG,YAAY;IACtB,OAAO,IAAI,CAACN,IAAI;EACjB,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;EACC3L,CAAC,CAACkM,MAAM,GAAG,UAASC,GAAG,EAAE;IACvB,IAAI,CAACR,IAAI,GAAGQ,GAAG;EACjB,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCnM,CAAC,CAACoM,IAAI,GAAG,YAAY;IACpB,IAAI,CAACC,cAAc,CAAC,CAAC;IAErB,IAAI,CAACC,QAAQ,CAAClM,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;IACxC,IAAI,CAACkM,QAAQ,CAAClM,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;IACxC,IAAI,CAACkM,QAAQ,CAAClM,EAAE,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,IAAI,CAACkM,QAAQ,CAAClM,EAA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AAEpX,QAAQ,CAACwR,mBAAmB,CAAC;EAClE,IAAIvR,CAAC,GAAGmX,WAAW;;EAEnB;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCnX,CAAC,CAACqX,WAAW,GAAG,UAAUnP,IAAI,EAAE;IAC/B,OAAOA,IAAI,CAAC7D,IAAI,IAAItE,QAAQ,CAACqJ,KAAK,CAACN,KAAK;EACzC,CAAC;;EAED;EACArF,CAAC,CAAC6M,UAAU,GAAG,UAAUnJ,GAAG,EAAE;IAC7B,IAAIyI,GAAG,GAAG7P,QAAQ,CAACqK,QAAQ,CAACN,KAAK,CAAC,CAAC;IACnC8F,GAAG,CAAC0H,QAAQ,GAAG,KAAK;IACpB1H,GAAG,CAAC+B,OAAO,GAAG,MAAM;;IAEpB;IACA/B,GAAG,CAACzI,GAAG,GAAGA,GAAG;IACb,OAAOyI,GAAG;EACX,CAAC;EAED7P,QAAQ,CAACoX,WAAW,GAAGpX,QAAQ,CAACW,OAAO,CAACyW,WAAW,EAAE,qBAAqB,CAAC;AAE5E,CAAC,EAAC,CAAC;;AAEH;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEArX,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAI,CAAC,CAAC;AAEtC,aAAY;EACZ,YAAY;;EACZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC;EACA,IAAIwX,eAAe,GAAG,SAAAA,C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CAACyY,WAAW,GAAG,YAAY;;EAE5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzY,CAAC,CAAC0Y,oBAAoB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;;EAElG;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC1Y,CAAC,CAAC2Y,aAAa,GAAG;IACjBC,GAAG,EAAC;EACL,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC5Y,CAAC,CAAC6Y,YAAY,GAAG,2FAA2F;;EAG7G;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC7Y,CAAC,CAAC8Y,wBAAwB,GAAG9Y,CAAC,CAACoY,cAAc,CAAC,CAAE;;EAEhD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCpY,CAAC,CAAC+Y,mBAAmB,GAAG,EAAE;;EAE1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACI/Y,CAAC,CAACgZ,YAAY,GAAG,IAAI;;EAGzB;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;EACChZ,CAAC,CAACiZ,aAAa,GAAG,CAAC;;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;EACCjZ,CAAC,CAACkZ,gBAAgB,GAAG,YAAW;IAC/B,OAAO,IAAI,CAACD,aAAa;EAC1B,CAAC;EACD;EACAjZ,CAAC,CAACmZ,SAAS,GAAGpZ,QAAQ,CAACoB,SAAS,CAACnB,CAAC,CAACkZ,gBAAgB,EAAE,iBAAiB,CAAC;EACvE;AACD;AACA;AACA;AACA;AACA;EACClZ,CAAC,CAACoZ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CA;AACA;AACA;AACA;EACCna,CAAC,CAACwa,kBAAkB,GAAG,KAAK;;EAE5B;AACD;AACA;AACA;AACA;AACA;AACA;EACCxa,CAAC,CAACya,OAAO,GAAG,CAAC;;EAEb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCza,CAAC,CAAC2Z,UAAU,GAAG,EAAE;;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;EACC3Z,CAAC,CAAC0a,OAAO,GAAG,CAAC,CAAC;;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC1a,CAAC,CAAC2a,YAAY,GAAG,CAAC,CAAC;;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC3a,CAAC,CAAC4a,qBAAqB,GAAG,CAAC,CAAC;;EAG7B;EACC5a,CAAC,CAAC4D,gBAAgB,GAAG,IAAI;EACzB5D,CAAC,CAAC8D,mBAAmB,GAAG,IAAI;EAC5B9D,CAAC,CAACgE,uBAAuB,GAAG,IAAI;EAChChE,CAAC,CAACkE,aAAa,GAAG,IAAI;EACtBlE,CAAC,CAACiE,gBAAgB,GAAG,IAAI;EACzBjE,CAAC,CAACuD,UAAU,GAAG,IAAI;EAEnBxD,QAAQ,CAACuD,eAAe,CAACI,UAAU,CAAC1D,CAAC,CAAC,CAAC,CAAC;;EAGzC;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGA;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCA,CAAC,CAAC6a,kBAAkB,GAAG,YAAY;IAClC,OAAO;MACNvT,QAAQ,EAACvH,QAAQ,CAACmC,KAAK,CAAClC,CAAC,CAAC8a,QAAQ,EAAE9a,CAAC,CAAC;MACtC+a,KAAK,EAAC,CAAC,OAAO,CAAC;MACfC,UAAU,EAAChb,CAAC,CAAC0Y;IACd,CAAC;EACF,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC1Y,C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AACA;AACA;EACCre,CAAC,CAACye,cAAc,GAAG,UAAUja,KAAK,EAAE;IACnC;EAAA,CACA;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACCxE,CAAC,CAAC0e,WAAW,GAAG,UAAUla,KAAK,EAAE;IAChC;EAAA,CACA;;EAED;AACD;AACA;AACA;AACA;AACA;EACCxE,CAAC,CAACge,MAAM,GAAG,YAAY;IACtB;EAAA,CACA;;EAED;AACD;AACA;AACA;AACA;AACA;EACChe,CAAC,CAACie,OAAO,GAAG,YAAY;IACvB;EAAA,CACA;;EAED;AACD;AACA;AACA;AACA;AACA;EACCje,CAAC,CAAC+d,WAAW,GAAG,YAAW;IAC1B;EAAA,CACA;;EAED;AACD;AACA;AACA;AACA;AACA;EACC/d,CAAC,CAAC4e,cAAc,GAAG,YAAW;IAC7B;EAAA,CACA;;EAED;AACD;AACA;AACA;AACA;AACA;EACC5e,CAAC,CAAC+e,WAAW,GAAG,YAAY;IAC3B;EAAA,CACA;EAEDziB,QAAQ,CAAC0f,qBAAqB,GAAG1f,QAAQ,CAACW,OAAO,CAAC+e,qBAAqB,EAAE,iBAAiB,CAAC;EAC3F1f,QAAQ,CAACoe,oBAAoB,GAAGpe,QAAQ,CAAC0f,qBAAqB,CAAC,CAAC;AACjE,CAAC,EAAC,CAAC;;AAEH;AACA;AACA;;AAEA3f,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAI,CAAC,CAAC;AAEtC,aAAY;EACZ,YAAY;;EAGb;EACE;AACF;AACA;AACA;AACA;AACA;EAEC,IAAI0iB,cAAc,GAAG,SAAAA,CAAA,EAAY;IACjC;IACC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACrI,aAAa,GAAG,IAAI;;IAEzB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACsI,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;;IAEvB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,eAAe,GAAG,CAAC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"},"metadata":{},"sourceType":"script"}