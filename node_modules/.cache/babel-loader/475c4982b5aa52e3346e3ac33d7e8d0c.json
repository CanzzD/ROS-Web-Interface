{"ast":null,"code":"import 'latest-createjs';\nimport ROS2D from './ros2d';\nimport ROSLIB from 'roslib';\nimport createjs from 'createjs-module';\nimport Config from '../../scripts/config';\nvar NAV2D = NAV2D || {\n  REVISION: '0.3.0'\n};\nvar count = null;\nvar robotvisible = false;\nNAV2D.ImageMapClientNav = function (options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  var topic = options.topic || '/map_metadata';\n  var image = options.image;\n  this.serverName = options.serverName || '/move_base';\n  this.actionName = options.actionName || 'move_base_msgs/MoveBaseAction';\n  this.rootObject = options.rootObject || new createjs.Container();\n  this.viewer = options.viewer;\n  this.withOrientation = options.withOrientation || true;\n  this.navigator = null;\n\n  // setup a client to get the map\n  var client = new ROS2D.ImageMapClient({\n    ros: this.ros,\n    rootObject: this.rootObject,\n    topic: topic,\n    image: image\n  });\n  client.on('change', function () {\n    that.navigator = new NAV2D.Navigator({\n      ros: that.ros,\n      serverName: that.serverName,\n      actionName: that.actionName,\n      rootObject: that.rootObject,\n      withOrientation: that.withOrientation\n    });\n\n    // scale the viewer to fit the map\n\n    that.viewer.scaleToDimensions(client.currentImage.width, client.currentImage.height);\n    that.viewer.shift(client.currentImage.pose.position.x, client.currentImage.pose.position.y);\n  });\n  this.removeImg = client.removeImg;\n  this.addImg = client.addImg;\n};\nNAV2D.Navigator = function (options) {\n  var that = this;\n  options = options || {};\n  var ros = options.ros;\n  var serverName = options.serverName || '/move_base';\n  var actionName = options.actionName || 'move_base_msgs/MoveBaseAction';\n  var withOrientation = options.withOrientation || true;\n  this.rootObject = options.rootObject || new createjs.Container();\n\n  // setup the actionlib client\n  var actionClient = new ROSLIB.ActionClient({\n    ros: ros,\n    actionName: actionName,\n    serverName: serverName\n  });\n  function homefunc(pose) {\n    var robot = new ROSLIB.Topic({\n      ros: ros,\n      name: '/initialpose',\n      messageType: 'geometry_msgs/PoseWithCovarianceStamped'\n    });\n    var posee = new ROSLIB.Message({\n      header: {\n        frame_id: \"map\"\n      },\n      pose: {\n        pose: {\n          position: {\n            x: pose.position.x,\n            y: pose.position.y,\n            z: 0.0\n          },\n          orientation: {\n            z: pose.orientation.z,\n            w: pose.orientation.w\n          }\n        },\n        covariance: [0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06853891945200942]\n      }\n    });\n    robot.publish(posee);\n    homing = false;\n    navigation = false;\n  }\n\n  /**\n   * Send a goal to the navigation stack with the given pose.\n   *\n   * @param pose - the goal pose\n   */\n  function sendGoal(pose) {\n    var targetPath;\n    var goal = new ROSLIB.Goal({\n      actionClient: actionClient,\n      goalMessage: {\n        target_pose: {\n          header: {\n            frame_id: '/map'\n          },\n          pose: pose\n        }\n      }\n    });\n    goal.send();\n    var goalMarker = new ROS2D.NavigationArrow({\n      size: 15,\n      strokeSize: 1,\n      fillColor: createjs.Graphics.getRGB(255, 64, 128, 0.66),\n      pulse: true\n    });\n    goalMarker.x = pose.position.x;\n    goalMarker.y = -pose.position.y;\n    goalMarker.rotation = stage.rosQuaternionToGlobalTheta(pose.orientation);\n    goalMarker.scaleX = 1.0 / stage.scaleX;\n    goalMarker.scaleY = 1.0 / stage.scaleY;\n    that.rootObject.addChild(goalMarker);\n    goal.on('result', function () {\n      that.rootObject.removeChild(goalMarker);\n      navigation = false;\n    });\n  }\n\n  // get a handle to the stage\n\n  var stage;\n  if (that.rootObject instanceof createjs.Stage) {\n    stage = that.rootObject;\n  } else {\n    stage = that.rootObject.getStage();\n  }\n\n  // marker for the robot\n  var robotMarker = new ROS2D.NavigationArrow({\n    size: 25,\n    strokeSize: 1,\n    fillColor: createjs.Graphics.getRGB(255, 128, 0, 0.66),\n    pulse: true\n  });\n\n  // wait for a pose to come in first\n  robotMarker.visible = false;\n  count = count + 1;\n  if (count == 1 || robotvisible == true) {\n    that.rootObject.addChild(robotMarker);\n    robotvisible = false;\n  }\n  var initScaleSet = false;\n\n  // setup a listener for the robot pose\n  var poseListener = new ROSLIB.Topic({\n    ros: ros,\n    name: '/robot_pose',\n    messageType: 'geometry_msgs/Pose',\n    throttle_rate: 1\n  });\n  poseListener.subscribe(function (pose) {\n    // update the robots position on the map\n    robotMarker.x = pose.position.x;\n    robotMarker.y = -pose.position.y;\n    if (!initScaleSet) {\n      robotMarker.scaleX = 1.0 / stage.scaleX;\n      robotMarker.scaleY = 1.0 / stage.scaleY;\n      initScaleSet = true;\n    }\n\n    // change the angle\n    robotMarker.rotation = stage.rosQuaternionToGlobalTheta(pose.orientation);\n    robotMarker.visible = true;\n  });\n  var pathView = null,\n    pathTopic = null;\n  window.pathed = function () {\n    pathView = new ROS2D.PathShape({\n      ros: ros,\n      strokeSize: 0.02,\n      strokeColor: \"green\"\n    });\n    that.rootObject.addChild(pathView);\n    pathTopic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/move_base/NavfnROS/plan',\n      messageType: 'nav_msgs/Path'\n    });\n    pathTopic.subscribe(function (message) {\n      pathView.setPath(message);\n    });\n  };\n  window.upathed = function () {\n    that.rootObject.removeChild(pathView);\n    if (pathTopic) {\n      pathTopic.unsubscribe();\n    }\n    pathView = null;\n    pathTopic = null;\n  };\n  var position = null;\n  var positionVec3 = null;\n  var thetaRadians = 0;\n  var thetaDegrees = 0;\n  var orientationMarker = null;\n  var mouseDown = false;\n  var xDelta = 0;\n  var yDelta = 0;\n  var panflag = true;\n  var pannavfunction = function (event, mouseState) {\n    // label:\n    if (navigation == true || homing == true) {\n      // var mouseEventHandler = function(event, mouseState) {\n\n      if (mouseState === 'down') {\n        // get position when mouse button is pressed down\n        position = stage.globalToRos(event.stageX, event.stageY);\n        positionVec3 = new ROSLIB.Vector3(position);\n        mouseDown = true;\n      } else if (mouseState === 'move') {\n        // remove obsolete orientation marker\n        that.rootObject.removeChild(orientationMarker);\n        if (mouseDown === true) {\n          // if mouse button is held down:\n          // - get current mouse position\n          // - calulate direction between stored <position> and current position\n          // - place orientation marker\n          var currentPos = stage.globalToRos(event.stageX, event.stageY);\n          var currentPosVec3 = new ROSLIB.Vector3(currentPos);\n          orientationMarker = new ROS2D.NavigationArrow({\n            size: 25,\n            strokeSize: 1,\n            fillColor: createjs.Graphics.getRGB(0, 255, 0, 0.66),\n            pulse: false\n          });\n          xDelta = currentPosVec3.x - positionVec3.x;\n          yDelta = currentPosVec3.y - positionVec3.y;\n          thetaRadians = Math.atan2(xDelta, yDelta);\n          thetaDegrees = thetaRadians * (180.0 / Math.PI);\n          if (thetaDegrees >= 0 && thetaDegrees <= 180) {\n            thetaDegrees += 270;\n          } else {\n            thetaDegrees -= 90;\n          }\n          orientationMarker.x = positionVec3.x;\n          orientationMarker.y = -positionVec3.y;\n          orientationMarker.rotation = thetaDegrees;\n          orientationMarker.scaleX = 1.0 / stage.scaleX;\n          orientationMarker.scaleY = 1.0 / stage.scaleY;\n          that.rootObject.addChild(orientationMarker);\n        }\n      } else if (mouseDown) {\n        // mouseState === 'up'\n        // if mouse button is released\n        // - get current mouse position (goalPos)\n        // - calulate direction between stored <position> and goal position\n        // - set pose with orientation\n        // - send goal\n        mouseDown = false;\n        var goalPos = stage.globalToRos(event.stageX, event.stageY);\n        var goalPosVec3 = new ROSLIB.Vector3(goalPos);\n        xDelta = goalPosVec3.x - positionVec3.x;\n        yDelta = goalPosVec3.y - positionVec3.y;\n        thetaRadians = Math.atan2(xDelta, yDelta);\n        if (thetaRadians >= 0 && thetaRadians <= Math.PI) {\n          thetaRadians += 3 * Math.PI / 2;\n        } else {\n          thetaRadians -= Math.PI / 2;\n        }\n        var qz = Math.sin(-thetaRadians / 2.0);\n        var qw = Math.cos(-thetaRadians / 2.0);\n        var orientation = new ROSLIB.Quaternion({\n          x: 0,\n          y: 0,\n          z: qz,\n          w: qw\n        });\n        var pose = new ROSLIB.Pose({\n          position: positionVec3,\n          orientation: orientation\n        });\n        // send the goal\n        if (navigation == true) {\n          sendGoal(pose);\n        }\n        if (homing == true) {\n          homefunc(pose);\n        }\n        navigation = false;\n      }\n    }\n    if (!homing && !navigation) {\n      if (mouseState === 'down' && typeof pane === \"function\") {\n        pane(event.stageX, event.stageY);\n        panflag = true;\n      } else if (mouseState === 'up') {\n        // console.log(\"hi up here\");\n        panflag = false;\n      } else if (mouseState === 'move' && typeof pane === \"function\") {\n        mouseDown = false;\n        that.rootObject.removeChild(orientationMarker);\n        if (panflag) {\n          paned(event.stageX, event.stageY);\n        }\n      }\n    }\n  };\n  this.rootObject.addEventListener('stagemousedown', function (event) {\n    pannavfunction(event, 'down');\n    that.rootObject.addEventListener('stagemousemove', function (event) {\n      pannavfunction(event, 'move');\n    });\n  });\n  this.rootObject.addEventListener('stagemouseup', function (event) {\n    pannavfunction(event, 'up');\n  });\n};\nNAV2D.OccupancyGridClientNav = function (options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  var topic = options.topic || '/map';\n  var continuous = options.continuous;\n  this.serverName = options.serverName || '/move_base';\n  this.actionName = options.actionName || 'move_base_msgs/MoveBaseAction';\n  this.rootObject = options.rootObject || new createjs.Container();\n  this.viewer = options.viewer;\n  this.withOrientation = options.withOrientation || true;\n  this.navigator = null;\n\n  // setup a client to get the map\n  var client = new ROS2D.OccupancyGridClient({\n    ros: this.ros,\n    rootObject: this.rootObject,\n    continuous: continuous,\n    topic: topic\n  });\n  client.on('change', function () {\n    that.navigator = new NAV2D.Navigator({\n      ros: that.ros,\n      serverName: that.serverName,\n      actionName: that.actionName,\n      rootObject: that.rootObject,\n      withOrientation: that.withOrientation\n    });\n\n    // scale the viewer to fit the map\n    that.viewer.scaleToDimensions(client.currentGrid.width, client.currentGrid.height);\n    that.viewer.shift(client.currentGrid.pose.position.x, client.currentGrid.pose.position.y);\n  });\n};\nexport default NAV2D;","map":{"version":3,"names":["ROS2D","ROSLIB","createjs","Config","NAV2D","REVISION","count","robotvisible","ImageMapClientNav","options","that","ros","topic","image","serverName","actionName","rootObject","Container","viewer","withOrientation","navigator","client","ImageMapClient","on","Navigator","scaleToDimensions","currentImage","width","height","shift","pose","position","x","y","removeImg","addImg","actionClient","ActionClient","homefunc","robot","Topic","name","messageType","posee","Message","header","frame_id","z","orientation","w","covariance","publish","homing","navigation","sendGoal","targetPath","goal","Goal","goalMessage","target_pose","send","goalMarker","NavigationArrow","size","strokeSize","fillColor","Graphics","getRGB","pulse","rotation","stage","rosQuaternionToGlobalTheta","scaleX","scaleY","addChild","removeChild","Stage","getStage","robotMarker","visible","initScaleSet","poseListener","throttle_rate","subscribe","pathView","pathTopic","window","pathed","PathShape","strokeColor","message","setPath","upathed","unsubscribe","positionVec3","thetaRadians","thetaDegrees","orientationMarker","mouseDown","xDelta","yDelta","panflag","pannavfunction","event","mouseState","globalToRos","stageX","stageY","Vector3","currentPos","currentPosVec3","Math","atan2","PI","goalPos","goalPosVec3","qz","sin","qw","cos","Quaternion","Pose","pane","paned","addEventListener","OccupancyGridClientNav","continuous","OccupancyGridClient","currentGrid"],"sources":["/Users/canozdemir/Downloads/web-based-navigation-rosbridge/src/components/vendor/nav2d.js"],"sourcesContent":["import 'latest-createjs'\nimport ROS2D from './ros2d'\nimport ROSLIB from 'roslib'\nimport createjs from 'createjs-module';\nimport Config from '../../scripts/config';\n\n\nvar NAV2D = NAV2D || {\n  REVISION: '0.3.0'\n};\n\nvar count =null;\nvar robotvisible=false;\n\n\n\n\nNAV2D.ImageMapClientNav = function(options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  var topic = options.topic || '/map_metadata';\n  var image = options.image;\n  this.serverName = options.serverName || '/move_base';\n  this.actionName = options.actionName || 'move_base_msgs/MoveBaseAction';\n  this.rootObject = options.rootObject || new createjs.Container();\n  this.viewer = options.viewer;\n  this.withOrientation = options.withOrientation || true;\n  this.navigator = null;\n\n  // setup a client to get the map\n  var client = new ROS2D.ImageMapClient({\n      ros: this.ros,\n      rootObject: this.rootObject,\n      topic: topic,\n      image: image\n  });\n  client.on('change', function() {\n\n      that.navigator = new NAV2D.Navigator({\n          ros: that.ros,\n          serverName: that.serverName,\n          actionName: that.actionName,\n          rootObject: that.rootObject,\n          withOrientation: that.withOrientation\n      });\n\n\n      // scale the viewer to fit the map\n\n      that.viewer.scaleToDimensions(client.currentImage.width, client.currentImage.height);\n\n      that.viewer.shift(client.currentImage.pose.position.x, client.currentImage.pose.position.y);\n\n  });\n\n  this.removeImg = client.removeImg;\n\n  this.addImg = client.addImg;\n \n};\n\n\n\nNAV2D.Navigator = function(options) {\n  var that = this;\n  options = options || {};\n  var ros = options.ros;\n  var serverName = options.serverName || '/move_base';\n  var actionName = options.actionName || 'move_base_msgs/MoveBaseAction';\n  var withOrientation = options.withOrientation || true;\n  this.rootObject = options.rootObject || new createjs.Container();\n\n  // setup the actionlib client\n  var actionClient = new ROSLIB.ActionClient({\n      ros: ros,\n      actionName: actionName,\n      serverName: serverName\n  });\n\n  function homefunc(pose) {\n      var robot = new ROSLIB.Topic({\n          ros: ros,\n          name: '/initialpose',\n          messageType: 'geometry_msgs/PoseWithCovarianceStamped'\n      });\n\n      var posee = new ROSLIB.Message({ header: { frame_id: \"map\" }, pose: { pose: { position: { x: pose.position.x, y: pose.position.y, z: 0.0 }, orientation: { z: pose.orientation.z, w: pose.orientation.w } }, covariance: [0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06853891945200942] } });\n      robot.publish(posee);\n      homing = false;\n      navigation = false;\n\n  }\n\n  /**\n   * Send a goal to the navigation stack with the given pose.\n   *\n   * @param pose - the goal pose\n   */\n  function sendGoal(pose) {\n      var targetPath;\n\n\n      var goal = new ROSLIB.Goal({\n          actionClient: actionClient,\n          goalMessage: {\n              target_pose: {\n                  header: {\n                      frame_id: '/map'\n                  },\n                  pose: pose\n              }\n          }\n      });\n\n      goal.send();\n\n\n\n      var goalMarker = new ROS2D.NavigationArrow({\n          size: 15,\n          strokeSize: 1,\n          fillColor: createjs.Graphics.getRGB(255, 64, 128, 0.66),\n          pulse: true\n      });\n\n      goalMarker.x = pose.position.x;\n      goalMarker.y = -pose.position.y;\n      goalMarker.rotation = stage.rosQuaternionToGlobalTheta(pose.orientation);\n      goalMarker.scaleX = 1.0 / stage.scaleX;\n      goalMarker.scaleY = 1.0 / stage.scaleY;\n      that.rootObject.addChild(goalMarker);\n\n      goal.on('result', function() {\n          that.rootObject.removeChild(goalMarker);\n          navigation = false;\n\n      });\n  }\n\n  // get a handle to the stage\n\n  var stage;\n\n  if (that.rootObject instanceof createjs.Stage) {\n      stage = that.rootObject;\n  } else {\n      stage = that.rootObject.getStage();\n  }\n\n  // marker for the robot\n  var robotMarker = new ROS2D.NavigationArrow({\n  size : 25,\n  strokeSize : 1,\n  fillColor : createjs.Graphics.getRGB(255, 128, 0, 0.66),\n  pulse : true\n});\n\n  // wait for a pose to come in first\n  robotMarker.visible = false;\n\n\n  count=count+1\n  if (count == 1 || robotvisible == true){\n      that.rootObject.addChild(robotMarker);\n      robotvisible=false;\n  }\n\n\n  var initScaleSet = false;\n\n  // setup a listener for the robot pose\n  var poseListener = new ROSLIB.Topic({\n      ros: ros,\n      name: '/robot_pose',\n      messageType: 'geometry_msgs/Pose',\n      throttle_rate: 1\n  });\n\n  poseListener.subscribe(function(pose) {\n      // update the robots position on the map\n      robotMarker.x = pose.position.x;\n      robotMarker.y = -pose.position.y;\n\n      if (!initScaleSet) {\n      robotMarker.scaleX = 1.0 / stage.scaleX;\n      robotMarker.scaleY = 1.0 / stage.scaleY;\n      initScaleSet = true;\n      }\n\n      // change the angle\n      robotMarker.rotation = stage.rosQuaternionToGlobalTheta(pose.orientation);\n\n      robotMarker.visible = true;\n  });\n\n  var pathView = null,\n      pathTopic = null;\n\n  window.pathed = function() {\n\n      pathView = new ROS2D.PathShape({\n          ros: ros,\n          strokeSize: 0.02,\n          strokeColor: \"green\",\n      });\n\n      that.rootObject.addChild(pathView);\n\n      pathTopic = new ROSLIB.Topic({\n          ros: ros,\n          name: '/move_base/NavfnROS/plan',\n          messageType: 'nav_msgs/Path'\n      });\n\n      pathTopic.subscribe(function(message) {\n          pathView.setPath(message);\n      });\n\n  }\n\n  window.upathed = function() {\n      that.rootObject.removeChild(pathView);\n      if (pathTopic) {\n          pathTopic.unsubscribe();\n      }\n      pathView = null;\n      pathTopic = null;\n  }\n\n\n\n  var position = null;\n  var positionVec3 = null;\n  var thetaRadians = 0;\n  var thetaDegrees = 0;\n  var orientationMarker = null;\n  var mouseDown = false;\n  var xDelta = 0;\n  var yDelta = 0;\n  var panflag = true;\n\n  var pannavfunction = function(event, mouseState) {\n      // label:\n      if (navigation == true || homing == true) {\n          // var mouseEventHandler = function(event, mouseState) {\n\n          if (mouseState === 'down') {\n              // get position when mouse button is pressed down\n              position = stage.globalToRos(event.stageX, event.stageY);\n              positionVec3 = new ROSLIB.Vector3(position);\n              mouseDown = true;\n          } else if (mouseState === 'move') {\n              // remove obsolete orientation marker\n              that.rootObject.removeChild(orientationMarker);\n\n              if (mouseDown === true) {\n\n                  // if mouse button is held down:\n                  // - get current mouse position\n                  // - calulate direction between stored <position> and current position\n                  // - place orientation marker\n                  var currentPos = stage.globalToRos(event.stageX, event.stageY);\n                  var currentPosVec3 = new ROSLIB.Vector3(currentPos);\n\n                  orientationMarker = new ROS2D.NavigationArrow({\n                      size: 25,\n                      strokeSize: 1,\n                      fillColor: createjs.Graphics.getRGB(0, 255, 0, 0.66),\n                      pulse: false\n                  });\n\n                  xDelta = currentPosVec3.x - positionVec3.x;\n                  yDelta = currentPosVec3.y - positionVec3.y;\n\n                  thetaRadians = Math.atan2(xDelta, yDelta);\n\n                  thetaDegrees = thetaRadians * (180.0 / Math.PI);\n\n                  if (thetaDegrees >= 0 && thetaDegrees <= 180) {\n                      thetaDegrees += 270;\n                  } else {\n                      thetaDegrees -= 90;\n                  }\n\n                  orientationMarker.x = positionVec3.x;\n                  orientationMarker.y = -positionVec3.y;\n                  orientationMarker.rotation = thetaDegrees;\n                  orientationMarker.scaleX = 1.0 / stage.scaleX;\n                  orientationMarker.scaleY = 1.0 / stage.scaleY;\n                      that.rootObject.addChild(orientationMarker);\n                  \n              \n          }} else if (mouseDown) { // mouseState === 'up'\n              // if mouse button is released\n              // - get current mouse position (goalPos)\n              // - calulate direction between stored <position> and goal position\n              // - set pose with orientation\n              // - send goal\n              mouseDown = false;\n\n\n              var goalPos = stage.globalToRos(event.stageX, event.stageY);\n\n              var goalPosVec3 = new ROSLIB.Vector3(goalPos);\n\n              xDelta = goalPosVec3.x - positionVec3.x;\n              yDelta = goalPosVec3.y - positionVec3.y;\n\n              thetaRadians = Math.atan2(xDelta, yDelta);\n\n              if (thetaRadians >= 0 && thetaRadians <= Math.PI) {\n                  thetaRadians += (3 * Math.PI / 2);\n              } else {\n                  thetaRadians -= (Math.PI / 2);\n              }\n\n              var qz = Math.sin(-thetaRadians / 2.0);\n              var qw = Math.cos(-thetaRadians / 2.0);\n\n              var orientation = new ROSLIB.Quaternion({\n                  x: 0,\n                  y: 0,\n                  z: qz,\n                  w: qw\n              });\n\n              var pose = new ROSLIB.Pose({\n                  position: positionVec3,\n                  orientation: orientation\n              });\n              // send the goal\n              if (navigation == true) {\n                  sendGoal(pose);\n              }\n              if (homing == true) {\n                  homefunc(pose);\n              }\n\n              navigation = false;\n\n          }\n      }\n\n       \n          if (!homing && !navigation) {\n\n\n              if (mouseState === 'down' && typeof pane === \"function\") {\n\n                  pane(event.stageX, event.stageY);\n\n                  panflag = true;\n              } else if (mouseState === 'up') {\n                  // console.log(\"hi up here\");\n                  panflag = false;\n\n              } else if (mouseState === 'move' && typeof pane === \"function\") {\n\n                  mouseDown = false;\n                  that.rootObject.removeChild(orientationMarker);\n\n                  if (panflag) {\n                      paned(event.stageX, event.stageY);\n                  }\n              }\n          }\n     \n  };\n\n  this.rootObject.addEventListener('stagemousedown', function(event) {\n      pannavfunction(event, 'down');\n      that.rootObject.addEventListener('stagemousemove', function(event) {\n          pannavfunction(event, 'move');\n\n      });\n\n  });\n\n  this.rootObject.addEventListener('stagemouseup', function(event) {\n      pannavfunction(event, 'up');\n  });\n};\n\n\n\nNAV2D.OccupancyGridClientNav = function(options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  var topic = options.topic || '/map';\n  var continuous = options.continuous;\n  this.serverName = options.serverName || '/move_base';\n  this.actionName = options.actionName || 'move_base_msgs/MoveBaseAction';\n  this.rootObject = options.rootObject || new createjs.Container();\n  this.viewer = options.viewer;\n  this.withOrientation = options.withOrientation || true;\n  this.navigator = null;\n\n  // setup a client to get the map\n  var client = new ROS2D.OccupancyGridClient({\n      ros: this.ros,\n      rootObject: this.rootObject,\n      continuous: continuous,\n      topic: topic\n  });\n  client.on('change', function() {\n\n      that.navigator = new NAV2D.Navigator({\n          ros: that.ros,\n          serverName: that.serverName,\n          actionName: that.actionName,\n          rootObject: that.rootObject,\n          withOrientation: that.withOrientation\n      });\n\n      // scale the viewer to fit the map\n      that.viewer.scaleToDimensions(client.currentGrid.width, client.currentGrid.height);\n      that.viewer.shift(client.currentGrid.pose.position.x, client.currentGrid.pose.position.y);\n  });\n\n};\n\n\n\n\nexport default NAV2D"],"mappings":"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"},"metadata":{},"sourceType":"module"}