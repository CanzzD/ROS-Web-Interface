{"ast":null,"code":"import 'latest-createjs';\nimport ROSLIB from 'roslib';\nimport EventEmitter2 from 'eventemitter2';\nimport createjs from 'createjs-module';\n\n/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar ROS2D = ROS2D || {\n  /**\n   * @default\n   * @description Library version\n   */\n  REVISION: '0.10.0'\n};\n\n// convert the given global Stage coordinates to ROS coordinates\ncreatejs.Stage.prototype.globalToRos = function (x, y) {\n  var rosX = (x - this.x) / this.scaleX;\n  var rosY = (this.y - y) / this.scaleY;\n  return new ROSLIB.Vector3({\n    x: rosX,\n    y: rosY\n  });\n};\n\n// convert the given ROS coordinates to global Stage coordinates\ncreatejs.Stage.prototype.rosToGlobal = function (pos) {\n  var x = pos.x * this.scaleX + this.x;\n  var y = pos.y * this.scaleY + this.y;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n// convert a ROS quaternion to theta in degrees\ncreatejs.Stage.prototype.rosQuaternionToGlobalTheta = function (orientation) {\n  // See https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles#Rotation_matrices\n  // here we use [x y z] = R * [1 0 0]\n  var q0 = orientation.w;\n  var q1 = orientation.x;\n  var q2 = orientation.y;\n  var q3 = orientation.z;\n  // Canvas rotation is clock wise and in degrees\n  return -Math.atan2(2 * (q0 * q3 + q1 * q2), 1 - 2 * (q2 * q2 + q3 * q3)) * 180.0 / Math.PI;\n};\nexport default ROS2D;","map":{"version":3,"names":["ROSLIB","EventEmitter2","createjs","ROS2D","REVISION","Stage","prototype","globalToRos","x","y","rosX","scaleX","rosY","scaleY","Vector3","rosToGlobal","pos","rosQuaternionToGlobalTheta","orientation","q0","w","q1","q2","q3","z","Math","atan2","PI"],"sources":["/Users/canozdemir/Downloads/web-based-navigation-rosbridge/src/components/vendor/ros2d.js"],"sourcesContent":["import 'latest-createjs'\nimport ROSLIB from 'roslib'\nimport EventEmitter2 from 'eventemitter2'\nimport createjs from 'createjs-module';\n\n/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\n var ROS2D = ROS2D || {\n  /**\n   * @default\n   * @description Library version\n   */\n  REVISION : '0.10.0'\n};\n\n// convert the given global Stage coordinates to ROS coordinates\ncreatejs.Stage.prototype.globalToRos = function(x, y) {\n  var rosX = (x - this.x) / this.scaleX;\n  var rosY = (this.y - y) / this.scaleY;\n  return new ROSLIB.Vector3({\n    x : rosX,\n    y : rosY\n  });\n};\n\n// convert the given ROS coordinates to global Stage coordinates\ncreatejs.Stage.prototype.rosToGlobal = function(pos) {\n  var x = pos.x * this.scaleX + this.x;\n  var y = pos.y * this.scaleY + this.y;\n  return {\n    x : x,\n    y : y\n  };\n};\n\n// convert a ROS quaternion to theta in degrees\ncreatejs.Stage.prototype.rosQuaternionToGlobalTheta = function(orientation) {\n  // See https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles#Rotation_matrices\n  // here we use [x y z] = R * [1 0 0]\n  var q0 = orientation.w;\n  var q1 = orientation.x;\n  var q2 = orientation.y;\n  var q3 = orientation.z;\n  // Canvas rotation is clock wise and in degrees\n  return -Math.atan2(2 * (q0 * q3 + q1 * q2), 1 - 2 * (q2 * q2 + q3 * q3)) * 180.0 / Math.PI;\n};\n\nexport default ROS2D"],"mappings":"AAAA,OAAO,iBAAiB;AACxB,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,QAAQ,MAAM,iBAAiB;;AAEtC;AACA;AACA;AACA;;AAEC,IAAIC,KAAK,GAAGA,KAAK,IAAI;EACpB;AACF;AACA;AACA;EACEC,QAAQ,EAAG;AACb,CAAC;;AAED;AACAF,QAAQ,CAACG,KAAK,CAACC,SAAS,CAACC,WAAW,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACpD,IAAIC,IAAI,GAAG,CAACF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAI,IAAI,CAACG,MAAM;EACrC,IAAIC,IAAI,GAAG,CAAC,IAAI,CAACH,CAAC,GAAGA,CAAC,IAAI,IAAI,CAACI,MAAM;EACrC,OAAO,IAAIb,MAAM,CAACc,OAAO,CAAC;IACxBN,CAAC,EAAGE,IAAI;IACRD,CAAC,EAAGG;EACN,CAAC,CAAC;AACJ,CAAC;;AAED;AACAV,QAAQ,CAACG,KAAK,CAACC,SAAS,CAACS,WAAW,GAAG,UAASC,GAAG,EAAE;EACnD,IAAIR,CAAC,GAAGQ,GAAG,CAACR,CAAC,GAAG,IAAI,CAACG,MAAM,GAAG,IAAI,CAACH,CAAC;EACpC,IAAIC,CAAC,GAAGO,GAAG,CAACP,CAAC,GAAG,IAAI,CAACI,MAAM,GAAG,IAAI,CAACJ,CAAC;EACpC,OAAO;IACLD,CAAC,EAAGA,CAAC;IACLC,CAAC,EAAGA;EACN,CAAC;AACH,CAAC;;AAED;AACAP,QAAQ,CAACG,KAAK,CAACC,SAAS,CAACW,0BAA0B,GAAG,UAASC,WAAW,EAAE;EAC1E;EACA;EACA,IAAIC,EAAE,GAAGD,WAAW,CAACE,CAAC;EACtB,IAAIC,EAAE,GAAGH,WAAW,CAACV,CAAC;EACtB,IAAIc,EAAE,GAAGJ,WAAW,CAACT,CAAC;EACtB,IAAIc,EAAE,GAAGL,WAAW,CAACM,CAAC;EACtB;EACA,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,IAAIP,EAAE,GAAGI,EAAE,GAAGF,EAAE,GAAGC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAIA,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGE,IAAI,CAACE,EAAE;AAC5F,CAAC;AAED,eAAexB,KAAK"},"metadata":{},"sourceType":"module"}